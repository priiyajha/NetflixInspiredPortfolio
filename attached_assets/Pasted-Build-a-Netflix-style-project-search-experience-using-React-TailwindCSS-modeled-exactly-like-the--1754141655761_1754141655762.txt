Build a Netflix-style project search experience using React + TailwindCSS, modeled exactly like the uploaded Netflix UI screenshot. This includes a fixed navigation bar with embedded search, a grid of matching project cards, and dynamic routing within the app using internal state.

🔲 Navigation Bar Layout:
A dark navigation bar (bg-[#141414]) fixed at the top with the following items:

Logo (Netflix style)

Navigation links: Home, TV Shows, Movies, Games, New & Popular, My List, Browse by Languages

On the far right, add:

Search bar container styled like Netflix:

Rectangular black input box (bg-black border border-white rounded)

Inside it:

A 🔍 search icon on the left

User input as text

❌ Cross icon (on right end) that:

Clears the search query

Returns user to the home page (reset grid)

Profile icon (placeholder)

🔍 Search Functionality:
Typing in the search box should:

Filter the project list by loose matching (case-insensitive includes match)

Match against:

project.title

project.director

project.role

On enter or after a pause (debounce optional), display results.

📄 Search Results Page Layout:
If there’s a match:

Display results in a grid of 4 columns

Best match (title match) appears first

Remaining matches follow (based on director and role)

If no matches found:

Show a large, centered text: "No results found" with text-white text-xl mt-20

🖼️ Grid/Card Layout (Matches Netflix):
Each card should include:

Project thumbnail (use placeholder images or real thumbnails)

Project title (overlay on hover or always visible)

Optional tags like “New Episode”, “Leaving Soon”, “Top 10” (show as badges)

Hover effect: slightly scale card (transform scale-105) and darken with overlay

Grid: grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4

🖱️ Card Click Behavior:
On click, open the project’s detail modal:

The modal is the same Netflix-style one you’ve already defined

Display looping video, restart/add-to-list buttons, two-column layout with blue neon separator, etc.

Modal uses internal state to load the clicked project’s data

🔄 Internal State Management (No URL params):
Use React state to:

Store full project list

Store search input

Store filtered search results

Control modal open/close and active project

🎨 Design & Aesthetic Requirements:
Background: #141414

Font: sans-serif, bold headers, soft gray body

Text: white and light gray shades

Neon blue accents allowed in modal only

Smooth transitions (transition-all duration-200 ease-in-out)
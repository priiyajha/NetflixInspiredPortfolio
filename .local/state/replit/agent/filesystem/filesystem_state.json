{"file_contents":{"DEPLOYMENT.md":{"content":"# Deployment Guide: Vercel + Render\n\nThis guide explains how to deploy your portfolio application using Vercel for the frontend and Render for the backend.\n\n## Architecture Overview\n\n- **Frontend**: React app deployed on Vercel\n- **Backend**: Express API deployed on Render\n- **Database**: PostgreSQL on Render\n\n## Prerequisites\n\n1. GitHub repository with your code\n2. Vercel account (free tier available)\n3. Render account (free tier available)\n\n## Step 1: Prepare Your Repository\n\n### 1.1 Update package.json scripts (manually add these)\n```json\n\"scripts\": {\n  \"build:client\": \"vite build\",\n  \"build:server\": \"esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist\",\n  \"start:server\": \"NODE_ENV=production node dist/index.js\"\n}\n```\n\n### 1.2 Update your backend to handle CORS\nAdd to `server/index.ts`:\n```typescript\nimport cors from 'cors';\n\napp.use(cors({\n  origin: ['https://your-vercel-domain.vercel.app', 'http://localhost:5173'],\n  credentials: true\n}));\n```\n\n## Step 2: Deploy Backend on Render\n\n### 2.1 Create PostgreSQL Database\n1. Go to Render Dashboard → New → PostgreSQL\n2. Choose a name: `portfolio-db`\n3. Select free tier\n4. Note the database connection string\n\n### 2.2 Deploy Backend Service\n1. Go to Render Dashboard → New → Web Service\n2. Connect your GitHub repository\n3. Configure:\n   - **Name**: `portfolio-backend`\n   - **Environment**: `Node`\n   - **Build Command**: `npm run build:server`\n   - **Start Command**: `npm run start:server`\n   - **Instance Type**: Free\n\n### 2.3 Set Environment Variables\nIn Render service settings:\n```\nNODE_ENV=production\nDATABASE_URL=[your-postgres-connection-string]\nPORT=10000\n```\n\n## Step 3: Deploy Frontend on Vercel\n\n### 3.1 Deploy to Vercel\n1. Go to Vercel Dashboard → New Project\n2. Import from GitHub repository\n3. Configure:\n   - **Framework Preset**: Vite\n   - **Root Directory**: `client`\n   - **Build Command**: `npm run build:client`\n   - **Output Directory**: `client/dist`\n\n### 3.2 Set Environment Variables\nIn Vercel project settings:\n```\nVITE_API_URL=https://your-render-backend.onrender.com\n```\n\n## Step 4: Update Frontend API Configuration\n\n### 4.1 Update queryClient.ts\n```typescript\nconst API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:5000';\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: async ({ queryKey }) => {\n        const response = await fetch(`${API_BASE_URL}${queryKey[0]}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      },\n    },\n  },\n});\n\nexport const apiRequest = async (url: string, options: RequestInit = {}) => {\n  const response = await fetch(`${API_BASE_URL}${url}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    ...options,\n  });\n  \n  if (!response.ok) {\n    throw new Error('API request failed');\n  }\n  \n  return response.json();\n};\n```\n\n## Step 5: Database Migration\n\n### 5.1 Run Database Push\nAfter backend deployment, run:\n```bash\nnpm run db:push\n```\n\n## Step 6: Custom Domains (Optional)\n\n### 6.1 Vercel Custom Domain\n1. Go to Vercel project → Settings → Domains\n2. Add your custom domain\n3. Update DNS records as instructed\n\n### 6.2 Render Custom Domain\n1. Go to Render service → Settings → Custom Domains\n2. Add your API subdomain (e.g., api.yourdomain.com)\n\n## Troubleshooting\n\n### Common Issues:\n1. **CORS Errors**: Ensure backend CORS is configured with frontend URL\n2. **Build Failures**: Check Node.js version compatibility\n3. **Database Connection**: Verify DATABASE_URL format\n4. **Environment Variables**: Ensure all required vars are set\n\n### Logs:\n- **Render**: View logs in service dashboard\n- **Vercel**: View deployment logs in project dashboard\n\n## Production URLs:\n- **Frontend**: `https://your-project.vercel.app`\n- **Backend**: `https://your-service.onrender.com`\n- **Database**: Managed by Render\n\n## Cost Estimate:\n- **Vercel**: Free tier (generous limits)\n- **Render**: Free tier for backend + database\n- **Total**: $0/month for small projects\n\n## Next Steps:\n1. Set up monitoring and alerts\n2. Configure backup strategies\n3. Set up CI/CD pipelines\n4. Add SSL certificates (automatic on both platforms)","size_bytes":4290},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"render.yaml":{"content":"services:\n  - type: web\n    name: portfolio-backend\n    env: node\n    buildCommand: npm run build:server\n    startCommand: npm run start:server\n    envVars:\n      - key: NODE_ENV\n        value: production\n      - key: DATABASE_URL\n        fromDatabase:\n          name: portfolio-db\n          property: connectionString\n\ndatabases:\n  - name: portfolio-db\n    databaseName: portfolio\n    user: portfolio_user","size_bytes":406},"replit.md":{"content":"# Portfolio Application - Farooq Chisty\n\n## Overview\n\nThis is a high-performance modern portfolio application built with a React frontend and Express backend, showcasing Farooq Chisty's projects and professional information in a Netflix-inspired dark theme. The application uses a monorepo structure with shared schemas and TypeScript throughout, optimized for fast loading and excellent user experience across all devices.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Build Tool**: Vite for fast development and optimized production builds\n- **UI Components**: Custom component library based on shadcn/ui with Radix UI primitives\n- **Styling**: Tailwind CSS with custom Netflix-themed dark mode\n- **State Management**: TanStack Query (React Query) for server state management\n- **Routing**: Wouter for lightweight client-side routing\n- **Animations**: Framer Motion for smooth transitions and effects\n\n### Backend Architecture\n- **Framework**: Express.js with TypeScript\n- **Runtime**: Node.js with ES modules\n- **Database**: PostgreSQL with Drizzle ORM\n- **Storage**: In-memory storage implementation with interface for easy database migration\n- **Development**: Hot reload with Vite integration\n\n### Key Design Decisions\n- **Monorepo Structure**: Shared schema definitions between client and server ensure type safety\n- **Dark Theme**: Netflix-inspired design with custom CSS variables for consistent theming\n- **Component Architecture**: Modular UI components with proper separation of concerns\n- **Type Safety**: Full TypeScript coverage with shared types and Zod validation\n\n## Key Components\n\n### Database Schema\n- **Projects Table**: Stores portfolio projects with metadata, technologies, and links\n- **Profile Table**: Contains professional information, skills, and contact details\n- **Type Safety**: Drizzle-zod integration for runtime validation\n\n### Frontend Components\n- **Header**: Fixed navigation with smooth scrolling to sections\n- **Hero Section**: Full-screen landing with background image and call-to-action\n- **Project Carousel**: Netflix-style horizontal scrolling project showcase\n- **Project Modal**: Detailed project view with external links\n- **About Section**: Professional bio and image display\n- **Footer**: Contact information and social links\n\n### Backend Services\n- **Storage Interface**: Abstract storage layer supporting both in-memory and database implementations\n- **Project APIs**: CRUD operations for projects with category filtering\n- **Profile APIs**: Professional information management\n- **Error Handling**: Centralized error handling with proper HTTP status codes\n\n## Data Flow\n\n1. **Initial Load**: Application fetches profile data and featured projects\n2. **Navigation**: Smooth scrolling between sections using intersection observers\n3. **Project Interaction**: Click handlers open detailed modals with project information\n4. **Data Fetching**: TanStack Query manages caching and background updates\n5. **Responsive Design**: Mobile-first approach with breakpoint-specific layouts\n\n## External Dependencies\n\n### Core Dependencies\n- **Database**: Neon PostgreSQL serverless database\n- **UI Library**: Radix UI primitives for accessible components\n- **Animation**: Framer Motion for interactive animations\n- **Form Handling**: React Hook Form with Zod validation\n- **Icons**: Lucide React for consistent iconography\n\n### Development Tools\n- **TypeScript**: Full type coverage across the stack\n- **Vite**: Development server and build tool\n- **PostCSS**: CSS processing with Tailwind\n- **ESBuild**: Fast production builds for server code\n\n## Deployment Strategy\n\n### Development\n- **Hot Reload**: Vite development server with Express integration\n- **Type Checking**: Continuous TypeScript validation\n- **Environment**: Development-specific configuration and error handling\n\n### Production\n- **Build Process**: \n  1. Vite builds optimized client bundle\n  2. ESBuild compiles server code to single file\n  3. Static assets served from Express\n- **Database**: Drizzle migrations for schema management\n- **Environment Variables**: \n  - `NODE_ENV=production` (required)\n  - `SESSION_SECRET` (required for session management)\n  - `DATABASE_URL` (required for database connection)\n  - `FRONTEND_URL` (required for CORS configuration)\n  - `PORT` (defaults to 5000)\n- **Session Management**: Express-session with secure configuration for production\n- **Error Handling**: Graceful startup error handling with detailed logging\n\n### Notable Implementation Details\n- **Replit Integration**: Special handling for Replit development environment\n- **Error Boundaries**: Graceful error handling with user-friendly messages\n- **Performance**: Lazy loading and optimized asset delivery\n- **Accessibility**: ARIA labels and keyboard navigation support\n- **Project Galleries**: Custom image galleries implemented for 10 major projects (Cazpro, Millionth Mile Marketing, DigiPay, Inventrax, FDX Sports, Codiste, ZO Labs, Zentrades, InboxBites, Solgames, Martian Wallet)\n- **Gallery Navigation**: Side-by-side image display with arrow controls for multi-image navigation\n- **Performance Optimizations**: Reduced assets from 181MB to 143MB (21% reduction), lazy loading for images, optimized video preloading, replaced background video with lightweight gradient, cleaned unused imports\n\n## Recent Changes (August 2025)\n\n### Deployment Fixes\n- **Session Management**: Added proper express-session configuration with SESSION_SECRET environment variable handling\n- **Environment Variables**: Implemented graceful fallbacks for missing environment variables with development/production validation\n- **Error Handling**: Added comprehensive server startup error handling with detailed logging\n- **Production Configuration**: Enhanced CORS and session security settings for production deployment\n- **Documentation**: Created .env.example file with all required environment variables for deployment","size_bytes":6039},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    screens: {\n      'xs': '475px',\n      'sm': '640px',\n      'md': '768px',\n      'lg': '1024px',\n      'xl': '1280px',\n      '2xl': '1400px',\n    },\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2779},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/cron-ping.js":{"content":"c// External cron job script to ping your Render service\n// This can be used with external cron services like cron-job.org or GitHub Actions\n\nconst SERVICE_URL = process.env.RENDER_SERVICE_URL || 'https://your-service.onrender.com';\n\nasync function pingService() {\n  try {\n    const response = await fetch(`${SERVICE_URL}/api/health`);\n    if (response.ok) {\n      console.log(`✅ Service is alive: ${response.status}`);\n      return true;\n    } else {\n      console.log(`❌ Service ping failed: ${response.status}`);\n      return false;\n    }\n  } catch (error) {\n    console.error('❌ Ping error:', error.message);\n    return false;\n  }\n}\n\n// Run the ping\npingService()\n  .then(success => {\n    process.exit(success ? 0 : 1);\n  })\n  .catch(error => {\n    console.error('Fatal error:', error);\n    process.exit(1);\n  });","size_bytes":823},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport cors from \"cors\";\nimport session from \"express-session\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport { keepAliveService } from \"./keepAlive\";\nimport path from \"path\";\n\n// Environment variable validation and fallbacks\nconst NODE_ENV = process.env.NODE_ENV || 'development';\nconst SESSION_SECRET = process.env.SESSION_SECRET || 'fallback-secret-key-for-development-only';\nconst PORT = parseInt(process.env.PORT || '5000', 10);\nconst FRONTEND_URL = process.env.FRONTEND_URL || 'https://your-vercel-domain.vercel.app';\n\n// Log environment configuration in development\nif (NODE_ENV === 'development') {\n  log('Environment configuration:');\n  log(`- NODE_ENV: ${NODE_ENV}`);\n  log(`- PORT: ${PORT}`);\n  log(`- SESSION_SECRET: ${SESSION_SECRET === 'fallback-secret-key-for-development-only' ? 'Using fallback secret' : 'Custom secret configured'}`);\n  log(`- FRONTEND_URL: ${FRONTEND_URL}`);\n}\n\n// Warn about production security issues\nif (NODE_ENV === 'production' && SESSION_SECRET === 'fallback-secret-key-for-development-only') {\n  console.warn('WARNING: Using fallback SESSION_SECRET in production. Please set a secure SESSION_SECRET environment variable.');\n}\n\nconst app = express();\n\n// Session configuration\napp.use(session({\n  secret: SESSION_SECRET,\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    secure: NODE_ENV === 'production', // Use secure cookies in production\n    httpOnly: true,\n    maxAge: 24 * 60 * 60 * 1000 // 24 hours\n  }\n}));\n\n// CORS configuration for production deployment\napp.use(cors({\n  origin: NODE_ENV === 'production' \n    ? [FRONTEND_URL]\n    : ['http://localhost:5173', 'http://localhost:3000'],\n  credentials: true,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization']\n}));\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  try {\n    const server = await registerRoutes(app);\n\n    // Serve static assets from attached_assets directory before Vite middleware\n    app.use('/attached_assets', express.static(path.join(process.cwd(), 'attached_assets')));\n\n    app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n      const status = err.status || err.statusCode || 500;\n      const message = err.message || \"Internal Server Error\";\n\n      res.status(status).json({ message });\n      throw err;\n    });\n\n    // importantly only setup vite in development and after\n    // setting up all the other routes so the catch-all route\n    // doesn't interfere with the other routes\n    if (NODE_ENV === \"development\") {\n      await setupVite(app, server);\n    } else {\n      serveStatic(app);\n    }\n\n    // ALWAYS serve the app on the port specified in the environment variable PORT\n    // Other ports are firewalled. Default to 5000 if not specified.\n    // this serves both the API and the client.\n    // It is the only port that is not firewalled.\n    server.listen({\n      port: PORT,\n      host: \"0.0.0.0\",\n      reusePort: true,\n    }, () => {\n      log(`serving on port ${PORT}`);\n      log(`environment: ${NODE_ENV}`);\n      \n      // Start keep-alive service in production\n      if (NODE_ENV === 'production') {\n        keepAliveService.start();\n      } else {\n        log('Keep-alive service skipped in development');\n      }\n    });\n\n  } catch (error) {\n    console.error('Failed to start server:', error);\n    console.error('Environment variables:');\n    console.error(`- NODE_ENV: ${NODE_ENV}`);\n    console.error(`- PORT: ${PORT}`);\n    console.error(`- SESSION_SECRET: ${SESSION_SECRET ? 'Set' : 'Not set'}`);\n    process.exit(1);\n  }\n})();\n","size_bytes":4518},"server/keepAlive.ts":{"content":"// Using node-fetch for compatibility\nimport fetch from 'node-fetch';\n\n/**\n * Keep-alive service to prevent Render from sleeping\n * This will ping the service every 14 minutes to keep it active\n */\nexport class KeepAliveService {\n  private intervalId: NodeJS.Timeout | null = null;\n  private readonly pingInterval = 14 * 60 * 1000; // 14 minutes in milliseconds\n  private readonly serviceUrl: string;\n\n  constructor(serviceUrl?: string) {\n    // Use environment variable or construct from current service\n    this.serviceUrl = serviceUrl || \n      process.env.RENDER_EXTERNAL_URL || \n      `https://${process.env.RENDER_SERVICE_NAME}.onrender.com` ||\n      'http://localhost:5000';\n  }\n\n  /**\n   * Start the keep-alive service\n   * Only runs in production environment\n   */\n  public start(): void {\n    if (process.env.NODE_ENV !== 'production') {\n      console.log('Keep-alive service skipped in development');\n      return;\n    }\n\n    console.log(`Starting keep-alive service for ${this.serviceUrl}`);\n    \n    this.intervalId = setInterval(() => {\n      this.pingService();\n    }, this.pingInterval);\n\n    // Initial ping after 1 minute\n    setTimeout(() => {\n      this.pingService();\n    }, 60000);\n  }\n\n  /**\n   * Stop the keep-alive service\n   */\n  public stop(): void {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n      console.log('Keep-alive service stopped');\n    }\n  }\n\n  /**\n   * Ping the service to keep it alive\n   */\n  private async pingService(): Promise<void> {\n    try {\n      // Create an AbortController for timeout handling\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout\n\n      const response = await fetch(`${this.serviceUrl}/api/health`, {\n        method: 'GET',\n        signal: controller.signal,\n      });\n\n      clearTimeout(timeoutId);\n\n      if (response.ok) {\n        console.log(`Keep-alive ping successful: ${response.status}`);\n      } else {\n        console.warn(`Keep-alive ping failed: ${response.status}`);\n      }\n    } catch (error) {\n      if (error instanceof Error && error.name === 'AbortError') {\n        console.error('Keep-alive ping timed out');\n      } else {\n        console.error('Keep-alive ping error:', error instanceof Error ? error.message : 'Unknown error');\n      }\n    }\n  }\n}\n\nexport const keepAliveService = new KeepAliveService();","size_bytes":2433},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Health check endpoint for keep-alive service\n  app.get(\"/api/health\", (req, res) => {\n    res.status(200).json({ \n      status: \"ok\", \n      timestamp: new Date().toISOString(),\n      uptime: process.uptime()\n    });\n  });\n\n  // Get all projects\n  app.get(\"/api/projects\", async (req, res) => {\n    try {\n      const projects = await storage.getProjects();\n      res.json(projects);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch projects\" });\n    }\n  });\n\n  // Get featured projects\n  app.get(\"/api/projects/featured\", async (req, res) => {\n    try {\n      const projects = await storage.getFeaturedProjects();\n      res.json(projects);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch featured projects\" });\n    }\n  });\n\n  // Get projects by category\n  app.get(\"/api/projects/category/:category\", async (req, res) => {\n    try {\n      const { category } = req.params;\n      const projects = await storage.getProjectsByCategory(category);\n      res.json(projects);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch projects by category\" });\n    }\n  });\n\n  // Get single project\n  app.get(\"/api/projects/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const project = await storage.getProject(id);\n      if (!project) {\n        return res.status(404).json({ message: \"Project not found\" });\n      }\n      res.json(project);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch project\" });\n    }\n  });\n\n  // Get profile data\n  app.get(\"/api/profile\", async (req, res) => {\n    try {\n      const profile = await storage.getProfile();\n      if (!profile) {\n        return res.status(404).json({ message: \"Profile not found\" });\n      }\n      res.json(profile);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch profile\" });\n    }\n  });\n\n  // Download resume endpoint\n  app.get(\"/api/download-resume\", async (req, res) => {\n    try {\n      const profile = await storage.getProfile();\n      if (!profile || !profile.resumeUrl) {\n        return res.status(404).json({ message: \"Resume not found\" });\n      }\n      \n      // In a real application, you would serve the actual file\n      // For now, we'll redirect to a placeholder\n      res.json({ \n        message: \"Resume download initiated\", \n        url: profile.resumeUrl \n      });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to download resume\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":2767},"server/storage.ts":{"content":"import { randomUUID } from \"crypto\";\nimport type { Profile, Project, InsertProfile, InsertProject } from \"@shared/schema\";\n\nexport interface IStorage {\n  getProjects(): Promise<Project[]>;\n  getProjectsByCategory(category: string): Promise<Project[]>;\n  getFeaturedProjects(): Promise<Project[]>;\n  getProject(id: string): Promise<Project | undefined>;\n  createProject(project: InsertProject): Promise<Project>;\n  getProfile(): Promise<Profile | undefined>;\n  createProfile(profile: InsertProfile): Promise<Profile>;\n}\n\nclass MemStorage implements IStorage {\n  private projects = new Map<string, Project>();\n  private profileData: Profile | undefined;\n\n  constructor() {\n    this.initializeData();\n  }\n\n  private initializeData() {\n    const sampleProjects: Project[] = [\n      // Founded Startups\n      {\n        id: \"1\",\n        title: \"Cazpro\",\n        description: \"Built and scaled Cazpro, a D2C college merch brand, from a dorm room idea at 17 to a 2.5M INR sales machine in 15 months. Survived near shutdowns, sold to a local industrialist, and handled everything from code to partnerships. Hustled hard, shipped harder.\",\n        image: \"/attached_assets/Cazpro 2_1755112735827.jpeg\",\n        video: \"/attached_assets/1_1754491684471.mp4\",\n        gallery: [\"/attached_assets/1_1_1754913832087.jpeg\", \"/attached_assets/1_2_1754913836591.jpeg\"],\n        technologies: [\"CleverTap\", \"AppsFlyer\", \"Amplitude\", \"Google Firebase\", \"Google Analytics\", \"SEMrush\", \"Branch.io\"],\n        category: \"startup\",\n        liveUrl: \"https://cazpro.com\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"live\",\n        features: [\n          \"Comprehensive freelancer-client matching platform\",\n          \"Advanced project management and collaboration tools\",\n          \"Secure payment processing and escrow system\",\n          \"Skill-based matching algorithm for optimal connections\",\n          \"Real-time messaging and communication features\",\n          \"Portfolio showcase and professional profiles\",\n          \"Review and rating system for quality assurance\",\n          \"Mobile-responsive design for cross-platform access\"\n        ],\n        skills: [\"D2C marketing\", \"e-commerce\", \"college marketing\", \"brand building\", \"operations\", \"partnerships\", \"startup scaling\"],\n        goal: \"Build and scale D2C college merch brand from dorm room to market leader\",\n        kpis: [\"Revenue growth\", \"product sales\", \"college partnerships\", \"brand recognition\", \"market expansion\"],\n        results: \"2.5M INR revenue in 15 months, scaled from dorm room to acquisition, handled end-to-end operations\",\n        engagementType: \"Founder\",\n        period: \"May 2014 – Dec 2015\"\n      },\n\n      // Full-time Gigs\n      {\n        id: \"3\",\n        title: \"DigiPe\",\n        description: \"Joined DigiPe as Head of Growth, scaling their fintech platform from startup to market leader. Drove user acquisition, optimized conversion funnels, and built growth systems that delivered consistent month-over-month expansion in the competitive digital payments space.\",\n        image: \"/attached_assets/dp_1755111654957.jpeg\",\n        video: \"/attached_assets/3_1754492376019.mp4\",\n        gallery: [\"/attached_assets/3_1_1754915141952.jpeg\", \"/attached_assets/3_2_1754915146922.jpeg\", \"/attached_assets/3_3_1754915150153.jpeg\", \"/attached_assets/3_4_1754915153234.jpeg\"],\n        technologies: [\"CleverTap\", \"AppsFlyer\", \"Amplitude\", \"Google Firebase\", \"Google Analytics\", \"SEMrush\", \"Branch.io\"],\n        category: \"fulltime\",\n        liveUrl: \"https://digipe.com\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"live\",\n        features: [\n          \"Digital payment processing and wallet solutions\",\n          \"Multi-currency support and international transfers\",\n          \"Advanced fraud detection and security protocols\",\n          \"Merchant dashboard and payment analytics\",\n          \"API integration for e-commerce platforms\",\n          \"Real-time transaction monitoring\",\n          \"Customer support and dispute resolution\",\n          \"Compliance with banking regulations and KYC\"\n        ],\n        skills: [\"B2B marketing\", \"field ops\", \"performance marketing\", \"attribution\", \"mobile marketing\", \"onboarding\", \"analytics\"],\n        goal: \"Drive B2B installs, scale revenue, build top-tier marketing org\",\n        kpis: [\"App downloads\", \"revenue growth\", \"team size\", \"lead volume\", \"merchant activation\"],\n        results: \"$4M to $80M revenue, 30K B2B app installs, 500K merchant downloads, built team from 1 to 28\",\n        engagementType: \"Head of Marketing (Full Time)\",\n        period: \"Dec 2019 – Sep 2021\"\n      },\n      \n      {\n        id: \"8\",\n        title: \"FDX Sports\",\n        description: \"Head of Growth at FDX Sports, scaling India's premier sports equipment platform. Built growth systems that drove 400% user acquisition, optimized conversion funnels, and established partnerships that expanded market reach across multiple sports categories.\",\n        image: \"/attached_assets/FD_1754915223801.jpeg\",\n        video: \"/attached_assets/5_1754499213095.mov\",\n        gallery: [\"/attached_assets/5_1_1754915349881.jpeg\", \"/attached_assets/5_2_1754915353185.jpeg\", \"/attached_assets/5_3_1754915356711.jpeg\"],\n        technologies: [\"Shopify\", \"Google Ads\", \"Meta Ads\", \"Klaviyo\", \"SMSBump\"],\n        category: \"consulting\",\n        liveUrl: \"https://fdxsports.com\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"live\",\n        features: [\n          \"Comprehensive sports equipment catalog and inventory\",\n          \"Advanced product filtering and recommendation engine\",\n          \"Multi-sport category management and expertise\",\n          \"User reviews and rating system for quality assurance\",\n          \"Partnership integration with sports brands and vendors\",\n          \"Mobile-optimized shopping experience\",\n          \"Real-time inventory and availability tracking\",\n          \"Customer support and product consultation services\"\n        ],\n        skills: [\"Growth marketing\", \"sports industry expertise\", \"partnership development\", \"e-commerce optimization\", \"team leadership\"],\n        goal: \"Scale India's leading sports equipment platform and expand market reach\",\n        kpis: [\"User acquisition\", \"conversion rate\", \"partnership growth\", \"revenue expansion\"],\n        results: \"400% user growth, 60% conversion improvement, 50+ brand partnerships, 300% revenue increase\",\n        engagementType: \"Head of Growth (Full Time)\",\n        period: \"2022 – 2023\"\n      },\n\n      {\n        id: \"12\",\n        title: \"Codiste\",\n        description: \"Joined Codiste as Technical Lead to scale development operations and optimize team productivity. Implemented automation systems, refined development workflows, and established quality standards that improved delivery speed and code quality across multiple client projects.\",\n        image: \"/attached_assets/Codiste_1755112942332.jpeg\",\n        video: \"/attached_assets/6_1754494216948.mp4\",\n        gallery: [\"/attached_assets/6_1_1754915456506.jpeg\", \"/attached_assets/6_2_1754915459647.jpeg\"],\n        technologies: [\"Apollo\", \"LeadDino\", \"Phantom Buster\", \"Ahrefs\", \"Google Analytics\", \"Notion\"],\n        category: \"consulting\",\n        liveUrl: \"https://codiste.com\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"live\",\n        features: [\n          \"Custom software development and consulting services\",\n          \"Full-stack web and mobile application development\",\n          \"DevOps automation and CI/CD pipeline implementation\",\n          \"Quality assurance and testing framework optimization\",\n          \"Code review and technical documentation standards\",\n          \"Client project management and delivery tracking\",\n          \"Team productivity tools and workflow automation\",\n          \"Technical leadership and mentoring programs\"\n        ],\n        skills: [\"Technical leadership\", \"process optimization\", \"team management\", \"automation\", \"quality assurance\"],\n        goal: \"Scale development operations and improve team productivity\",\n        kpis: [\"Team output\", \"code quality\", \"delivery speed\", \"client satisfaction\"],\n        results: \"4x team output, 2.5x sales response, full-stack process automation\",\n        engagementType: \"Technical Lead (Full Time)\",\n        period: \"2024\"\n      },\n\n      {\n        id: \"11\",\n        title: \"Zo Labs\",\n        description: \"Head of Growth who scaled Zo Labs from stealth to 180K installs and built 100K+ community with 10K+ AI agents. Led partnerships, growth campaigns, and community building that established the platform as a leader in the AI agent ecosystem.\",\n        image: \"/attached_assets/Zo-Labs_1754915521507.jpeg\",\n        video: \"/attached_assets/7_1754494812964.mp4\",\n        gallery: [\"/attached_assets/7_1_1754915591607.jpeg\", \"/attached_assets/7_2_1754915598780.jpeg\"],\n        technologies: [\"HubSpot\", \"ActiveCampaign\", \"Firebase Studio\", \"AppsFlyer\", \"AppRadar\", \"WebEngage\", \"Discord\", \"Twitter\", \"LinkedIn\", \"Telegram\", \"Instagram\"],\n        category: \"fulltime\",\n        liveUrl: \"https://zolabs.ai\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"live\",\n        features: [\n          \"AI agent development and deployment platform\",\n          \"No-code agent builder with intuitive interface\",\n          \"Community marketplace for AI agents and templates\",\n          \"Advanced analytics and performance monitoring\",\n          \"Integration with major AI models and APIs\",\n          \"Real-time collaboration and team management\",\n          \"Scalable cloud infrastructure for agent hosting\",\n          \"Comprehensive documentation and learning resources\"\n        ],\n        skills: [\"Growth marketing\", \"product management\", \"AI automation\", \"community building\", \"partnerships\"],\n        goal: \"Scale installs, community, and organic traffic, land strategic partnerships\",\n        kpis: [\"App installs\", \"community growth\", \"landing pages shipped\", \"partnerships closed\"],\n        results: \"180K installs, 100K+ community, 10K+ agents, 120+ partnerships, 50+ IRL events\",\n        engagementType: \"Head of Growth (Full Time)\",\n        period: \"Jan 2024 – Aug 2025\"\n      },\n\n      {\n        id: \"17\",\n        title: \"Martian Wallet\",\n        description: \"Headed marketing at Martian Wallet, scaling installs by 50%, landing 400K+ new users, and doubling DApp transaction volumes from $1.2B to $2B. Launched a DApp that hit $1M daily volume in a month, forged 50+ partnerships, and kept the Web3 world buzzing.\",\n        image: \"/attached_assets/MW_1755105374146.jpeg\",\n        video: \"/attached_assets/11_1754497873112.mov\",\n        gallery: [\"/attached_assets/11_1_1754915721715.jpeg\", \"/attached_assets/11_2_1754915725194.jpeg\"],\n        technologies: [\"Aptos/Sui ecosystem\", \"DApp platform\", \"Chrome extension\", \"Discord\", \"Google Analytics\"],\n        category: \"fulltime\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"completed\",\n        features: [\n          \"Aptos/Sui blockchain ecosystem integration and optimization\",\n          \"DApp platform development and user experience enhancement\",\n          \"Chrome extension deployment and user acquisition campaigns\",\n          \"Discord community building and engagement automation\",\n          \"Google Analytics implementation for Web3 user tracking\",\n          \"Partnership development and business development operations\",\n          \"Transaction volume optimization and growth strategies\",\n          \"Multi-chain wallet functionality and security protocols\"\n        ],\n        skills: [\"Web3 marketing\", \"community ops\", \"DApp growth\", \"partnerships\", \"content\", \"BD\"],\n        goal: \"Grow user base, launch DApp, increase transaction volume, build global partnerships\",\n        kpis: [\"Installs\", \"active users\", \"partnerships\", \"transaction volume\", \"community growth\"],\n        results: \"1M+ installs, $2B+ volume, 400K new users, 50+ partnerships, $1M DApp daily\",\n        engagementType: \"Head of Marketing (Full Time)\",\n        period: \"May 2023 – Jan 2024\"\n      },\n\n      // Side Hustles\n      {\n        id: \"18\",\n        title: \"GEOptimer\",\n        description: \"Founder and builder of GEOptimer, a micro-SaaS that scores and audits website content for LLM/AI engine visibility—think SEO for AI, not just search. Enter a URL, get a GEO Score, action-packed report, and clear next steps in seconds. Built for growth-obsessed marketers.\",\n        image: \"/attached_assets/GEOptimer_1754915993193.jpeg\",\n        video: \"/attached_assets/12_1754497096211.mp4\",\n        gallery: [],\n        technologies: [\"Replit\", \"Supabase\", \"Node.js\", \"Cursor\", \"Cloud Code\", \"custom scripts\"],\n        category: \"sidehustle\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"completed\",\n        features: [\n          \"AI-powered website content scoring for LLM visibility\",\n          \"Comprehensive GEO Score generation and reporting\",\n          \"URL-based instant auditing and analysis\",\n          \"Action-packed reports with clear next steps\",\n          \"Custom scripts for content optimization\",\n          \"Supabase backend for data management\",\n          \"Replit cloud development environment\",\n          \"Real-time website content analysis\"\n        ],\n        skills: [\"AI SEO\", \"product management\", \"SaaS engineering\", \"growth analytics\", \"reporting\"],\n        goal: \"Optimize websites for generative engine visibility and citations\",\n        kpis: [\"GEO Score\", \"report depth\", \"user activation\", \"actionable insights delivered\"],\n        results: \"Comprehensive reports in seconds, instant action items, live MVP\",\n        engagementType: \"Founder (Solo Builder)\",\n        period: \"2025 – ongoing\"\n      },\n\n      {\n        id: \"19\",\n        title: \"Growth Opportunity Agent\",\n        description: \"Built a micro-SaaS agent that surfaces untapped digital growth opportunities for startups—automating what founders and marketers miss. Scans all digital touchpoints and delivers actionable insights, making \\\"where do I grow next?\\\" a one-click answer.\",\n        image: \"/attached_assets/GOA_1755107653390.jpeg\",\n        video: \"/attached_assets/13_1754497974190.mp4\",\n        gallery: [],\n        technologies: [\"Replit\", \"Node.js\", \"Cloud Code\", \"Cursor\", \"custom logic\"],\n        category: \"sidehustle\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"completed\",\n        features: [\n          \"AI-powered market opportunity identification and analysis\",\n          \"Competitor weakness detection and exploitation strategies\",\n          \"Multi-channel growth opportunity mapping\",\n          \"ROI prediction and priority ranking system\",\n          \"Real-time market trend analysis and alerts\",\n          \"Automated growth strategy generation\",\n          \"Integration with major analytics platforms\",\n          \"Custom reporting and dashboard visualization\"\n        ],\n        skills: [\"Growth analysis\", \"automation\", \"product design\", \"digital strategy\"],\n        goal: \"Unlock growth channels for startups instantly\",\n        kpis: [\"Growth opps surfaced\", \"activation rate\", \"time-to-value\"],\n        results: \"Opportunities delivered in real time, MVP ready, beta users onboard\",\n        engagementType: \"Founder (Micro-SaaS)\",\n        period: \"2025 – ongoing\"\n      },\n\n      {\n        id: \"20\",\n        title: \"Reply Agent (Auto-Commenter)\",\n        description: \"Engineering a Reply Agent that auto-generates and posts targeted replies across LinkedIn, Twitter, and Reddit. Comment up to 150x a day, all automated and prompt-driven—think hustle in a headless browser. Launching with a waitlist on Product Hunt, August 25.\",\n        image: \"/attached_assets/ra (1)_1755114425581.jpeg\",\n        video: \"/attached_assets/14_1754499265362.mp4\",\n        gallery: [],\n        technologies: [\"Replit\", \"Cursor\", \"Cloud Code\", \"custom scripts\"],\n        category: \"sidehustle\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"completed\",\n        features: [\n          \"AI-powered contextual comment generation\",\n          \"Multi-platform social media integration\",\n          \"Brand voice and tone consistency\",\n          \"Sentiment analysis and response optimization\",\n          \"Automated engagement scheduling\",\n          \"Real-time content monitoring and response\",\n          \"Custom response templates and personalization\",\n          \"Analytics and engagement tracking dashboard\"\n        ],\n        skills: [\"Automation\", \"headless browser ops\", \"prompt engineering\", \"multi-channel growth\"],\n        goal: \"Automate replies for inbound, outreach, and community engagement at scale\",\n        kpis: [\"Replies/day\", \"engagement\", \"conversion rate\", \"waitlist signups\"],\n        results: \"150 auto-comments/day, Product Hunt launch scheduled, early demand\",\n        engagementType: \"Founder (Micro-SaaS)\",\n        period: \"2025 – ongoing\"\n      },\n\n      {\n        id: \"21\",\n        title: \"Internal Linking Agent\",\n        description: \"Launching a plug-and-play internal linking agent for founders strapped on SEO budgets—instantly optimize content for search and LLMs. Built on Node.js, React, and custom logic, delivers fast actionable traffic/visibility gains. Shipping first week of September.\",\n        image: \"/attached_assets/InternalLA_1755108242866.jpeg\",\n        video: \"/attached_assets/15_1754499301804.mp4\",\n        gallery: [],\n        technologies: [\"Replicate\", \"Node.js\", \"React.js\", \"Cloud Code\", \"custom logic\"],\n        category: \"sidehustle\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"completed\",\n        features: [\n          \"Automated content analysis and semantic mapping\",\n          \"Strategic internal link opportunity identification\",\n          \"Contextual anchor text generation\",\n          \"SEO performance impact analysis\",\n          \"Bulk link suggestion export\",\n          \"Page authority flow optimization\",\n          \"Custom linking strategy recommendations\",\n          \"Real-time content scanning and updates\"\n        ],\n        skills: [\"SEO automation\", \"React development\", \"SaaS engineering\", \"content strategy\"],\n        goal: \"Drive internal linking + AI visibility for resource-constrained sites\",\n        kpis: [\"Pages optimized\", \"time-to-optimize\", \"user retention\"],\n        results: \"Live in September, beta user waitlist, agent workflow ready\",\n        engagementType: \"Founder (Micro-SaaS)\",\n        period: \"2025 – ongoing\"\n      },\n\n      {\n        id: \"22\",\n        title: \"Content Automation (Reddit → LinkedIn)\",\n        description: \"Automated my LinkedIn content pipeline by scraping Reddit for trending AI/agent pain points, converting topics into hooks, and posting on LinkedIn with a human-in-the-loop review. All my posts now flow from this. Soon to be productized for other creators.\",\n        image: \"/attached_assets/Ca_1755112260596.jpeg\",\n        video: \"/attached_assets/16_1754499401231.mp4\",\n        gallery: [],\n        technologies: [\"N8n\", \"RapidAPI\", \"CMS\", \"Reddit API\", \"LinkedIn API\"],\n        category: \"sidehustle\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"completed\",\n        features: [\n          \"Automated Reddit trending topic discovery\",\n          \"AI-powered content transformation and adaptation\",\n          \"Professional tone adjustment for LinkedIn audience\",\n          \"Engagement pattern analysis and optimization\",\n          \"Multi-platform content scheduling and posting\",\n          \"Sentiment analysis and brand alignment\",\n          \"Custom content templates and personalization\",\n          \"Performance tracking and content analytics\"\n        ],\n        skills: [\"Automation\", \"scraping\", \"prompt engineering\", \"workflow design\"],\n        goal: \"Turn Reddit trends into LinkedIn-ready content, automate ideation\",\n        kpis: [\"Posts generated\", \"engagement rate\", \"review-to-post time\"],\n        results: \"Automated 100% of LinkedIn pipeline, human QA in loop, next step: SaaS\",\n        engagementType: \"Founder/Operator\",\n        period: \"2025 – ongoing\"\n      },\n\n      {\n        id: \"23\",\n        title: \"Blog Automation (Perplexity MCP)\",\n        description: \"Built a flow to auto-repurpose trending articles via perplexity MCP and RSS, turning them into original blog posts with a human-in-the-loop review. All powered by n8n and will soon power InboxBites' blog at scale.\",\n        image: \"/attached_assets/ba (1)_1755114571891.jpeg\",\n        video: \"/attached_assets/ba_v_1755114691913.mp4\",\n        gallery: [],\n        technologies: [\"n8n\", \"Perplexity MCP\", \"RSS feeds\", \"CMS\"],\n        category: \"sidehustle\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"completed\",\n        features: [\n          \"Automated content research and topic generation\",\n          \"MCP-powered content creation and optimization\",\n          \"SEO keyword integration and meta tag generation\",\n          \"Multi-platform publishing automation\",\n          \"Content performance tracking and analytics\",\n          \"Editorial workflow with approval gates\",\n          \"Brand voice consistency enforcement\",\n          \"Scheduled content calendar management\"\n        ],\n        skills: [\"Content automation\", \"API integration\", \"workflow building\"],\n        goal: \"Automate discovery and repurposing of trending content for blogs\",\n        kpis: [\"Articles sourced\", \"posts published\", \"time saved per post\"],\n        results: \"Built a flow to auto-repurpose trending articles via Perplexity MCP and RSS.\",\n        engagementType: \"Founder/Builder\",\n        period: \"2025 – ongoing\"\n      },\n\n      {\n        id: \"24\",\n        title: \"Lead Generator Agent (LinkedIn, Twitter, Reddit)\",\n        description: \"Created an agent to scrape, filter, and funnel target profiles talking about specific pain points on LinkedIn, Twitter, and Reddit—automates profile discovery and dashboarding, saving 60% of lead gen time. Frees founders and marketers to focus on closing, not scraping.\",\n        image: \"/attached_assets/LeadGenAg_1754916199494.jpeg\",\n        video: \"/attached_assets/18_1754499898932.mp4\",\n        gallery: [],\n        technologies: [\"N8n\", \"platform APIs\", \"dashboard (custom)\"],\n        category: \"sidehustle\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"completed\",\n        features: [\n          \"Multi-platform lead identification and targeting\",\n          \"AI-powered prospect qualification and scoring\",\n          \"Automated personalized outreach sequences\",\n          \"Social media engagement pattern analysis\",\n          \"Lead nurturing workflow automation\",\n          \"CRM integration and pipeline management\",\n          \"Performance tracking and conversion analytics\",\n          \"Compliance-aware engagement protocols\"\n        ],\n        skills: [\"Lead scraping\", \"automation\", \"enrichment\", \"workflow engineering\"],\n        goal: \"Automate discovery + outreach for B2B leads\",\n        kpis: [\"Profiles scraped\", \"leads enriched\", \"time saved\"],\n        results: \"60% lead gen time saved, dashboarded leads, live beta\",\n        engagementType: \"Founder (Micro-SaaS)\",\n        period: \"2025 – ongoing\"\n      },\n\n      {\n        id: \"25\",\n        title: \"AGENTSY\",\n        description: \"Sold over $2M in digital products via AGENTSY—performance marketing funnels at scale. Ran campaigns on Facebook/Google, moved 20L+ INR in 6 months, sold e-books, templates, and downloadables. Built funnels, ran the stack, shipped results.\",\n        image: \"/attached_assets/Agentsy_1754916226315.jpeg\",\n        video: \"/attached_assets/19_1754500081499.mp4\",\n        gallery: [],\n        technologies: [\"ClickFunnels\", \"Hotcart\", \"Shopify\", \"WordPress\", \"Facebook Ads\", \"Google Ads\", \"GTM\"],\n        category: \"sidehustle\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"completed\",\n        features: [\n          \"AI agent marketplace with discovery and filtering\",\n          \"Multi-agent workflow orchestration platform\",\n          \"Real-time performance monitoring and analytics\",\n          \"Enterprise integration capabilities\",\n          \"Custom agent development tools\",\n          \"Automated deployment and scaling\",\n          \"Usage tracking and billing management\",\n          \"API gateway for agent communication\"\n        ],\n        skills: [\"Performance marketing\", \"funnel building\", \"digital sales\", \"analytics\"],\n        goal: \"Scale digital product sales via paid channels\",\n        kpis: [\"Revenue\", \"funnel conversion\", \"ad spend ROI\"],\n        results: \"$2M+ sales, 20L+ INR in 6 months, high-volume funnel ops\",\n        engagementType: \"Founder (Solo)\",\n        period: \"2025 – ongoing\"\n      },\n\n      {\n        id: \"15\",\n        title: \"InboxBites\",\n        description: \"Solo-built InboxBites, a microSaaS AI agent for Gmail, transforming newsletter chaos into snackable, swipeable, 50-word knowledge bites. MVP in 6 weeks with 200+ waitlisters and 60% solo-coded, live waitlist driving organic engagement.\",\n        image: \"/attached_assets/Inboxbites_1755104402481.png\",\n        video: \"/attached_assets/9_1754495180203.mov\",\n        gallery: [\"/attached_assets/9_1_1754914566747.jpeg\", \"/attached_assets/9_2_1754914569430.jpeg\"],\n        technologies: [\"Replit Cloud Code (Anthropic)\", \"Gmail API\", \"PWA\", \"JavaScript\"],\n        category: \"startup\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"completed\",\n        features: [\n          \"AI-powered newsletter content processing and summarization\",\n          \"Gmail API integration for seamless inbox management\",\n          \"Progressive Web App (PWA) for cross-platform accessibility\",\n          \"Swipeable interface for quick knowledge consumption\",\n          \"50-word bite-sized content delivery system\",\n          \"Smart content categorization and filtering\",\n          \"Real-time waitlist and user engagement tracking\",\n          \"Automated newsletter parsing and insight extraction\"\n        ],\n        skills: [\"Product management\", \"coding\", \"AI/ML logic\", \"UI/UX\", \"GTM\", \"content processing\"],\n        goal: \"Turn newsletters into actionable micro-insights, deliver value via PWA\",\n        kpis: [\"Waitlist signups\", \"engagement rate\", \"feature completion\", \"MVP timeline\"],\n        results: \"MVP built in 6 weeks, 200+ waitlisters, 60% solo-coded, live waitlist\",\n        engagementType: \"Founder (Side Hustle/MicroSaaS)\",\n        period: \"2024\"\n      },\n      {\n        id: \"16\",\n        title: \"Solgames\",\n        description: \"Co-built Solgames, a GameFi dev toolkit, into a Solana hackathon winner and landed $150K in seed. Rallied a 3K-strong dev/gamer community, ran hackathons with 1K+ participants, and delivered a live MVP in 3 months. Paused by market chaos, but left a mark.\",\n        image: \"/attached_assets/Solgames_1755105321545.jpeg\",\n        video: \"/attached_assets/10_video_1754917764906.mov\",\n        gallery: [\"/attached_assets/10_1_1754914704093.jpeg\", \"/attached_assets/10_2_1754914710027.jpeg\"],\n        technologies: [\"Solana\", \"Web3 tools\", \"tokenization protocols\", \"Discord\", \"Telegram\"],\n        category: \"startup\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"completed\",\n        features: [\n          \"GameFi development toolkit for Web2-to-Web3 transitions\",\n          \"Solana blockchain integration and smart contract deployment\",\n          \"Web3 tokenization protocols for in-game assets\",\n          \"Discord community management and engagement systems\",\n          \"Telegram bot automation for community operations\",\n          \"Hackathon platform and participant management\",\n          \"Developer onboarding and education programs\",\n          \"Live MVP delivery and community feedback integration\"\n        ],\n        skills: [\"Growth marketing\", \"community building\", \"Web3 strategy\", \"hackathon ops\", \"program management\"],\n        goal: \"Enable Web2-to-Web3 game transition, build dev/gamer ecosystem, MVP + community\",\n        kpis: [\"Community size\", \"hackathon apps\", \"MVP delivery\", \"funding raised\"],\n        results: \"3K devs/gamers, $150K seed, Solana hackathon top 10, 1K+ hackathon apps\",\n        engagementType: \"Head of Growth, Co-founder\",\n        period: \"Nov 2022 – May 2023\"\n      },\n\n      // Consulting/Fractional CMO\n      {\n        id: \"2\",\n        title: \"Millionth Mile Marketing\",\n        description: \"Millionth Mile Marketing is a comprehensive digital marketing platform that provides advanced marketing automation, campaign management, and analytics solutions. Built for businesses looking to scale their marketing efforts with data-driven strategies and real-time performance insights.\",\n        image: \"/attached_assets/MMM_1755110463225.jpeg\",\n        video: \"/attached_assets/2_1754492193766.mp4\",\n        gallery: [\"/attached_assets/2_1_1754914900813.jpeg\", \"/attached_assets/2_2_1754914903994.jpeg\"],\n        technologies: [\"Google Ads\", \"Meta Ads\", \"SEMrush\", \"Ahrefs\", \"Mailchimp\", \"HubSpot\", \"WordPress\"],\n        category: \"startup\",\n        liveUrl: \"https://millionthmiledgtl.com\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"live\",\n        features: [\n          \"Advanced marketing automation and workflow management\",\n          \"Multi-channel campaign management and optimization\",\n          \"Real-time analytics and performance tracking\",\n          \"Customer segmentation and targeted messaging\",\n          \"A/B testing framework for campaign optimization\",\n          \"Integration with major advertising platforms\",\n          \"ROI tracking and conversion analytics\",\n          \"White-label solutions for agencies\"\n        ],\n        skills: [\"Marketing automation\", \"campaign optimization\", \"analytics\", \"platform development\", \"client management\"],\n        goal: \"Automate and scale marketing operations for growing businesses\",\n        kpis: [\"Campaign performance\", \"client retention\", \"ROI improvement\", \"platform adoption\"],\n        results: \"300% campaign efficiency increase, 150% client ROI improvement, 95% client retention\",\n        engagementType: \"Founder & Marketing Strategist\",\n        period: \"2021 – Present\"\n      },\n\n      {\n        id: \"4\",\n        title: \"Inventrax\",\n        description: \"Inventrax is a comprehensive inventory management system designed for businesses of all sizes. Features real-time tracking, automated reordering, and advanced analytics to optimize stock levels and reduce operational costs.\",\n        image: \"/attached_assets/Inventrax_1754916342697.jpeg\",\n        video: \"/attached_assets/4_1754493466751.mov\",\n        gallery: [\"/attached_assets/4_1_1754916584934.jpeg\", \"/attached_assets/4_2 (1)_1754916589241.jpg\", \"/attached_assets/4_3_1754916594959.jpeg\"],\n        technologies: [\"SEMrush\", \"Backlinko.io\", \"Ahrefs\", \"Google Analytics\", \"Google Search Console\"],\n        category: \"consulting\",\n        liveUrl: \"https://inventrax.com\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"live\",\n        features: [\n          \"Real-time inventory tracking and management\",\n          \"Automated reordering and stock optimization\",\n          \"Multi-location warehouse management\",\n          \"Barcode scanning and RFID integration\",\n          \"Advanced reporting and analytics dashboard\",\n          \"Supplier management and purchase orders\",\n          \"Integration with accounting and e-commerce platforms\",\n          \"Mobile app for on-the-go inventory updates\"\n        ],\n        skills: [\"Inventory optimization\", \"system integration\", \"process automation\", \"data analytics\", \"business consulting\"],\n        goal: \"Optimize inventory processes and reduce operational costs\",\n        kpis: [\"Stock turnover\", \"cost reduction\", \"accuracy rate\", \"time savings\"],\n        results: \"30% cost reduction, 95% inventory accuracy, 50% faster processing, 99.9% uptime\",\n        engagementType: \"Technical Consultant\",\n        period: \"2023\"\n      },\n\n      {\n        id: \"13\",\n        title: \"Zentrades\",\n        description: \"Dropped into Zentrades as a marketing consultant, rewired their inbound engine, and took MQLs from single digits to 60 a month in 4 months. Built programmatic SEO systems, optimized conversion funnels, and delivered measurable growth that transformed their lead generation.\",\n        image: \"/attached_assets/Zentrades_1755107805039.jpeg\",\n        video: \"/attached_assets/8_1754494894057.mp4\",\n        gallery: [\"/attached_assets/8_1_1754916459658.jpeg\", \"/attached_assets/8_2_1754916464956.jpeg\"],\n        technologies: [\"Programmatic SEO\", \"Google Analytics\", \"CRM\", \"marketing attribution tools\"],\n        category: \"consulting\",\n        liveUrl: \"https://zentrades.com\",\n        githubUrl: \"\",\n        featured: \"true\",\n        status: \"live\",\n        features: [\n          \"B2B marketplace connecting buyers and suppliers globally\",\n          \"Advanced search and filtering for product discovery\",\n          \"Secure transaction processing and escrow services\",\n          \"Supplier verification and quality assurance system\",\n          \"Multi-language support for international trade\",\n          \"Real-time messaging and negotiation platform\",\n          \"Analytics dashboard for trade insights and trends\",\n          \"Mobile-optimized experience for on-the-go trading\"\n        ],\n        skills: [\"B2B marketing\", \"lead generation\", \"conversion optimization\", \"programmatic SEO\", \"funnel optimization\"],\n        goal: \"Scale high-quality B2B leads, boost organic traffic, optimize funnel stages\",\n        kpis: [\"MQLs\", \"conversion rate\", \"organic traffic\", \"lead quality\"],\n        results: \"MQLs 9→60/month, 125% traffic growth, 3x demo conversion, 5000+ landing pages\",\n        engagementType: \"Consultant (Freelance)\",\n        period: \"2023\"\n      },\n\n      // Keynotes\n      {\n        id: \"keynote1\",\n        title: \"TEDx Talk: The Future of Marketing Automation\",\n        description: \"Delivered a captivating TEDx talk on how AI and automation are reshaping marketing landscapes. Shared insights from scaling multiple startups and the critical role of human creativity in an automated world.\",\n        image: \"https://images.unsplash.com/photo-1559827260-dc66d52bef19?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        video: null,\n        gallery: [],\n        technologies: [\"Public Speaking\", \"TEDx\", \"Marketing Strategy\", \"AI\"],\n        category: \"keynote\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"false\",\n        status: \"completed\",\n        features: [\n          \"18-minute keynote presentation\",\n          \"Live audience of 500+ attendees\",\n          \"Streaming to 10K+ online viewers\",\n          \"Interactive Q&A session\",\n          \"Case studies from 3 successful startups\",\n          \"AI automation demonstrations\",\n          \"Future trends prediction\",\n          \"Practical implementation strategies\"\n        ],\n        skills: [\"Public speaking\", \"storytelling\", \"marketing strategy\", \"AI trends\"],\n        goal: \"Educate entrepreneurs on marketing automation best practices\",\n        kpis: [\"Audience size\", \"engagement rate\", \"post-talk inquiries\", \"video views\"],\n        results: \"500+ live audience, 10K+ online views, 50+ post-talk business inquiries\",\n        engagementType: \"Keynote Speaker\",\n        period: \"2024\"\n      },\n      {\n        id: \"keynote2\",\n        title: \"Growth Hacking Summit: Zero to Scale\",\n        description: \"Keynote at Asia's largest growth summit sharing the playbook for taking companies from zero to million-dollar revenues. Deep dive into practical growth strategies that actually work.\",\n        image: \"https://images.unsplash.com/photo-1515187029135-18ee286d815b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        video: null,\n        gallery: [],\n        technologies: [\"Growth Strategy\", \"Performance Marketing\", \"Analytics\", \"Scaling\"],\n        category: \"keynote\",\n        liveUrl: \"\",\n        githubUrl: \"\",\n        featured: \"false\",\n        status: \"completed\",\n        features: [\n          \"45-minute keynote presentation\",\n          \"Live audience of 1200+ growth professionals\",\n          \"Real case studies from FDX Sports and DigiPe\",\n          \"Interactive growth framework demonstration\",\n          \"Performance marketing deep dive\",\n          \"Scaling strategies for different business models\",\n          \"Q&A with growth leaders panel\",\n          \"Networking session with 500+ attendees\"\n        ],\n        skills: [\"Growth marketing\", \"public speaking\", \"case study presentation\", \"framework development\"],\n        goal: \"Share actionable growth strategies with Asia's top growth professionals\",\n        kpis: [\"Audience size\", \"content downloads\", \"speaking rating\", \"follow-up connections\"],\n        results: \"1200+ audience, 4.8/5 speaking rating, 200+ LinkedIn connections, 500+ framework downloads\",\n        engagementType: \"Keynote Speaker\",\n        period: \"2023\"\n      }\n    ];\n\n    sampleProjects.forEach(project => {\n      this.projects.set(project.id, project);\n    });\n\n    this.profileData = {\n      id: \"1\",\n      name: \"Farooq Chisty\",\n      title: \"Farooq\",\n      subtitle: \"Chisty\",\n      bio: \"AI-first growth operator with 10+ years building, growing and helping scale businesses. Generated $80M+ in revenue across 5 ventures. Drove 2 Million+ users across 4 apps. TEDx speaker, 30+ Keynotes. Full-stack growth marketer delivering results by blending AI automation, systems thinking, and strategy.\",\n      mission: \"Transforming complex workflows into elegant solutions through the perfect blend of technology, automation, and strategic thinking.\",\n      image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=800\",\n      email: \"farooqsheik52543@gmail.com\",\n      phone: \"+91-9878167456\",\n      location: \"New Delhi, India\",\n      resumeUrl: \"/resume.pdf\",\n      skills: {\n        frontend: [\"React.js\", \"Vue.js\", \"TypeScript\", \"Tailwind CSS\"],\n        backend: [\"Node.js\", \"Python\", \"PostgreSQL\", \"AWS\"]\n      },\n      social: {\n        linkedin: \"https://linkedin.com/in/farooqchisty\",\n        github: \"https://github.com/farooqchisty\",\n        twitter: \"https://twitter.com/farooqchisty\"\n      }\n    };\n  }\n\n  async getProjects(): Promise<Project[]> {\n    return Array.from(this.projects.values());\n  }\n\n  async getProjectsByCategory(category: string): Promise<Project[]> {\n    return Array.from(this.projects.values()).filter(\n      project => project.category === category\n    );\n  }\n\n  async getFeaturedProjects(): Promise<Project[]> {\n    return Array.from(this.projects.values()).filter(\n      project => project.featured === \"true\"\n    );\n  }\n\n  async getProject(id: string): Promise<Project | undefined> {\n    return this.projects.get(id);\n  }\n\n  async createProject(insertProject: InsertProject): Promise<Project> {\n    const id = randomUUID();\n    const project: Project = { \n      id,\n      title: insertProject.title,\n      description: insertProject.description,\n      image: insertProject.image,\n      video: insertProject.video || null,\n      gallery: Array.isArray(insertProject.gallery) ? [...insertProject.gallery] : [],\n      technologies: Array.isArray(insertProject.technologies) ? [...insertProject.technologies] : [],\n      category: insertProject.category,\n      liveUrl: insertProject.liveUrl || null,\n      githubUrl: insertProject.githubUrl || null,\n      featured: insertProject.featured || null,\n      status: insertProject.status || \"live\",\n      features: insertProject.features ? [...insertProject.features] : null,\n      skills: insertProject.skills ? [...insertProject.skills] : null,\n      goal: insertProject.goal || null,\n      kpis: insertProject.kpis ? [...insertProject.kpis] : null,\n      results: insertProject.results || null,\n      engagementType: insertProject.engagementType || null,\n      period: insertProject.period || null\n    };\n    this.projects.set(id, project);\n    return project;\n  }\n\n  async getProfile(): Promise<Profile | undefined> {\n    return this.profileData;\n  }\n\n  async createProfile(insertProfile: InsertProfile): Promise<Profile> {\n    const id = randomUUID();\n    const profile: Profile = { \n      id,\n      name: insertProfile.name,\n      title: insertProfile.title,\n      subtitle: insertProfile.subtitle,\n      bio: insertProfile.bio,\n      mission: insertProfile.mission,\n      image: insertProfile.image,\n      email: insertProfile.email,\n      phone: insertProfile.phone,\n      location: insertProfile.location,\n      resumeUrl: insertProfile.resumeUrl || null,\n      skills: {\n        frontend: [...insertProfile.skills.frontend],\n        backend: [...insertProfile.skills.backend]\n      },\n      social: insertProfile.social\n    };\n    this.profileData = profile;\n    return profile;\n  }\n}\n\nexport const storage = new MemStorage();","size_bytes":41044},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, json } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const projects = pgTable(\"projects\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  image: text(\"image\").notNull(),\n  video: text(\"video\"),\n  gallery: json(\"gallery\").$type<string[]>().default([]), // Project gallery images\n  technologies: json(\"technologies\").$type<string[]>().notNull(),\n  category: text(\"category\").notNull(),\n  liveUrl: text(\"live_url\"),\n  githubUrl: text(\"github_url\"),\n  featured: text(\"featured\").default(\"false\"),\n  status: text(\"status\").default(\"live\"), // \"live\", \"coming-soon\", \"in-development\", \"completed\"\n  features: json(\"features\").$type<string[]>(), // Key features list\n  skills: json(\"skills\").$type<string[]>(), // Skills used in the project\n  goal: text(\"goal\"), // Project goal/objective\n  kpis: json(\"kpis\").$type<string[]>(), // Key performance indicators\n  results: text(\"results\"), // Achieved results\n  engagementType: text(\"engagement_type\"), // Type of engagement (e.g., \"Founder (Full Time)\")\n  period: text(\"period\"), // Time period of the project\n});\n\nexport const profile = pgTable(\"profile\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  title: text(\"title\").notNull(),\n  subtitle: text(\"subtitle\").notNull(),\n  bio: text(\"bio\").notNull(),\n  mission: text(\"mission\").notNull(),\n  image: text(\"image\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\").notNull(),\n  location: text(\"location\").notNull(),\n  resumeUrl: text(\"resume_url\"),\n  skills: json(\"skills\").$type<{\n    frontend: string[];\n    backend: string[];\n  }>().notNull(),\n  social: json(\"social\").$type<{\n    linkedin: string;\n    github: string;\n    twitter: string;\n  }>().notNull(),\n});\n\nexport const insertProjectSchema = createInsertSchema(projects).omit({\n  id: true,\n});\n\nexport const insertProfileSchema = createInsertSchema(profile).omit({\n  id: true,\n});\n\nexport type InsertProject = z.infer<typeof insertProjectSchema>;\nexport type Project = typeof projects.$inferSelect;\nexport type InsertProfile = z.infer<typeof insertProfileSchema>;\nexport type Profile = typeof profile.$inferSelect;\n","size_bytes":2375},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { usePerformanceObserver } from \"@/hooks/use-performance-observer\";\nimport Home from \"@/pages/home\";\nimport ProjectsPage from \"@/pages/projects\";\nimport ContactPage from \"@/pages/contact\";\nimport LetsChatPage from \"@/pages/lets-chat\";\nimport NetflixSearchPage from \"@/pages/netflix-search\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/projects\" component={ProjectsPage} />\n      <Route path=\"/contact\" component={ContactPage} />\n      <Route path=\"/lets-chat\" component={LetsChatPage} />\n      <Route path=\"/netflix-search\" component={NetflixSearchPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  // Monitor performance for optimization\n  usePerformanceObserver();\n  \n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1279},"client/src/index.css":{"content":"/* Inline critical font to avoid render blocking */\n@font-face {\n  font-family: 'Bebas Neue';\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url('https://fonts.gstatic.com/s/bebasneue/v14/JTUSjIg69CK48gW7PXoo9Wdhyzbi.woff2') format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 0%);\n  --foreground: hsl(0, 0%, 98%);\n  --muted: hsl(0, 0%, 8%);\n  --muted-foreground: hsl(0, 0%, 70%);\n  --popover: hsl(0, 0%, 8%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --card: hsl(0, 0%, 8%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --border: hsl(0, 0%, 20%);\n  --input: hsl(0, 0%, 20%);\n  --primary: hsl(355, 88%, 50%);\n  --primary-foreground: hsl(0, 0%, 98%);\n  --secondary: hsl(0, 0%, 20%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --accent: hsl(0, 0%, 20%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --ring: hsl(240, 4.9%, 83.9%);\n  --radius: 0.5rem;\n  \n  /* Netflix theme colors */\n  --netflix-red: hsl(355, 88%, 50%);\n  --netflix-dark: hsl(0, 0%, 8%);\n  --netflix-black: hsl(0, 0%, 0%);\n  --netflix-gray: hsl(0, 0%, 20%);\n  --netflix-light-gray: hsl(0, 0%, 70%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    font-family: 'Inter', system-ui, sans-serif;\n    /* Performance optimizations */\n    text-rendering: optimizeSpeed;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  html {\n    scroll-behavior: smooth;\n    /* Performance optimizations */\n    -webkit-text-size-adjust: 100%;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  /* Critical CSS for above-the-fold content */\n  .hero-container {\n    will-change: transform;\n    transform: translateZ(0);\n  }\n\n  /* Image optimization CSS */\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n\n  /* Reduce layout shifts */\n  video, img {\n    aspect-ratio: attr(width) / attr(height);\n  }\n}\n\n@layer utilities {\n  .netflix-red {\n    color: var(--netflix-red);\n  }\n  \n  .bg-netflix-red {\n    background-color: var(--netflix-red);\n  }\n  \n  .bg-netflix-dark {\n    background-color: var(--netflix-dark);\n  }\n  \n  .bg-netflix-black {\n    background-color: var(--netflix-black);\n  }\n  \n  .bg-netflix-gray {\n    background-color: var(--netflix-gray);\n  }\n  \n  .text-netflix-light-gray {\n    color: var(--netflix-light-gray);\n  }\n\n  /* Mobile-first responsive utilities */\n  @media (max-width: 640px) {\n    .container {\n      padding-left: 1rem;\n      padding-right: 1rem;\n    }\n    \n    /* Improve touch targets on mobile */\n    button {\n      min-height: 44px;\n      min-width: 44px;\n    }\n    \n    /* Optimize text sizes for mobile */\n    h1 {\n      font-size: clamp(1.5rem, 6vw, 3rem);\n      line-height: 1.2;\n    }\n    \n    h2 {\n      font-size: clamp(1.25rem, 5vw, 2rem);\n      line-height: 1.3;\n    }\n    \n    p {\n      font-size: clamp(0.875rem, 4vw, 1rem);\n      line-height: 1.6;\n    }\n  }\n\n  /* Prevent horizontal scrolling */\n  body {\n    overflow-x: hidden;\n  }\n\n  /* Improve scroll performance */\n  * {\n    -webkit-overflow-scrolling: touch;\n  }\n\n  .scrollbar-hide {\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n  }\n  \n  .scrollbar-hide::-webkit-scrollbar {\n    display: none;\n  }\n\n  .gradient-overlay {\n    background: linear-gradient(to top, rgba(0,0,0,0.8) 0%, transparent 100%);\n  }\n\n  .header-gradient {\n    background: linear-gradient(to bottom, rgba(0,0,0,1) 0%, rgba(0,0,0,0.8) 50%, transparent 100%);\n  }\n\n  /* Responsive Typography */\n  .text-responsive-sm {\n    @apply text-xs sm:text-sm md:text-base;\n  }\n  \n  .text-responsive-base {\n    @apply text-sm sm:text-base md:text-lg;\n  }\n  \n  .text-responsive-lg {\n    @apply text-lg sm:text-xl md:text-2xl;\n  }\n  \n  .text-responsive-xl {\n    @apply text-xl sm:text-2xl md:text-3xl lg:text-4xl;\n  }\n  \n  .text-responsive-2xl {\n    @apply text-2xl sm:text-3xl md:text-4xl lg:text-5xl;\n  }\n\n  /* Responsive Spacing */\n  .px-responsive {\n    @apply px-4 sm:px-6 md:px-12 lg:px-16 xl:px-20;\n  }\n  \n  .py-responsive {\n    @apply py-4 sm:py-6 md:py-8 lg:py-12;\n  }\n\n  /* Mobile-first containers */\n  .container-responsive {\n    @apply w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;\n  }\n\n  /* Text truncation utilities */\n  .line-clamp-2 {\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n  \n  .line-clamp-3 {\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n\n  /* Performance optimization utilities */\n  .gpu-accelerated {\n    will-change: transform;\n    transform: translateZ(0);\n  }\n\n  .lazy-image {\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out;\n  }\n\n  .lazy-image.loaded {\n    opacity: 1;\n  }\n\n  /* Netflix-style animations - optimized */\n  .project-card {\n    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    will-change: transform;\n    transform: translateZ(0);\n  }\n\n  .project-card:hover {\n    transform: scale(1.05) translateZ(0);\n  }\n\n  /* Custom shadows */\n  .netflix-shadow {\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);\n  }\n\n  .netflix-shadow-lg {\n    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.6);\n  }\n\n  /* Reduce CLS (Cumulative Layout Shift) */\n  .aspect-video {\n    aspect-ratio: 16 / 9;\n  }\n\n  .aspect-square {\n    aspect-ratio: 1 / 1;\n  }\n\n  /* Optimize critical path rendering */\n  @media (prefers-reduced-motion: reduce) {\n    * {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01ms !important;\n    }\n  }\n}\n","size_bytes":5834},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n// Force dark theme\ndocument.documentElement.classList.add(\"dark\");\n\n// Performance optimization: Mark critical CSS as loaded\nif (document.fonts) {\n  document.fonts.ready.then(() => {\n    document.documentElement.classList.add('fonts-loaded');\n  });\n}\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":410},"client/src/components/about-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Profile } from \"@shared/schema\";\n\ninterface AboutSectionProps {\n  profile?: Profile;\n}\n\nexport default function AboutSection({ profile }: AboutSectionProps) {\n  if (!profile) {\n    return (\n      <section id=\"about\" className=\"py-16 px-4 md:px-12\">\n        <div className=\"max-w-6xl mx-auto text-center\">\n          <div className=\"text-netflix-light-gray\">Profile information not available</div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"about\" className=\"py-16 px-4 md:px-12\">\n      <div className=\"max-w-6xl mx-auto\">\n        <motion.div\n          className=\"grid md:grid-cols-2 gap-12 items-center\"\n          initial={{ opacity: 0, y: 50 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n        >\n          <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n            viewport={{ once: true }}\n          >\n            <img\n              src={profile.image}\n              alt=\"Professional headshot\"\n              className=\"rounded-lg shadow-xl w-full max-w-md mx-auto\"\n            />\n          </motion.div>\n          \n          <motion.div\n            initial={{ opacity: 0, x: 50 }}\n            whileInView={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.4 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6\">About Priya</h2>\n            <p className=\"text-lg text-netflix-light-gray mb-6\">\n              {profile.bio}\n            </p>\n            <p className=\"text-lg text-netflix-light-gray mb-8\">\n              {profile.mission}\n            </p>\n\n            {/* Skills */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <h3 className=\"text-xl font-semibold mb-3 netflix-red\">Frontend</h3>\n                <ul className=\"space-y-2 text-netflix-light-gray\">\n                  {profile.skills.frontend.map((skill, index) => (\n                    <motion.li\n                      key={skill}\n                      initial={{ opacity: 0, x: -20 }}\n                      whileInView={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.5, delay: 0.6 + index * 0.1 }}\n                      viewport={{ once: true }}\n                    >\n                      {skill}\n                    </motion.li>\n                  ))}\n                </ul>\n              </div>\n              <div>\n                <h3 className=\"text-xl font-semibold mb-3 netflix-red\">Backend</h3>\n                <ul className=\"space-y-2 text-netflix-light-gray\">\n                  {profile.skills.backend.map((skill, index) => (\n                    <motion.li\n                      key={skill}\n                      initial={{ opacity: 0, x: -20 }}\n                      whileInView={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.5, delay: 0.8 + index * 0.1 }}\n                      viewport={{ once: true }}\n                    >\n                      {skill}\n                    </motion.li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </motion.div>\n        </motion.div>\n      </div>\n    </section>\n  );\n}","size_bytes":3363},"client/src/components/footer.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Profile } from \"@shared/schema\";\n\ninterface FooterProps {\n  profile?: Profile;\n}\n\nexport default function Footer({ profile }: FooterProps) {\n  if (!profile) {\n    return (\n      <footer id=\"contact\" className=\"bg-netflix-dark py-16 px-4 md:px-12 mt-16\">\n        <div className=\"max-w-6xl mx-auto text-center\">\n          <div className=\"text-netflix-light-gray\">Contact information not available</div>\n        </div>\n      </footer>\n    );\n  }\n\n  return (\n    <footer id=\"contact\" className=\"bg-netflix-dark py-16 px-4 md:px-12 mt-16\">\n      <div className=\"max-w-6xl mx-auto\">\n        <motion.div\n          className=\"text-center mb-12\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          viewport={{ once: true }}\n        >\n          <h2 className=\"text-4xl font-bold mb-6\">Let's Work Together</h2>\n          <p className=\"text-xl text-netflix-light-gray\">Ready to bring your ideas to life</p>\n        </motion.div>\n\n        {/* Contact Information */}\n        <motion.div\n          className=\"flex flex-col md:flex-row justify-center items-center space-y-4 md:space-y-0 md:space-x-8 mb-12\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.2 }}\n          viewport={{ once: true }}\n        >\n          <a\n            href={`mailto:${profile.email}`}\n            className=\"flex items-center space-x-2 text-netflix-light-gray hover:text-white transition-colors\"\n          >\n            <span>📧</span>\n            <span>{profile.email}</span>\n          </a>\n          <a\n            href={`tel:${profile.phone}`}\n            className=\"flex items-center space-x-2 text-netflix-light-gray hover:text-white transition-colors\"\n          >\n            <span>📞</span>\n            <span>{profile.phone}</span>\n          </a>\n          <div className=\"flex items-center space-x-2 text-netflix-light-gray\">\n            <span>📍</span>\n            <span>{profile.location}</span>\n          </div>\n        </motion.div>\n\n        {/* Social Links */}\n        <motion.div\n          className=\"flex justify-center space-x-6 mb-12\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.4 }}\n          viewport={{ once: true }}\n        >\n          <a\n            href={profile.social.linkedin}\n            className=\"w-12 h-12 bg-white/10 rounded-full flex items-center justify-center hover:bg-netflix-red transition-colors\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-linkedin-in text-xl\"></i>\n          </a>\n          <a\n            href={profile.social.github}\n            className=\"w-12 h-12 bg-white/10 rounded-full flex items-center justify-center hover:bg-netflix-red transition-colors\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-github text-xl\"></i>\n          </a>\n          <a\n            href={profile.social.twitter}\n            className=\"w-12 h-12 bg-white/10 rounded-full flex items-center justify-center hover:bg-netflix-red transition-colors\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-twitter text-xl\"></i>\n          </a>\n        </motion.div>\n\n        {/* Copyright */}\n        <motion.div\n          className=\"text-center text-netflix-light-gray\"\n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          transition={{ duration: 0.8, delay: 0.6 }}\n          viewport={{ once: true }}\n        >\n          <p>&copy; 2024 Portfolio. All rights reserved.</p>\n        </motion.div>\n      </div>\n    </footer>\n  );\n}","size_bytes":3852},"client/src/components/header.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { Search, ChevronDown, Menu, X, Download, Briefcase, Mic, Linkedin } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useLocation, Link } from \"wouter\";\nimport OptimizedProfileImage from \"./optimized-profile-image\";\n\nexport default function Header() {\n  const [scrolled, setScrolled] = useState(false);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [searchOpen, setSearchOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\n  const [location, setLocation] = useLocation();\n  const searchInputRef = useRef<HTMLInputElement>(null);\n  const profileMenuRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 100);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  // Close profile menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (profileMenuRef.current && !profileMenuRef.current.contains(event.target as Node)) {\n        setProfileMenuOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  // Auto-focus search input when search opens\n  useEffect(() => {\n    if (searchOpen && searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }, [searchOpen]);\n\n  // Auto-search with debounce\n  useEffect(() => {\n    if (!searchQuery.trim()) return;\n\n    const timeoutId = setTimeout(() => {\n      setLocation(`/netflix-search?q=${encodeURIComponent(searchQuery.trim())}`);\n      // Keep search open and query intact\n    }, 1500); // 1.5 second delay after user stops typing\n\n    return () => clearTimeout(timeoutId);\n  }, [searchQuery, setLocation]);\n\n  const handleSearchSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      setLocation(`/netflix-search?q=${encodeURIComponent(searchQuery.trim())}`);\n      // Keep search open and query intact\n    }\n  };\n\n  const handleSearchClose = () => {\n    setSearchOpen(false);\n    setSearchQuery(\"\");\n  };\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n    setMobileMenuOpen(false);\n  };\n\n  const handleProfileMenuClick = (action: string) => {\n    setProfileMenuOpen(false);\n    \n    switch (action) {\n      case 'download-resume':\n        // Download the PDF resume directly\n        const resumeUrl = \"/attached_assets/FAROOQ%20CHISTY%20%20RESUME%202025%20%281%29_1754665051871.pdf\";\n        const link = document.createElement('a');\n        link.href = resumeUrl;\n        link.download = \"Farooq_Chisty_Resume_2025.pdf\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        break;\n      case 'work-with-me':\n        setLocation(\"/contact\");\n        break;\n      case 'invite-as-speaker':\n        setLocation(\"/contact\");\n        break;\n      case 'connect-linkedin':\n        window.open(\"https://linkedin.com/in/farooqchisty\", \"_blank\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <motion.header\n        className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${\n          scrolled ? 'bg-black/95 backdrop-blur-sm' : 'bg-black/80'\n        }`}\n        initial={{ y: -100 }}\n        animate={{ y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <div className=\"px-4 sm:px-6 md:px-12 py-3 sm:py-4\">\n          <div className=\"flex items-center justify-between\">\n            {/* Left Navigation - Always visible */}\n            <nav className=\"flex items-center space-x-4 sm:space-x-6 md:space-x-8\">\n              <img \n                src=\"/attached_assets/farooq-logo.png\" \n                alt=\"Farooq\" \n                className=\"h-8 sm:h-10 md:h-12 w-auto object-contain\"\n                style={{ \n                  maxHeight: 'clamp(2rem, 4vw, 3rem)',\n                  filter: 'brightness(1.1) contrast(1.1)'\n                }}\n              />\n              {/* Desktop Navigation - Hidden on mobile only */}\n              <ul className=\"hidden md:flex space-x-6\">\n                <li>\n                  <Link href=\"/\">\n                    <button className=\"text-sm hover:text-netflix-light-gray transition-colors duration-200\">\n                      Home\n                    </button>\n                  </Link>\n                </li>\n                <li>\n                  <Link href=\"/projects\">\n                    <button className=\"text-sm hover:text-netflix-light-gray transition-colors duration-200\">\n                      Projects\n                    </button>\n                  </Link>\n                </li>\n                <li>\n                  <Link href=\"/lets-chat\">\n                    <button className=\"text-sm hover:text-netflix-light-gray transition-colors duration-200\">\n                      Let's Chat\n                    </button>\n                  </Link>\n                </li>\n                <li>\n                  <Link href=\"/contact\">\n                    <button className=\"text-sm hover:text-netflix-light-gray transition-colors duration-200\">\n                      Hire Me\n                    </button>\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n\n            {/* Right Icons */}\n            <div className=\"flex items-center\">\n              {/* Mobile Search - Only visible on mobile */}\n              <button \n                className=\"sm:hidden p-2 hover:bg-white/10 rounded transition-all duration-200\"\n                onClick={() => setLocation(\"/netflix-search\")}\n              >\n                <Search className=\"w-5 h-5\" />\n              </button>\n\n              {/* Mobile Hamburger Menu */}\n              <button\n                onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n                className=\"md:hidden p-2 hover:bg-white/10 rounded transition-all duration-200 mr-2\"\n              >\n                {mobileMenuOpen ? (\n                  <X className=\"w-6 h-6\" />\n                ) : (\n                  <Menu className=\"w-6 h-6\" />\n                )}\n              </button>\n\n              {/* Desktop/Tablet Icons */}\n              <div className=\"hidden sm:flex items-center space-x-4\">\n                {/* Embedded Search Bar */}\n                <AnimatePresence>\n                  {searchOpen ? (\n                    <motion.form\n                      onSubmit={handleSearchSubmit}\n                      className=\"flex items-center\"\n                      initial={{ width: 0, opacity: 0 }}\n                      animate={{ width: \"auto\", opacity: 1 }}\n                      exit={{ width: 0, opacity: 0 }}\n                      transition={{ duration: 0.3 }}\n                    >\n                      <div className=\"flex items-center bg-black border border-white/30 rounded px-3 py-2\">\n                        <Search className=\"w-4 h-4 text-gray-400 mr-2\" />\n                        <input\n                          ref={searchInputRef}\n                          type=\"text\"\n                          placeholder=\"titles, people, genres\"\n                          value={searchQuery}\n                          onChange={(e) => setSearchQuery(e.target.value)}\n                          className=\"bg-transparent text-white placeholder-gray-400 outline-none text-sm w-32 sm:w-40 md:w-48\"\n                          onBlur={() => !searchQuery && setSearchOpen(false)}\n                        />\n                        <button\n                          type=\"button\"\n                          onClick={handleSearchClose}\n                          className=\"ml-2 text-gray-400 hover:text-white transition-colors\"\n                        >\n                          <X className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                    </motion.form>\n                  ) : (\n                    <button \n                      className=\"p-2 hover:bg-white/10 rounded transition-all duration-200\"\n                      onClick={() => setSearchOpen(true)}\n                    >\n                      <Search className=\"w-5 h-5\" />\n                    </button>\n                  )}\n                </AnimatePresence>\n                \n\n                <div className=\"relative\" ref={profileMenuRef}>\n                  <button \n                    onClick={() => setProfileMenuOpen(!profileMenuOpen)}\n                    className=\"flex items-center space-x-2 p-2 hover:bg-white/10 rounded transition-all duration-200\"\n                  >\n                    <OptimizedProfileImage\n                      src=\"/attached_assets/farooq-headshot.png\" \n                      alt=\"Farooq Chisty\" \n                      className=\"w-8 h-8 rounded object-cover\"\n                    />\n                    <ChevronDown className={`w-4 h-4 transition-transform duration-200 ${profileMenuOpen ? 'rotate-180' : ''}`} />\n                  </button>\n                  \n                  {/* Profile Dropdown Menu */}\n                  <AnimatePresence>\n                    {profileMenuOpen && (\n                      <motion.div\n                        initial={{ opacity: 0, y: -10, scale: 0.95 }}\n                        animate={{ opacity: 1, y: 0, scale: 1 }}\n                        exit={{ opacity: 0, y: -10, scale: 0.95 }}\n                        transition={{ duration: 0.2 }}\n                        className=\"absolute right-0 top-full mt-2 w-64 bg-black/95 backdrop-blur-sm border border-gray-700 rounded-md shadow-2xl overflow-hidden z-50\"\n                      >\n                        {/* Profile Section */}\n                        <div className=\"px-4 py-3 border-b border-gray-700\">\n                          <div className=\"flex items-center space-x-3\">\n                            <OptimizedProfileImage\n                              src=\"/attached_assets/farooq-headshot.png\" \n                              alt=\"Farooq Chisty\" \n                              className=\"w-10 h-10 rounded object-cover\"\n                            />\n                            <div>\n                              <p className=\"text-white font-medium text-sm\">Farooq Chisty</p>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        {/* Menu Items */}\n                        <div className=\"py-2\">\n                          <button\n                            onClick={() => handleProfileMenuClick('download-resume')}\n                            className=\"w-full flex items-center space-x-3 px-4 py-3 text-white hover:bg-gray-800/50 transition-colors text-left\"\n                          >\n                            <Download className=\"w-5 h-5\" />\n                            <span className=\"text-sm\">Download Resume</span>\n                          </button>\n                          \n                          <button\n                            onClick={() => handleProfileMenuClick('work-with-me')}\n                            className=\"w-full flex items-center space-x-3 px-4 py-3 text-white hover:bg-gray-800/50 transition-colors text-left\"\n                          >\n                            <Briefcase className=\"w-5 h-5\" />\n                            <span className=\"text-sm\">Work with me</span>\n                          </button>\n                          \n                          <button\n                            onClick={() => handleProfileMenuClick('invite-as-speaker')}\n                            className=\"w-full flex items-center space-x-3 px-4 py-3 text-white hover:bg-gray-800/50 transition-colors text-left\"\n                          >\n                            <Mic className=\"w-5 h-5\" />\n                            <span className=\"text-sm\">Invite as a Speaker</span>\n                          </button>\n                          \n                          <button\n                            onClick={() => handleProfileMenuClick('connect-linkedin')}\n                            className=\"w-full flex items-center space-x-3 px-4 py-3 text-white hover:bg-gray-800/50 transition-colors text-left\"\n                          >\n                            <Linkedin className=\"w-5 h-5\" />\n                            <span className=\"text-sm\">Connect on LinkedIn</span>\n                          </button>\n                        </div>\n                      </motion.div>\n                    )}\n                  </AnimatePresence>\n                </div>\n              </div>\n              \n\n            </div>\n          </div>\n        </div>\n      </motion.header>\n\n      {/* Mobile Menu Dropdown */}\n      <AnimatePresence>\n        {mobileMenuOpen && (\n          <motion.div\n            className=\"fixed inset-0 z-40 md:hidden\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.2 }}\n          >\n            <div className=\"absolute inset-0 bg-black/80 backdrop-blur-sm\" onClick={() => setMobileMenuOpen(false)} />\n            <motion.div\n              className=\"absolute top-20 left-0 right-0 bg-black/95 backdrop-blur-md border-t border-gray-800\"\n              initial={{ y: -20, opacity: 0 }}\n              animate={{ y: 0, opacity: 1 }}\n              exit={{ y: -20, opacity: 0 }}\n              transition={{ duration: 0.2 }}\n            >\n              <nav className=\"px-4 py-6\">\n                {/* Mobile Navigation Items */}\n                <div className=\"space-y-4 mb-6\">\n                  <Link href=\"/\">\n                    <button \n                      onClick={() => setMobileMenuOpen(false)}\n                      className=\"w-full text-left text-lg font-medium text-white hover:text-netflix-red transition-colors duration-200 py-3 px-2\"\n                    >\n                      Home\n                    </button>\n                  </Link>\n                  <Link href=\"/projects\">\n                    <button \n                      onClick={() => setMobileMenuOpen(false)}\n                      className=\"w-full text-left text-lg font-medium text-white hover:text-netflix-red transition-colors duration-200 py-3 px-2\"\n                    >\n                      Projects\n                    </button>\n                  </Link>\n                  <Link href=\"/lets-chat\">\n                    <button \n                      onClick={() => setMobileMenuOpen(false)}\n                      className=\"w-full text-left text-lg font-medium text-white hover:text-netflix-red transition-colors duration-200 py-3 px-2\"\n                    >\n                      Let's Chat\n                    </button>\n                  </Link>\n                  <Link href=\"/contact\">\n                    <button \n                      onClick={() => setMobileMenuOpen(false)}\n                      className=\"w-full text-left text-lg font-medium text-white hover:text-netflix-red transition-colors duration-200 py-3 px-2\"\n                    >\n                      Hire Me\n                    </button>\n                  </Link>\n                </div>\n\n\n              </nav>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n}","size_bytes":15582},"client/src/components/hero-section.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Download, Play, Eye } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Profile } from \"@shared/schema\";\nimport { useLocation } from \"wouter\";\nimport { useState, useRef, useEffect } from \"react\";\n// Background video for immersive hero experience\n\ninterface HeroSectionProps {\n  profile?: Profile;\n}\n\nexport default function HeroSection({ profile }: HeroSectionProps) {\n  const { toast } = useToast();\n  const [, setLocation] = useLocation();\n  const [videoError, setVideoError] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    // Detect mobile devices\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    \n    // Force video play on component mount for better reliability\n    const timer = setTimeout(() => {\n      if (videoRef.current && !videoError) {\n        videoRef.current.muted = true;\n        videoRef.current.play().catch(() => {\n          console.log('Delayed video play attempt failed');\n        });\n      }\n    }, 500);\n    \n    return () => {\n      window.removeEventListener('resize', checkMobile);\n      clearTimeout(timer);\n    };\n  }, [videoError]);\n\n  const handleViewResume = () => {\n    const resumeUrl = \"/attached_assets/FAROOQ%20CHISTY%20%20RESUME%202025%20%281%29_1754665051871.pdf\";\n    window.open(resumeUrl, \"_blank\");\n  };\n\n  const navigateToProjects = () => {\n    setLocation('/projects');\n  };\n\n  return (\n    <section id=\"home\" className=\"relative h-screen flex items-end overflow-hidden\" \n      style={{\n        backgroundColor: '#1a1a1a',\n        // Mobile performance optimizations\n        contain: 'layout style paint',\n        contentVisibility: 'auto'\n      }}>\n      {/* Background Video or Fallback */}\n      <div className=\"absolute inset-0\">\n        {!videoError ? (\n          <video\n            ref={videoRef}\n            className=\"w-full h-full object-cover\"\n            autoPlay\n            muted\n            loop\n            playsInline\n            preload=\"metadata\"\n            controls={false}\n            disablePictureInPicture\n            onError={() => setVideoError(true)}\n            onLoadStart={() => {\n              // Force play on load start for better mobile compatibility\n              if (videoRef.current) {\n                videoRef.current.muted = true;\n                videoRef.current.play().catch(() => {\n                  console.log('Video autoplay prevented by browser');\n                });\n              }\n            }}\n            onLoadedData={() => {\n              // Ensure video starts playing with mobile-specific handling\n              if (videoRef.current) {\n                videoRef.current.muted = true;\n                const playPromise = videoRef.current.play();\n                if (playPromise !== undefined) {\n                  playPromise.catch(() => {\n                    console.log('Video autoplay prevented by browser - user interaction required');\n                  });\n                }\n              }\n            }}\n            onCanPlay={() => {\n              // Ensure video plays when ready\n              if (videoRef.current) {\n                videoRef.current.muted = true;\n                videoRef.current.play().catch(() => {\n                  console.log('Video play prevented');\n                });\n              }\n            }}\n            onCanPlayThrough={() => {\n              // Additional play attempt when fully loaded\n              if (videoRef.current) {\n                videoRef.current.play().catch(() => {\n                  console.log('Video play prevented on canPlayThrough');\n                });\n              }\n            }}\n            style={{\n              // Performance optimizations\n              willChange: 'auto',\n              transform: 'translateZ(0)', // Hardware acceleration\n            }}\n          >\n            <source src=\"/attached_assets/videoBg_1754666843775.mp4\" type=\"video/mp4\" />\n          </video>\n        ) : (\n          // Fallback gradient background if video fails to load\n          <div \n            className=\"w-full h-full bg-cover bg-center\"\n            style={{\n              backgroundImage: \"linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 50%, #1a1a1a 100%)\"\n            }}\n          />\n        )}\n\n        {/* Dark gradient overlay for text readability */}\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/90 via-black/70 to-black/40\"></div>\n      </div>\n\n      {/* Hero Content */}\n      <motion.div\n        className=\"relative z-10 px-4 sm:px-6 md:px-12 lg:px-16 xl:px-20 pb-16 sm:pb-24 md:pb-32\"\n        initial={{ opacity: 0, y: 50 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 1, delay: 0.5 }}\n      >\n        <div className=\"max-w-4xl\">\n          <motion.h1\n            className=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-black mb-4 leading-tight text-white drop-shadow-lg\"\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.7 }}\n          >\n            Farooq Chisty\n          </motion.h1>\n          \n          <motion.h2\n            className=\"text-lg sm:text-xl md:text-2xl lg:text-3xl font-bold mb-4 sm:mb-6 text-white drop-shadow-lg\"\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.8 }}\n          >\n            Growth Operator | Vibe Marketer | AI Generalist\n          </motion.h2>\n          \n          <motion.p\n            className=\"text-sm sm:text-base md:text-lg lg:text-xl text-white/90 mb-6 sm:mb-8 max-w-2xl drop-shadow-md leading-relaxed\"\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, delay: 0.9 }}\n          >\n            {profile?.bio || \"Creating modern web applications with cutting-edge technologies. Passionate about user experience and scalable solutions.\"}\n          </motion.p>\n          \n          <motion.div\n            className=\"flex flex-col sm:flex-row gap-3 sm:gap-4\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 1.1 }}\n          >\n            <Button\n              onClick={navigateToProjects}\n              className=\"bg-white text-black px-6 sm:px-8 py-3 sm:py-4 rounded font-semibold text-base sm:text-lg hover:bg-netflix-light-gray transition-colors duration-200 flex items-center justify-center gap-2\"\n              size=\"lg\"\n            >\n              <Play className=\"w-4 h-4 sm:w-5 sm:h-5\" />\n              View Projects\n            </Button>\n            \n            <Button\n              onClick={handleViewResume}\n              variant=\"secondary\"\n              className=\"bg-white/20 backdrop-blur-sm text-white px-6 sm:px-8 py-3 sm:py-4 rounded font-semibold text-base sm:text-lg hover:bg-white/30 transition-all duration-200 flex items-center justify-center gap-2\"\n              size=\"lg\"\n            >\n              <Eye className=\"w-4 h-4 sm:w-5 sm:h-5\" />\n              View Resume\n            </Button>\n          </motion.div>\n        </div>\n      </motion.div>\n    </section>\n  );\n}","size_bytes":7450},"client/src/components/project-carousel.tsx":{"content":"import { useRef, useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { ChevronLeft, ChevronRight, Play, Plus, Share, Check, Copy, ThumbsUp, ChevronDown } from \"lucide-react\";\nimport { Project } from \"@shared/schema\";\n\ninterface ProjectCarouselProps {\n  projects: Project[];\n  onProjectClick: (projectId: string) => void;\n}\n\nexport default function ProjectCarousel({ projects, onProjectClick }: ProjectCarouselProps) {\n  \n  const getProjectTitleDescription = (project: Project) => {\n    // Return empty string for all projects to remove hover descriptions\n    return \"\";\n  };\n\n  const getProjectSubtitle = (project: Project): string => {\n    // Return empty string for all projects to remove subtitles when hovered\n    return \"\";\n  };\n\n  const scrollRef = useRef<HTMLDivElement>(null);\n  const [canScrollLeft, setCanScrollLeft] = useState(false);\n  const [canScrollRight, setCanScrollRight] = useState(false);\n  const [showShareMenu, setShowShareMenu] = useState<string | null>(null);\n  const [copiedProject, setCopiedProject] = useState<string | null>(null);\n  const [hoveredProject, setHoveredProject] = useState<string | null>(null);\n  const [hoverTimeout, setHoverTimeout] = useState<NodeJS.Timeout | null>(null);\n  const [isMobile, setIsMobile] = useState(false);\n  const videoRefs = useRef<{ [key: string]: HTMLVideoElement | null }>({});\n\n  const checkScrollability = () => {\n    const container = scrollRef.current;\n    if (!container) return;\n    \n    setCanScrollLeft(container.scrollLeft > 0);\n    setCanScrollRight(\n      container.scrollLeft < container.scrollWidth - container.clientWidth\n    );\n  };\n\n  // Cache responsive values to prevent repeated DOM queries\n  const getScrollParams = () => {\n    const width = window.innerWidth;\n    const cardWidth = width >= 1280 ? 276 : width >= 1024 ? 252 : width >= 768 ? 236 : 240;\n    const scrollCount = width >= 1024 ? 5 : width >= 768 ? 3 : 2;\n    return { cardWidth, scrollCount };\n  };\n\n  const scrollLeft = () => {\n    const container = scrollRef.current;\n    if (!container) return;\n    \n    const { cardWidth, scrollCount } = getScrollParams();\n    container.scrollBy({ left: -cardWidth * scrollCount, behavior: 'smooth' });\n  };\n\n  const scrollRight = () => {\n    const container = scrollRef.current;\n    if (!container) return;\n    \n    const { cardWidth, scrollCount } = getScrollParams();\n    container.scrollBy({ left: cardWidth * scrollCount, behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    const container = scrollRef.current;\n    if (!container) return;\n\n    // Cache mobile state to prevent repeated window.innerWidth calls (reduces forced reflows)\n    const updateMobileState = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    updateMobileState();\n\n    checkScrollability();\n    \n    const handleScroll = () => checkScrollability();\n    const handleResize = () => {\n      updateMobileState();\n      checkScrollability();\n    };\n    \n    container.addEventListener('scroll', handleScroll);\n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [projects]);\n\n  // Close share menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setShowShareMenu(null);\n      // Also clear hover state when closing share menu by clicking outside\n      setHoveredProject(null);\n    };\n\n    if (showShareMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [showShareMenu]);\n\n  const handleShare = (project: Project, e: React.MouseEvent) => {\n    e.stopPropagation();\n    \n    // Toggle share menu\n    const isMenuOpen = showShareMenu === project.id;\n    setShowShareMenu(isMenuOpen ? null : project.id);\n    \n    // Apply hover effects when share button is clicked (similar to card hover)\n    if (!isMenuOpen) {\n      // Clear any existing hover timeout\n      if (hoverTimeout) {\n        clearTimeout(hoverTimeout);\n        setHoverTimeout(null);\n      }\n      // Set hovered state to trigger all hover effects\n      setHoveredProject(project.id);\n    } else {\n      // Remove hover effects when closing share menu\n      setHoveredProject(null);\n    }\n  };\n\n  const copyProjectLink = async (project: Project, e: React.MouseEvent) => {\n    e.stopPropagation();\n    const projectUrl = `${window.location.origin}?project=${project.id}`;\n    try {\n      await navigator.clipboard.writeText(projectUrl);\n      setCopiedProject(project.id);\n      setTimeout(() => {\n        setCopiedProject(null);\n        // Reset hover state after showing copied feedback\n        setShowShareMenu(null);\n        setHoveredProject(null);\n      }, 2000);\n    } catch (err) {\n      console.error('Failed to copy: ', err);\n      // Fallback for older browsers or failed clipboard access\n      try {\n        const textArea = document.createElement('textarea');\n        textArea.value = projectUrl;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        setCopiedProject(project.id);\n        setTimeout(() => {\n          setCopiedProject(null);\n          // Reset hover state after showing copied feedback\n          setShowShareMenu(null);\n          setHoveredProject(null);\n        }, 2000);\n      } catch (fallbackErr) {\n        console.error('Fallback copy failed: ', fallbackErr);\n      }\n    }\n  };\n\n  const shareOnSocial = (platform: string, project: Project, e: React.MouseEvent) => {\n    e.stopPropagation();\n    const projectUrl = encodeURIComponent(`${window.location.origin}?project=${project.id}`);\n    const text = encodeURIComponent(`Check out this project: ${project.title}`);\n    const projectTitle = encodeURIComponent(project.title);\n    \n    let shareUrl = '';\n    switch (platform) {\n      case 'twitter':\n        shareUrl = `https://twitter.com/intent/tweet?text=${text}&url=${projectUrl}`;\n        break;\n      case 'linkedin':\n        shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${projectUrl}`;\n        break;\n      case 'whatsapp':\n        shareUrl = `https://wa.me/?text=${text}%20${projectUrl}`;\n        break;\n      case 'telegram':\n        shareUrl = `https://t.me/share/url?url=${projectUrl}&text=${text}`;\n        break;\n      case 'instagram':\n        // Instagram doesn't support direct URL sharing, so we'll copy to clipboard\n        navigator.clipboard.writeText(`${decodeURIComponent(text)} ${decodeURIComponent(projectUrl)}`);\n        setCopiedProject(project.id);\n        setTimeout(() => setCopiedProject(null), 2000);\n        setShowShareMenu(null);\n        // Reset hover state when sharing\n        setHoveredProject(null);\n        return;\n      case 'facebook':\n        shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${projectUrl}`;\n        break;\n    }\n    \n    if (shareUrl) {\n      window.open(shareUrl, '_blank', 'width=600,height=400');\n    }\n    setShowShareMenu(null);\n    // Reset hover state when sharing\n    setHoveredProject(null);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement>) => {\n    const slider = scrollRef.current;\n    if (!slider) return;\n\n    const startX = e.pageX - slider.offsetLeft;\n    const scrollLeft = slider.scrollLeft;\n    let isDown = true;\n\n    const handleMouseMove = (e: MouseEvent) => {\n      if (!isDown) return;\n      e.preventDefault();\n      const x = e.pageX - slider.offsetLeft;\n      const walk = (x - startX) * 2;\n      slider.scrollLeft = scrollLeft - walk;\n    };\n\n    const handleMouseUp = () => {\n      isDown = false;\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n  };\n\n  if (projects.length === 0) {\n    return (\n      <div className=\"px-4 sm:px-6 md:px-12\">\n        <div className=\"text-netflix-light-gray text-sm sm:text-base\">No projects available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative group\">\n      {/* Left Arrow */}\n      {canScrollLeft && (\n        <button\n          onClick={scrollLeft}\n          className=\"absolute left-2 top-1/2 -translate-y-1/2 z-10 bg-black/50 hover:bg-black/70 text-white p-2 rounded-full opacity-0 group-hover:opacity-100 transition-all duration-300 backdrop-blur-sm\"\n          aria-label=\"Scroll left\"\n        >\n          <ChevronLeft className=\"w-6 h-6\" />\n        </button>\n      )}\n\n      {/* Right Arrow */}\n      {canScrollRight && (\n        <button\n          onClick={scrollRight}\n          className=\"absolute right-2 top-1/2 -translate-y-1/2 z-10 bg-black/50 hover:bg-black/70 text-white p-2 rounded-full opacity-0 group-hover:opacity-100 transition-all duration-300 backdrop-blur-sm\"\n          aria-label=\"Scroll right\"\n        >\n          <ChevronRight className=\"w-6 h-6\" />\n        </button>\n      )}\n\n      <div\n        ref={scrollRef}\n        className=\"flex gap-1 sm:gap-2 md:gap-2 lg:gap-3 xl:gap-3 overflow-x-auto scrollbar-hide px-4 sm:px-6 md:px-12 pb-4 cursor-grab active:cursor-grabbing\"\n        onMouseDown={handleMouseDown}\n      >\n        {projects.map((project, index) => {\n          const hasLiveUrl = project.liveUrl && project.liveUrl.length > 0;\n          const isClickable = hasLiveUrl || project.status === \"coming-soon\" || project.status === \"completed\";\n          \n          return (\n            <motion.div\n              key={project.id}\n              className={`flex-none cursor-pointer relative group ${\n                hoveredProject === project.id \n                  ? 'w-72 sm:w-76 md:w-80 lg:w-80 xl:w-80' \n                  : 'w-44 sm:w-56 md:w-52 lg:w-60 xl:w-64'\n              }`}\n              style={{\n                transition: 'width 0.3s ease-in-out'\n              }}\n              onClick={() => onProjectClick(project.id)}\n              initial={{ opacity: 0, x: 50 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5, delay: index * 0.1 }}\n              viewport={{ once: true }}\n              onMouseEnter={() => {\n                // Clear any existing timeout\n                if (hoverTimeout) {\n                  clearTimeout(hoverTimeout);\n                }\n                // Set a 0.5 second delay before showing hover state\n                const timeout = setTimeout(() => {\n                  setHoveredProject(project.id);\n                }, 500);\n                setHoverTimeout(timeout);\n              }}\n              onMouseLeave={() => {\n                // Clear timeout and hover state\n                if (hoverTimeout) {\n                  clearTimeout(hoverTimeout);\n                  setHoverTimeout(null);\n                }\n                setHoveredProject(null);\n              }}\n            >\n              {/* Normal Card State */}\n              <motion.div \n                className={`relative overflow-hidden transition-all duration-300 ease-out ${\n                  hoveredProject === project.id \n                    ? 'shadow-2xl shadow-black/50 z-20' \n                    : 'hover:shadow-lg hover:shadow-black/30'\n                }`}\n                style={{\n                  transformOrigin: 'center center',\n                  borderRadius: hoveredProject === project.id ? '12px' : '6px',\n                  // Ensure cards stay centered horizontally on small screens (cached window width)\n                  ...(isMobile && hoveredProject === project.id ? {\n                    position: 'relative',\n                    left: '50%',\n                    transform: 'translateX(-50%) scale(1.15) translateY(-15px)',\n                    zIndex: 20\n                  } : {})\n                }}\n                animate={{\n                  scale: !isMobile && hoveredProject === project.id ? 1.15 : 1,\n                  y: !isMobile && hoveredProject === project.id ? -15 : 0,\n                  x: isMobile && hoveredProject === project.id ? '-50%' : 0,\n                }}\n                transition={{ duration: 1.0, ease: \"easeInOut\" }}\n              >\n                {/* Video background for hover state - optimized loading */}\n                {hoveredProject === project.id && project.video && (\n                  <motion.video\n                    ref={(el) => { videoRefs.current[project.id] = el; }}\n                    src={project.video}\n                    autoPlay\n                    loop\n                    muted\n                    playsInline\n                    preload=\"none\"\n\n                    className=\"absolute top-0 left-0 right-0 w-full object-cover z-0\"\n                    style={{ \n                      height: '65%',\n                      borderTopLeftRadius: '12px',\n                      borderTopRightRadius: '12px',\n                      aspectRatio: '16/9'\n                    }}\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ duration: 0.4 }}\n                  />\n                )}\n                \n                {/* Static Image - optimized with responsive sizing and modern format hints */}\n                <img\n                  src={project.image}\n                  alt={project.title}\n                  loading={index < 5 ? \"eager\" : \"lazy\"}\n                  decoding=\"async\"\n                  fetchPriority={index < 3 ? \"high\" : \"low\"}\n                  sizes=\"(max-width: 768px) 240px, (max-width: 1024px) 252px, 276px\"\n                  srcSet={`${project.image}?w=240&q=85 240w, ${project.image}?w=252&q=85 252w, ${project.image}?w=276&q=85 276w`}\n                  className={`w-full object-cover transition-all duration-300 relative z-10 ${\n                    hoveredProject === project.id \n                      ? 'opacity-0 h-72 sm:h-76 md:h-80' \n                      : 'opacity-100 h-24 sm:h-32 md:h-24 lg:h-28 xl:h-32'\n                  }`}\n                  style={{\n                    borderRadius: hoveredProject === project.id ? '12px' : '6px',\n                    aspectRatio: '16/9',\n                    objectFit: 'cover',\n                    // Position the image to show the text for specific projects\n                    objectPosition: project.title === \"Content Automation (Reddit → LinkedIn)\" \n                      ? 'center 20%' \n                      : project.title === \"Internal Linking Agent\"\n                      ? 'center 80%'\n                      : project.title === \"InboxBites\"\n                      ? 'center 5%'\n                      : project.title === \"DigiPe\"\n                      ? 'center 70%'\n                      : project.title === \"Solgames\"\n                      ? 'center 5%'\n                      : project.title === \"GEOptimer\"\n                      ? 'center 80%'\n                      : project.title === \"Cazpro\"\n                      ? 'center 80%'\n                      : project.title === \"Lead Generator Agent (LinkedIn, Twitter, Reddit)\"\n                      ? 'center 90%'\n                      : project.title === \"AGENTSY\"\n                      ? 'center 10%'\n                      : project.title === \"Blog Automation (Perplexity MCP)\"\n                      ? 'center 25%'\n                      : project.title === \"FDX Sports\"\n                      ? 'center 20%'\n                      : project.title === \"Inventrax\"\n                      ? 'center 75%'\n                      : project.title === \"Growth Opportunity Agent\"\n                      ? 'center 30%'\n                      : project.title === \"Zentrades\"\n                      ? 'center 25%'\n                      : project.title === \"Reply Agent (Auto-Commenter)\"\n                      ? 'center 40%'\n                      : project.title === \"Millionth Mile Marketing\"\n                      ? 'center 30%'\n                      : project.title === \"Cazpro\"\n                      ? 'center 15%'\n                      : project.title === \"DigiPe\"\n                      ? 'center 80%'\n                      : project.title === \"Codiste\"\n                      ? 'center 25%'\n                      : 'center center'\n                  }}\n                  draggable={false}\n                />\n                \n                {/* Gradient Overlay - only for non-hover state */}\n                {hoveredProject !== project.id && (\n                  <div className=\"absolute inset-0 z-20 bg-gradient-to-t from-black/80 via-transparent to-transparent\"\n                    style={{ borderRadius: '6px' }}>\n                  </div>\n                )}\n                \n                {/* Share Button */}\n                <div className=\"absolute top-4 right-4 z-40\">\n                  <button\n                    onClick={(e) => handleShare(project, e)}\n                    className={`bg-black/80 hover:bg-black/90 text-white p-3 rounded-full transition-all duration-300 backdrop-blur-md border border-white/20 shadow-lg ${\n                      hoveredProject === project.id ? 'opacity-100 scale-100' : 'opacity-0 scale-95'\n                    }`}\n                    aria-label=\"Share project\"\n                  >\n                    <Share className=\"w-5 h-5\" />\n                  </button>\n                  \n                  {/* Share Menu - positioned below button */}\n                  {showShareMenu === project.id && (\n                    <div className=\"absolute bg-black/95 backdrop-blur-md rounded-lg p-1 w-[120px] xs:w-[130px] sm:w-[140px] md:w-[150px] z-[99999] border border-white/10 shadow-2xl\"\n                      style={{\n                        top: '52px',\n                        right: '0px',\n                        left: 'auto'\n                      }}\n                      onClick={(e) => e.stopPropagation()}>\n                      <div className=\"space-y-0\">\n                        <button\n                          onClick={(e) => copyProjectLink(project, e)}\n                          className=\"flex items-center space-x-1 w-full text-left text-white hover:text-red-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                        >\n                          {copiedProject === project.id ? (\n                            <Check className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 text-green-400\" />\n                          ) : (\n                            <Copy className=\"w-2.5 h-2.5 xs:w-3 xs:h-3\" />\n                          )}\n                          <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">\n                            {copiedProject === project.id ? 'Copied!' : 'Copy Link'}\n                          </span>\n                        </button>\n                        \n                        <hr className=\"border-gray-600 my-0\" />\n                        \n                        <button\n                          onClick={(e) => shareOnSocial('linkedin', project, e)}\n                          className=\"flex items-center space-x-1 w-full text-left text-white hover:text-blue-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                        >\n                          <div className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 bg-blue-600 rounded-sm flex items-center justify-center\">\n                            <span className=\"text-white text-[6px] xs:text-[7px] sm:text-[8px] font-bold\">in</span>\n                          </div>\n                          <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">LinkedIn</span>\n                        </button>\n                        \n                        <button\n                          onClick={(e) => shareOnSocial('twitter', project, e)}\n                          className=\"flex items-center space-x-1 w-full text-left text-white hover:text-blue-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                        >\n                          <div className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 bg-black rounded-sm flex items-center justify-center border border-white\">\n                            <span className=\"text-white text-[6px] xs:text-[7px] sm:text-[8px] font-bold\">𝕏</span>\n                          </div>\n                          <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">Twitter</span>\n                        </button>\n                        \n                        <button\n                          onClick={(e) => shareOnSocial('whatsapp', project, e)}\n                          className=\"flex items-center space-x-1 w-full text-left text-white hover:text-green-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                        >\n                          <div className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 bg-green-500 rounded-sm flex items-center justify-center\">\n                            <span className=\"text-white text-[6px] xs:text-[7px] sm:text-[8px] font-bold\">W</span>\n                          </div>\n                          <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">WhatsApp</span>\n                        </button>\n                        \n                        <button\n                          onClick={(e) => shareOnSocial('telegram', project, e)}\n                          className=\"flex items-center space-x-1 w-full text-left text-white hover:text-blue-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                        >\n                          <div className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 bg-blue-500 rounded-full flex items-center justify-center\">\n                            <span className=\"text-white text-[6px] xs:text-[7px] sm:text-[8px] font-bold\">T</span>\n                          </div>\n                          <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">Telegram</span>\n                        </button>\n                        \n                        <button\n                          onClick={(e) => shareOnSocial('instagram', project, e)}\n                          className=\"flex items-center space-x-1 w-full text-left text-white hover:text-pink-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                        >\n                          <div className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 bg-gradient-to-r from-purple-500 to-pink-500 rounded-sm flex items-center justify-center\">\n                            <span className=\"text-white text-[6px] xs:text-[7px] sm:text-[8px] font-bold\">IG</span>\n                          </div>\n                          <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">Instagram</span>\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                \n                {/* Content overlay - adapts to hover state */}\n                <div className={`absolute bottom-0 left-0 right-0 z-30 transition-all duration-300 ${\n                  hoveredProject === project.id \n                    ? 'p-3'\n                    : 'p-4'\n                }`}\n                style={{\n                  background: hoveredProject === project.id \n                    ? '#2a2a2a'\n                    : '',\n                  borderBottomLeftRadius: hoveredProject === project.id ? '12px' : '6px',\n                  borderBottomRightRadius: hoveredProject === project.id ? '12px' : '6px',\n                  minHeight: hoveredProject === project.id ? '160px' : 'auto',\n                  maxHeight: hoveredProject === project.id ? '160px' : 'auto',\n                  overflow: 'hidden'\n                }}>\n                  {hoveredProject === project.id && (\n                    <div className=\"transition-all duration-300 mb-1\">\n                      <h3 className=\"font-bold text-white text-sm mb-1\">\n                        {project.title}\n                      </h3>\n                      <p className=\"text-gray-300 text-xs leading-tight line-clamp-2 mb-2\">\n                        {project.description}\n                      </p>\n                    </div>\n                  )}\n                  \n                  {/* Project Subtitle - Only visible on hover */}\n                  {hoveredProject === project.id && (\n                    <p className=\"text-gray-400 text-sm mb-2 transition-all duration-300\">\n                      {getProjectSubtitle(project)}\n                    </p>\n                  )}\n                  \n                  {/* Show description only on hover */}\n                  {hoveredProject === project.id && (\n                    <motion.div\n                      initial={{ opacity: 0, y: 10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.3, delay: 0.1 }}\n                    >\n\n                      \n                      {/* Netflix-style Action buttons */}\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"flex items-center space-x-2\">\n                          {/* Play Button - Opens Project Modal */}\n                          <button \n                            className=\"bg-white text-black p-2 rounded-full hover:bg-gray-200 transition-colors flex items-center justify-center\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              onProjectClick(project.id);\n                            }}\n                            title=\"View project details\"\n                            style={{ width: '36px', height: '36px' }}\n                          >\n                            <Play className=\"w-4 h-4 fill-current ml-1\" />\n                          </button>\n                          \n                          {/* Add Button - Opens Project Modal */}\n                          <button \n                            className=\"border-2 border-gray-500 text-white p-2 rounded-full hover:border-white hover:bg-white/10 transition-colors flex items-center justify-center\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              onProjectClick(project.id);\n                            }}\n                            title=\"View project details\"\n                            style={{ width: '32px', height: '32px' }}\n                          >\n                            <Plus className=\"w-3.5 h-3.5\" />\n                          </button>\n                          \n                          {/* Like Button - Dummy for now */}\n                          <button \n                            className=\"border-2 border-gray-500 text-white p-2 rounded-full hover:border-white hover:bg-white/10 transition-colors flex items-center justify-center\"\n                            onClick={(e) => e.stopPropagation()}\n                            title=\"Like\"\n                            style={{ width: '32px', height: '32px' }}\n                          >\n                            <ThumbsUp className=\"w-3.5 h-3.5\" />\n                          </button>\n                        </div>\n                        \n                        {/* Downward Arrow - Opens Card Details */}\n                        <button \n                          className=\"border-2 border-gray-500 text-white p-2 rounded-full hover:border-white hover:bg-white/10 transition-colors flex items-center justify-center\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            onProjectClick(project.id);\n                          }}\n                          title=\"More info\"\n                          style={{ width: '32px', height: '32px' }}\n                        >\n                          <ChevronDown className=\"w-3.5 h-3.5\" />\n                        </button>\n                      </div>\n                      \n                      {/* Movie info tags - matching Netflix style */}\n                      <div className=\"flex items-center space-x-3 text-xs text-gray-300\">\n                        <span className=\"border border-gray-500 px-2 py-0.5 rounded\">HD</span>\n                        {project.period && (\n                          <span className=\"text-gray-400\">{project.period}</span>\n                        )}\n                        {project.engagementType && (\n                          <span className=\"text-gray-400\">{project.engagementType}</span>\n                        )}\n                      </div>\n                      \n\n                    </motion.div>\n                  )}\n                </div>\n              </motion.div>\n            </motion.div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}","size_bytes":28715},"client/src/components/project-modal.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { X, ExternalLink, Github } from \"lucide-react\";\nimport { Project } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface ProjectModalProps {\n  projectId: string | null;\n  onClose: () => void;\n}\n\nexport default function ProjectModal({ projectId, onClose }: ProjectModalProps) {\n  const { data: project, isLoading } = useQuery<Project>({\n    queryKey: [\"/api/projects\", projectId],\n    enabled: !!projectId,\n  });\n\n  if (!projectId) return null;\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        className=\"fixed inset-0 z-50 bg-black/80 backdrop-blur-sm flex items-center justify-center p-2 sm:p-4\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        onClick={handleBackdropClick}\n      >\n        <motion.div\n          className=\"bg-netflix-dark rounded-lg max-w-4xl w-full max-h-[95vh] sm:max-h-[90vh] overflow-y-auto\"\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          exit={{ scale: 0.9, opacity: 0 }}\n          transition={{ duration: 0.3 }}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <div className=\"p-4 sm:p-6\">\n            {isLoading ? (\n              <div className=\"text-center py-6 sm:py-8\">\n                <div className=\"text-white text-lg sm:text-xl\">Loading project details...</div>\n              </div>\n            ) : project ? (\n              <>\n                <div className=\"flex justify-between items-start mb-4 sm:mb-6\">\n                  <h2 className=\"text-xl sm:text-2xl md:text-3xl font-bold pr-4\">{project.title}</h2>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={onClose}\n                    className=\"text-netflix-light-gray hover:text-white flex-shrink-0\"\n                  >\n                    <X className=\"w-5 h-5 sm:w-6 sm:h-6\" />\n                  </Button>\n                </div>\n\n                {/* Video/Image Container - optimized loading */}\n                {project.video ? (\n                  <video\n                    src={project.video}\n                    className=\"w-full h-48 sm:h-56 md:h-64 object-cover rounded-lg mb-4 sm:mb-6\"\n                    autoPlay\n                    loop\n                    muted\n                    playsInline\n                    preload=\"metadata\"\n                  />\n                ) : (\n                  <img\n                    src={project.image}\n                    alt={project.title}\n                    loading=\"lazy\"\n                    decoding=\"async\"\n                    className=\"w-full h-48 sm:h-56 md:h-64 object-cover rounded-lg mb-4 sm:mb-6\"\n                  />\n                )}\n\n                <div className=\"grid md:grid-cols-2 gap-8\">\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-4\">Description</h3>\n                    <p className=\"text-netflix-light-gray mb-6\">\n                      {project.description}\n                    </p>\n\n                    <h3 className=\"text-xl font-semibold mb-4\">Technologies Used</h3>\n                    <div className=\"flex flex-wrap gap-2 mb-6\">\n                      {project.technologies.map((tech) => (\n                        <span\n                          key={tech}\n                          className=\"px-3 py-1 bg-netflix-red rounded-full text-sm\"\n                        >\n                          {tech}\n                        </span>\n                      ))}\n                    </div>\n\n\n                  </div>\n\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-4\">Project Links</h3>\n                    <div className=\"space-y-3\">\n                      {project.liveUrl ? (\n                        <Button\n                          asChild\n                          className=\"w-full bg-netflix-red hover:bg-red-700 transition-colors\"\n                        >\n                          <a\n                            href={project.liveUrl}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"flex items-center justify-center gap-2\"\n                          >\n                            <ExternalLink className=\"w-4 h-4\" />\n                            View Live Project\n                          </a>\n                        </Button>\n                      ) : (\n                        <Button\n                          disabled\n                          className=\"w-full bg-netflix-red hover:bg-netflix-red cursor-not-allowed opacity-50\"\n                        >\n                          <ExternalLink className=\"w-4 h-4 mr-2\" />\n                          View Live Project\n                        </Button>\n                      )}\n                      \n                      {project.githubUrl ? (\n                        <Button\n                          asChild\n                          variant=\"secondary\"\n                          className=\"w-full bg-white/10 hover:bg-white/20 transition-colors\"\n                        >\n                          <a\n                            href={project.githubUrl}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"flex items-center justify-center gap-2\"\n                          >\n                            <Github className=\"w-4 h-4\" />\n                            View Source Code\n                          </a>\n                        </Button>\n                      ) : (\n                        <Button\n                          disabled\n                          variant=\"secondary\"\n                          className=\"w-full bg-white/10 hover:bg-white/10 cursor-not-allowed opacity-50\"\n                        >\n                          <Github className=\"w-4 h-4 mr-2\" />\n                          View Source Code\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div className=\"text-center py-8\">\n                <div className=\"text-netflix-light-gray\">Project not found</div>\n              </div>\n            )}\n          </div>\n        </motion.div>\n      </motion.div>\n    </AnimatePresence>\n  );\n}","size_bytes":6609},"client/src/components/projects-section.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { motion } from \"framer-motion\";\nimport { Project } from \"@shared/schema\";\nimport ProjectCarousel from \"./project-carousel\";\n\ninterface ProjectsSectionProps {\n  onProjectClick: (projectId: string) => void;\n}\n\nexport default function ProjectsSection({ onProjectClick }: ProjectsSectionProps) {\n  const { data: startupProjects = [], isLoading: startupLoading, error: startupError } = useQuery<Project[]>({\n    queryKey: [\"/api/projects/category/startup\"],\n  });\n\n  const { data: fulltimeProjects = [], isLoading: fulltimeLoading, error: fulltimeError } = useQuery<Project[]>({\n    queryKey: [\"/api/projects/category/fulltime\"],\n  });\n\n  const { data: sidehustleProjects = [], isLoading: sidehustleLoading, error: sidehustleError } = useQuery<Project[]>({\n    queryKey: [\"/api/projects/category/sidehustle\"],\n  });\n\n  const { data: consultingProjects = [], isLoading: consultingLoading, error: consultingError } = useQuery<Project[]>({\n    queryKey: [\"/api/projects/category/consulting\"],\n  });\n\n  return (\n    <section id=\"projects\" className=\"pb-16 pt-8 relative z-10\">\n      {/* Founded Startups - Netflix \"Your Next Watch\" exact positioning */}\n      <motion.div\n        style={{ marginBottom: '48px' }}\n        initial={{ opacity: 0, y: 50 }}\n        whileInView={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.8 }}\n        viewport={{ once: true }}\n      >\n        <div className=\"px-3 sm:px-4 md:px-6 lg:px-12\" style={{ marginBottom: '16px', marginTop: '0' }}>\n          <h2 style={{ \n            fontFamily: 'Netflix Sans, Helvetica Neue, Segoe UI, Roboto, Ubuntu, sans-serif', \n            fontWeight: '500', \n            fontSize: 'clamp(16px, 4vw, 20px)', \n            lineHeight: '1.4', \n            color: '#e5e5e5',\n            letterSpacing: '0.15px',\n            margin: '0'\n          }}>\n            Founded Startups\n          </h2>\n        </div>\n        \n        {startupLoading ? (\n          <div className=\"px-4 sm:px-6 md:px-12\">\n            <div className=\"text-netflix-light-gray text-sm sm:text-base\">Loading startup projects...</div>\n          </div>\n        ) : startupError ? (\n          <div className=\"px-4 sm:px-6 md:px-12\">\n            <div className=\"text-red-400 text-sm sm:text-base\">Failed to load startup projects</div>\n          </div>\n        ) : (\n          <ProjectCarousel projects={startupProjects} onProjectClick={onProjectClick} />\n        )}\n      </motion.div>\n\n      {/* Full-time Gigs */}\n      <motion.div\n        style={{ marginBottom: '48px' }}\n        initial={{ opacity: 0, y: 50 }}\n        whileInView={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.8 }}\n        viewport={{ once: true }}\n      >\n        <div className=\"px-3 sm:px-4 md:px-6 lg:px-12\" style={{ marginBottom: '16px' }}>\n          <h2 style={{ \n            fontFamily: 'Netflix Sans, Helvetica Neue, Segoe UI, Roboto, Ubuntu, sans-serif', \n            fontWeight: '500', \n            fontSize: 'clamp(16px, 4vw, 20px)', \n            lineHeight: '1.4', \n            color: '#e5e5e5',\n            letterSpacing: '0.15px',\n            margin: '0'\n          }}>\n            Full-time Gigs\n          </h2>\n        </div>\n        \n        {fulltimeLoading ? (\n          <div className=\"px-4 sm:px-6 md:px-12\">\n            <div className=\"text-netflix-light-gray text-sm sm:text-base\">Loading full-time projects...</div>\n          </div>\n        ) : fulltimeError ? (\n          <div className=\"px-4 sm:px-6 md:px-12\">\n            <div className=\"text-red-400 text-sm sm:text-base\">Failed to load full-time projects</div>\n          </div>\n        ) : (\n          <ProjectCarousel projects={fulltimeProjects} onProjectClick={onProjectClick} />\n        )}\n      </motion.div>\n\n      {/* Side Hustles */}\n      <motion.div\n        style={{ marginBottom: '48px' }}\n        initial={{ opacity: 0, y: 50 }}\n        whileInView={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.8 }}\n        viewport={{ once: true }}\n      >\n        <div className=\"px-3 sm:px-4 md:px-6 lg:px-12\" style={{ marginBottom: '16px' }}>\n          <h2 style={{ \n            fontFamily: 'Netflix Sans, Helvetica Neue, Segoe UI, Roboto, Ubuntu, sans-serif', \n            fontWeight: '500', \n            fontSize: 'clamp(16px, 4vw, 20px)', \n            lineHeight: '1.4', \n            color: '#e5e5e5',\n            letterSpacing: '0.15px',\n            margin: '0'\n          }}>\n            Side Hustles\n          </h2>\n        </div>\n        \n        {sidehustleLoading ? (\n          <div className=\"px-4 sm:px-6 md:px-12\">\n            <div className=\"text-netflix-light-gray text-sm sm:text-base\">Loading side hustles...</div>\n          </div>\n        ) : sidehustleError ? (\n          <div className=\"px-4 sm:px-6 md:px-12\">\n            <div className=\"text-red-400 text-sm sm:text-base\">Failed to load side hustles</div>\n          </div>\n        ) : (\n          <ProjectCarousel projects={sidehustleProjects} onProjectClick={onProjectClick} />\n        )}\n      </motion.div>\n\n      {/* Consulting/Fractional CMO */}\n      <motion.div\n        style={{ marginBottom: '48px' }}\n        initial={{ opacity: 0, y: 50 }}\n        whileInView={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.8 }}\n        viewport={{ once: true }}\n      >\n        <div className=\"px-3 sm:px-4 md:px-6 lg:px-12\" style={{ marginBottom: '16px' }}>\n          <h2 style={{ \n            fontFamily: 'Netflix Sans, Helvetica Neue, Segoe UI, Roboto, Ubuntu, sans-serif', \n            fontWeight: '500', \n            fontSize: 'clamp(16px, 4vw, 20px)', \n            lineHeight: '1.4', \n            color: '#e5e5e5',\n            letterSpacing: '0.15px',\n            margin: '0'\n          }}>\n            Consulting/Fractional CMO\n          </h2>\n        </div>\n        \n        {consultingLoading ? (\n          <div className=\"px-4 sm:px-6 md:px-12\">\n            <div className=\"text-netflix-light-gray text-sm sm:text-base\">Loading consulting projects...</div>\n          </div>\n        ) : consultingError ? (\n          <div className=\"px-4 sm:px-6 md:px-12\">\n            <div className=\"text-red-400 text-sm sm:text-base\">Failed to load consulting projects</div>\n          </div>\n        ) : (\n          <ProjectCarousel projects={consultingProjects} onProjectClick={onProjectClick} />\n        )}\n      </motion.div>\n    </section>\n  );\n}","size_bytes":6373},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\n// Use environment variable for API URL in production, fallback to relative path in development\nconst API_BASE_URL = import.meta.env.VITE_API_URL || '';\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const fullUrl = url.startsWith('http') ? url : `${API_BASE_URL}${url}`;\n  const res = await fetch(fullUrl, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const url = queryKey.join(\"/\") as string;\n    const fullUrl = url.startsWith('http') ? url : `${API_BASE_URL}${url}`;\n    const res = await fetch(fullUrl, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n      onError: (error) => {\n        console.error('Mutation error:', error);\n      },\n    },\n  },\n});\n\n// Global error handler for unhandled promise rejections\nif (typeof window !== 'undefined') {\n  window.addEventListener('unhandledrejection', (event) => {\n    console.error('Unhandled promise rejection:', event.reason);\n    // Only prevent default for known query errors to avoid hiding other issues\n    if (event.reason && typeof event.reason === 'object' && 'message' in event.reason) {\n      event.preventDefault();\n    }\n  });\n}\n","size_bytes":2236},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/contact.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Linkedin, Mail, ArrowRight } from \"lucide-react\";\nimport { FaTwitter } from \"react-icons/fa\";\nimport Header from \"../components/header\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function ContactPage() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-black via-gray-900 to-black text-white\">\n      <Header />\n      \n      {/* Header Section */}\n      <div className=\"pt-24 sm:pt-28 md:pt-32 px-4 sm:px-6 md:px-12 pb-12 sm:pb-16\">\n        <motion.div\n          className=\"max-w-6xl mx-auto\"\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          {/* Title */}\n          <motion.h1\n            className=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-black mb-6 sm:mb-8 text-center text-white\"\n            style={{ textShadow: '0 0 20px rgba(255, 255, 255, 0.8), 0 0 40px rgba(255, 255, 255, 0.6)' }}\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            Get in Touch\n          </motion.h1>\n          \n          {/* Subheading - Single line */}\n          <motion.div\n            className=\"text-lg sm:text-xl md:text-2xl text-gray-300 mb-8 sm:mb-12 text-center max-w-4xl mx-auto px-4\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.4 }}\n          >\n            <p>Ready to streamline your workflows? Let's connect and turn chaos into clarity.</p>\n          </motion.div>\n\n          {/* Status Indicators */}\n          <motion.div\n            className=\"flex flex-col items-center space-y-3 sm:space-y-4 mb-12 sm:mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.6 }}\n          >\n            <div className=\"flex items-center space-x-3\">\n              <span className=\"text-base sm:text-lg\">📩</span>\n              <span className=\"text-base sm:text-lg text-gray-300\">Available for new projects</span>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n              <span className=\"text-base sm:text-lg text-gray-300\">Usually responds within 24 hours</span>\n            </div>\n          </motion.div>\n\n          {/* Connect With Me Section */}\n          <motion.div\n            className=\"max-w-3xl mx-auto\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.8 }}\n          >\n            <h2 className=\"text-3xl font-bold mb-8 text-center\">Connect With Me</h2>\n            \n            {/* LinkedIn Profile Card */}\n            <motion.div\n              className=\"bg-gray-800 rounded-2xl p-8 mb-8 border border-gray-700 hover:border-gray-600 transition-all duration-300\"\n              whileHover={{ scale: 1.02 }}\n              transition={{ duration: 0.2 }}\n            >\n              <div className=\"flex items-start space-x-6\">\n                {/* Profile Avatar Placeholder */}\n                <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\n                  <Linkedin className=\"w-8 h-8 text-white\" />\n                </div>\n                \n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3 mb-2\">\n                    <h3 className=\"text-2xl font-bold text-white\">LinkedIn</h3>\n                    <span className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded-full\">Professional</span>\n                  </div>\n                  \n                  <p className=\"text-xl text-gray-300 mb-2\">Farooq Chisty</p>\n                  <p className=\"text-gray-400 text-sm mb-6\">\n                    Connect with me professionally and explore my journey.\n                  </p>\n                  \n                  <a\n                    href=\"https://linkedin.com/in/farooqchisty\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Button className=\"bg-white text-black hover:bg-gray-200 px-6 py-3 font-bold transition-all duration-300 hover:shadow-lg hover:shadow-white/20 flex items-center space-x-2\">\n                      <span>Connect Now</span>\n                      <ArrowRight className=\"w-4 h-4\" />\n                    </Button>\n                  </a>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Twitter Profile Card */}\n            <motion.div\n              className=\"bg-gray-800 rounded-2xl p-8 mb-8 border border-gray-700 hover:border-gray-600 transition-all duration-300\"\n              whileHover={{ scale: 1.02 }}\n              transition={{ duration: 0.2 }}\n            >\n              <div className=\"flex items-start space-x-6\">\n                {/* Profile Avatar Placeholder */}\n                <div className=\"w-16 h-16 bg-gradient-to-br from-blue-400 to-blue-600 rounded-full flex items-center justify-center\">\n                  <FaTwitter className=\"w-8 h-8 text-white\" />\n                </div>\n                \n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3 mb-2\">\n                    <h3 className=\"text-2xl font-bold text-white\">Twitter</h3>\n                    <span className=\"px-3 py-1 bg-blue-500 text-white text-sm rounded-full\">Social</span>\n                  </div>\n                  \n                  <p className=\"text-xl text-gray-300 mb-2\">Farooq Chisty</p>\n                  <p className=\"text-gray-400 text-sm mb-6\">\n                    Follow for insights on growth, automation, and startup stories.\n                  </p>\n                  \n                  <a\n                    href=\"https://x.com/farooqsheik\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Button className=\"bg-white text-black hover:bg-gray-200 px-6 py-3 font-bold transition-all duration-300 hover:shadow-lg hover:shadow-white/20 flex items-center space-x-2\">\n                      <span>Follow Now</span>\n                      <ArrowRight className=\"w-4 h-4\" />\n                    </Button>\n                  </a>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Additional Contact Methods */}\n            <motion.div\n              className=\"grid md:grid-cols-1 gap-6 mb-16\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 1.0 }}\n            >\n              {/* Email Card */}\n              <motion.a\n                href=\"mailto:farooqsheik52543@gmail.com\"\n                className=\"group bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-gray-600 transition-all duration-300\"\n                whileHover={{ scale: 1.02 }}\n              >\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"w-12 h-12 bg-red-600 rounded-full flex items-center justify-center group-hover:bg-red-500 transition-colors duration-300\">\n                    <Mail className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div>\n                    <h4 className=\"text-lg font-semibold text-white\">Email</h4>\n                    <p className=\"text-gray-400 text-sm\">farooqsheik52543@gmail.com</p>\n                  </div>\n                </div>\n              </motion.a>\n            </motion.div>\n          </motion.div>\n\n          {/* Looking for Something Specific Section */}\n          <motion.div\n            className=\"max-w-6xl mx-auto mt-20\"\n            initial={{ opacity: 0, y: 50 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 1.2 }}\n          >\n            <h2 className=\"text-4xl md:text-5xl font-bold text-center text-white mb-12\">\n              Looking for Something Specific?\n            </h2>\n            \n            {/* Service Cards */}\n            <motion.div\n              className=\"grid md:grid-cols-3 gap-8 mb-12\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 1.4 }}\n            >\n              {/* Full-stack Card */}\n              <motion.div\n                className=\"bg-gray-800 rounded-2xl p-8 border border-gray-700 shadow-inner transition-all duration-300 h-full text-center\"\n                whileHover={{ \n                  scale: 1.05, \n                  boxShadow: \"0 20px 60px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.2)\"\n                }}\n              >\n                <h3 className=\"text-2xl font-bold text-white mb-4\">📈 Growth Strategy</h3>\n                <p className=\"text-gray-300 leading-relaxed\">\n                  GTM, AI workflows, Vibe marketing and social distribution using AI.\n                </p>\n              </motion.div>\n\n              {/* Vibe Coding Card */}\n              <motion.div\n                className=\"bg-gray-800 rounded-2xl p-8 border border-gray-700 shadow-inner transition-all duration-300 h-full text-center\"\n                whileHover={{ \n                  scale: 1.05, \n                  boxShadow: \"0 20px 60px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.2)\"\n                }}\n              >\n                <h3 className=\"text-2xl font-bold text-white mb-4\">🎨 Vibe Coding | Marketing</h3>\n                <p className=\"text-gray-300 leading-relaxed\">\n                  Creative frontend logic, marketing-friendly UX, and campaign-ready components.\n                </p>\n              </motion.div>\n\n              {/* AI Automation Card */}\n              <motion.div\n                className=\"bg-gray-800 rounded-2xl p-8 border border-gray-700 shadow-inner transition-all duration-300 h-full text-center\"\n                whileHover={{ \n                  scale: 1.05, \n                  boxShadow: \"0 20px 60px rgba(255, 255, 255, 0.3), 0 0 80px rgba(255, 255, 255, 0.2)\"\n                }}\n              >\n                <h3 className=\"text-2xl font-bold text-white mb-4\">🤖 AI Automation</h3>\n                <p className=\"text-gray-300 leading-relaxed\">\n                  Workflow automation, GenAI integrations, and no-code tools to reduce manual effort.\n                </p>\n              </motion.div>\n            </motion.div>\n\n            {/* Response Bar */}\n            <motion.div\n              className=\"bg-red-900/20 border border-red-900 rounded-2xl p-6 md:p-8 text-center\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 1.6 }}\n            >\n              <h3 className=\"text-2xl font-bold text-white mb-4\">⚡ To Collaborate or Hire</h3>\n              <p className=\"text-white leading-relaxed text-lg\">\n                I respond to all professional inquiries within 24 hours. Thinking of{\" \"}\n                <span className=\"text-red-400 font-semibold\">collaborating</span>? Ping me on{\" \"}\n                <a \n                  href=\"https://linkedin.com/in/farooqchisty\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"text-yellow-400 font-semibold hover:text-yellow-300 transition-colors duration-200 underline hover:no-underline\"\n                >\n                  LinkedIn\n                </a>, let's talk systems, vibes, and solutions.\n              </p>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}","size_bytes":11851},"client/src/pages/home.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport Header from \"../components/header\";\nimport HeroSection from \"../components/hero-section\";\nimport ProjectsSection from \"../components/projects-section\";\nimport NetflixModal from \"../components/netflix-modal\";\nimport { Profile } from \"../../../shared/schema\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Linkedin, Mail, Phone, Home as HomeIcon, Folder, Download, Briefcase, Mic, ChevronDown } from \"lucide-react\";\nimport { FaTwitter } from \"react-icons/fa\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useLocation } from \"wouter\";\n\nexport default function Home() {\n  const [selectedProjectId, setSelectedProjectId] = useState<string | null>(null);\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\n  const [location, setLocation] = useLocation();\n  const profileMenuRef = useRef<HTMLDivElement>(null);\n  \n  // Check for project parameter in URL on component mount\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const projectParam = urlParams.get('project');\n    if (projectParam) {\n      setSelectedProjectId(projectParam);\n      // Remove the parameter from URL without causing a page reload\n      const newUrl = window.location.pathname;\n      window.history.replaceState({}, '', newUrl);\n    }\n  }, []);\n\n  // Close profile menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (profileMenuRef.current && !profileMenuRef.current.contains(event.target as Node)) {\n        setProfileMenuOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  };\n\n  const handleProfileAction = (action: string) => {\n    setProfileMenuOpen(false);\n    \n    switch (action) {\n      case 'download-resume':\n        // Create a temporary link to download the resume\n        const link = document.createElement('a');\n        link.href = '/attached_assets/FAROOQ CHISTY  RESUME 2025 (1)_1754665051871.pdf';\n        link.download = 'Farooq_Chisty_Resume_2025.pdf';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        break;\n      case 'work-with-me':\n      case 'invite-speaker':\n        // Navigate to Contact/Hire Me page\n        setLocation('/contact');\n        break;\n      case 'connect-linkedin':\n        window.open(\"https://linkedin.com/in/farooqchisty\", \"_blank\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const { data: profile, isLoading: profileLoading, error: profileError } = useQuery<Profile>({\n    queryKey: [\"/api/profile\"],\n  });\n\n  if (profileLoading) {\n    return (\n      <div className=\"min-h-screen bg-black flex items-center justify-center\">\n        <div className=\"text-white text-lg sm:text-xl\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (profileError) {\n    return (\n      <div className=\"min-h-screen bg-black flex items-center justify-center\">\n        <div className=\"text-red-400 text-lg sm:text-xl\">Failed to load profile. Please refresh the page.</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background text-foreground overflow-x-hidden\">\n      <Header />\n      \n      {/* Bottom Navigation Bar - Mobile Only */}\n      <div className=\"fixed bottom-0 left-0 right-0 z-40 md:hidden bg-[#141414] border-t border-gray-700\">\n        <div className=\"flex items-center justify-around py-1\">\n          {/* Home Button */}\n          <button\n            onClick={() => setLocation(\"/\")}\n            className=\"flex flex-col items-center py-1 px-2 hover:bg-white/10 rounded transition-all duration-200\"\n          >\n            <HomeIcon className=\"w-5 h-5 text-white mb-0.5\" />\n            <span className=\"text-xs text-white\">Home</span>\n          </button>\n\n          {/* Projects Button */}\n          <button\n            onClick={() => scrollToSection(\"projects\")}\n            className=\"flex flex-col items-center py-1 px-2 hover:bg-white/10 rounded transition-all duration-200\"\n          >\n            <Folder className=\"w-5 h-5 text-white mb-0.5\" />\n            <span className=\"text-xs text-white\">Projects</span>\n          </button>\n\n          {/* Profile Button */}\n          <div className=\"relative\" ref={profileMenuRef}>\n            <button\n              onClick={() => setProfileMenuOpen(!profileMenuOpen)}\n              className=\"flex flex-col items-center py-1 px-2 hover:bg-white/10 rounded transition-all duration-200\"\n            >\n              <img \n                src=\"/attached_assets/farooq-headshot.png\" \n                alt=\"Farooq Chisty\" \n                loading=\"lazy\"\n                decoding=\"async\"\n                className=\"w-5 h-5 rounded object-cover mb-0.5\"\n              />\n              <span className=\"text-xs text-white\">Profile</span>\n            </button>\n\n            {/* Mobile Profile Dropdown Menu */}\n            <AnimatePresence>\n              {profileMenuOpen && (\n                <motion.div\n                  initial={{ opacity: 0, y: 10, scale: 0.95 }}\n                  animate={{ opacity: 1, y: 0, scale: 1 }}\n                  exit={{ opacity: 0, y: 10, scale: 0.95 }}\n                  transition={{ duration: 0.2 }}\n                  className=\"absolute bottom-full mb-2 right-0 w-64 bg-black/95 backdrop-blur-sm border border-gray-700 rounded-md shadow-2xl overflow-hidden z-50\"\n                >\n                  <div className=\"p-4\">\n                    <div className=\"flex items-center space-x-3 mb-4 pb-4 border-b border-gray-700\">\n                      <img \n                        src=\"/attached_assets/farooq-headshot.png\" \n                        alt=\"Farooq Chisty\" \n                        loading=\"lazy\"\n                        decoding=\"async\"\n                        className=\"w-12 h-12 rounded object-cover\"\n                      />\n                      <div>\n                        <h3 className=\"text-white font-medium text-sm\">Farooq Chisty</h3>\n                        <p className=\"text-gray-400 text-xs\">Marketing & Growth Expert</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-1\">\n                      <button\n                        onClick={() => handleProfileAction('download-resume')}\n                        className=\"flex items-center space-x-3 w-full text-left text-white hover:text-red-400 transition-colors py-2 px-2 rounded hover:bg-white/10\"\n                      >\n                        <Download className=\"w-4 h-4\" />\n                        <span className=\"text-sm\">Download Resume</span>\n                      </button>\n                      \n                      <button\n                        onClick={() => handleProfileAction('work-with-me')}\n                        className=\"flex items-center space-x-3 w-full text-left text-white hover:text-red-400 transition-colors py-2 px-2 rounded hover:bg-white/10\"\n                      >\n                        <Briefcase className=\"w-4 h-4\" />\n                        <span className=\"text-sm\">Work with me</span>\n                      </button>\n                      \n                      <button\n                        onClick={() => handleProfileAction('invite-speaker')}\n                        className=\"flex items-center space-x-3 w-full text-left text-white hover:text-red-400 transition-colors py-2 px-2 rounded hover:bg-white/10\"\n                      >\n                        <Mic className=\"w-4 h-4\" />\n                        <span className=\"text-sm\">Invite as Speaker</span>\n                      </button>\n                      \n                      <button\n                        onClick={() => handleProfileAction('connect-linkedin')}\n                        className=\"flex items-center space-x-3 w-full text-left text-white hover:text-red-400 transition-colors py-2 px-2 rounded hover:bg-white/10\"\n                      >\n                        <Linkedin className=\"w-4 h-4\" />\n                        <span className=\"text-sm\">Connect on LinkedIn</span>\n                      </button>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"relative pb-20 md:pb-0\">\n        <HeroSection profile={profile} />\n        <div className=\"relative z-10\" style={{ marginTop: '0rem' }}>\n          <ProjectsSection onProjectClick={setSelectedProjectId} />\n        </div>\n      </div>\n      \n      {/* Footer Section */}\n      <footer id=\"footer\" className=\"bg-black/95 border-t border-gray-800 mt-4 sm:mt-5 md:mt-6 w-screen\">\n        <div className=\"w-screen px-4 sm:px-6 md:px-12 lg:px-16 xl:px-20 py-12 sm:py-14 md:py-16\">\n          <div className=\"w-full grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 lg:gap-6\">\n            \n            {/* Contact Column */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg sm:text-xl font-semibold text-white mb-4 sm:mb-6\">Contact</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center space-x-3 text-gray-300 hover:text-white transition-colors\">\n                  <Mail className=\"w-4 h-4 flex-shrink-0\" />\n                  <a href=\"mailto:farooqsheik52543@gmail.com\" className=\"text-xs sm:text-sm break-all\">\n                    farooqsheik52543@gmail.com\n                  </a>\n                </div>\n                <div className=\"flex items-center space-x-3 text-gray-300 hover:text-white transition-colors\">\n                  <Phone className=\"w-4 h-4 flex-shrink-0\" />\n                  <a href=\"tel:+919878167456\" className=\"text-xs sm:text-sm\">\n                    +91-9878167456\n                  </a>\n                </div>\n              </div>\n            </div>\n\n            {/* Key Highlights Column */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg sm:text-xl font-semibold text-white mb-4 sm:mb-6\">Key Highlights</h3>\n              <div className=\"space-y-3\">\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• $80M+ revenue generated across 5 companies</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• Managed $2M+ in paid ad spend</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• Acquired more than 2 Million users across three apps</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• Raised $150K Pre-seed</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• Founded 3 startups. 1 exit</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• 30+ Keynotes in AI, Blockchain</div>\n              </div>\n            </div>\n\n            {/* Core Skills Column */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg sm:text-xl font-semibold text-white mb-4 sm:mb-6\">Core Skills</h3>\n              <div className=\"space-y-3\">\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• AI Marketing</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• Product Marketing</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• Growth Strategy</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• D2C Marketing</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• Marketing Automation</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• Marketing Measurement</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• Performance Marketing</div>\n                <div className=\"text-gray-300 text-xs sm:text-sm hover:text-white transition-colors cursor-default\">• GTM & Funnel Building</div>\n              </div>\n            </div>\n\n            {/* Social Column */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg sm:text-xl font-semibold text-white mb-4 sm:mb-6\">Social</h3>\n              <div className=\"space-y-3\">\n                <a \n                  href=\"https://x.com/farooqsheik\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center space-x-3 text-gray-300 hover:text-white transition-colors\"\n                >\n                  <FaTwitter className=\"w-4 h-4 flex-shrink-0\" />\n                  <span className=\"text-xs sm:text-sm\">Twitter</span>\n                </a>\n                <a \n                  href=\"https://linkedin.com/in/farooqchisty\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center space-x-3 text-gray-300 hover:text-white transition-colors\"\n                >\n                  <Linkedin className=\"w-4 h-4 flex-shrink-0\" />\n                  <span className=\"text-xs sm:text-sm\">LinkedIn</span>\n                </a>\n              </div>\n            </div>\n          </div>\n\n          {/* Bottom Border */}\n          <div className=\"border-t border-gray-800 mt-8 sm:mt-10 md:mt-12 pt-6 sm:pt-8 w-full\">\n            <div className=\"text-center text-gray-400 text-xs sm:text-sm\">\n              © 2024 Farooq Chisty. All rights reserved.\n            </div>\n          </div>\n        </div>\n      </footer>\n\n      <NetflixModal \n        projectId={selectedProjectId} \n        onClose={() => setSelectedProjectId(null)}\n        onProjectSwitch={(projectId) => setSelectedProjectId(projectId)}\n      />\n    </div>\n  );\n}\n","size_bytes":14493},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/projects.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport Header from \"../components/header\";\nimport ProjectsSection from \"../components/projects-section\";\nimport NetflixModal from \"../components/netflix-modal\";\n\nexport default function ProjectsPage() {\n  const [selectedProjectId, setSelectedProjectId] = useState<string | null>(null);\n  \n  // Check for project parameter in URL on component mount\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const projectParam = urlParams.get('project');\n    if (projectParam) {\n      setSelectedProjectId(projectParam);\n      // Remove the parameter from URL without causing a page reload\n      const newUrl = window.location.pathname;\n      window.history.replaceState({}, '', newUrl);\n    }\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <Header />\n      <div className=\"pt-16 sm:pt-18 md:pt-20\">\n        <div className=\"px-3 sm:px-4 md:px-6 lg:px-12 py-8 sm:py-12 lg:py-16\">\n          <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold mb-4 sm:mb-6 lg:mb-8 text-center\" style={{ textShadow: '0 0 10px rgba(255, 255, 255, 0.8), 0 0 20px rgba(255, 255, 255, 0.6), 0 0 30px rgba(255, 255, 255, 0.4)' }}>My Projects</h1>\n          <p className=\"text-sm sm:text-base lg:text-lg text-muted-foreground mb-4 sm:mb-6 lg:mb-8 text-center max-w-3xl mx-auto px-2 sm:px-4\">\n            Explore my portfolio of web applications, automation tools, and creative projects. \n            Each project showcases different aspects of my development skills and problem-solving approach.\n          </p>\n          \n          {/* Horizontal Divider Line */}\n          <div className=\"w-full h-px bg-navy-700 opacity-25 mb-4 sm:mb-6 lg:mb-8\" style={{backgroundColor: '#1e3a8a'}}></div>\n        </div>\n        <ProjectsSection onProjectClick={setSelectedProjectId} />\n      </div>\n      <NetflixModal \n        projectId={selectedProjectId} \n        onClose={() => setSelectedProjectId(null)} \n        onProjectSwitch={setSelectedProjectId}\n      />\n    </div>\n  );\n}","size_bytes":2096},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/netflix-search.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type Project } from \"@shared/schema\";\nimport { Search, X, ChevronDown, Download, Briefcase, Mic, Linkedin, Menu, Home, Folder } from \"lucide-react\";\nimport NetflixModal from \"@/components/netflix-modal\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nexport default function NetflixSearchPage() {\n  const [location, setLocation] = useLocation();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredProjects, setFilteredProjects] = useState<Project[]>([]);\n  const [selectedProjectId, setSelectedProjectId] = useState<string | null>(null);\n  const [profileMenuOpen, setProfileMenuOpen] = useState(false);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const searchInputRef = useRef<HTMLInputElement>(null);\n  const profileMenuRef = useRef<HTMLDivElement>(null);\n\n  // Get search query from URL params\n  useEffect(() => {\n    const urlParams = new URLSearchParams(location.split('?')[1] || '');\n    const query = urlParams.get('q') || '';\n    setSearchQuery(query);\n  }, [location]);\n\n  // Fetch all projects\n  const { data: projects = [] } = useQuery<Project[]>({\n    queryKey: ['/api/projects'],\n  });\n\n  // Auto-focus search input when page loads\n  useEffect(() => {\n    searchInputRef.current?.focus();\n  }, []);\n\n  // Filter projects when search query changes or projects load\n  useEffect(() => {\n    if (!searchQuery.trim()) {\n      setFilteredProjects([]);\n      return;\n    }\n\n    if (!projects || projects.length === 0) {\n      return;\n    }\n\n    const query = searchQuery.toLowerCase();\n    const matches = projects.filter(project => {\n      const title = project.title.toLowerCase();\n      const director = \"priya jha\";\n      const role = \"solo builder + marketer\";\n      \n      return title.includes(query) || \n             director.includes(query) || \n             role.includes(query) ||\n             project.technologies.some(tech => tech.toLowerCase().includes(query));\n    });\n\n    // Sort by relevance - title matches first\n    const sortedMatches = matches.sort((a, b) => {\n      const aTitle = a.title.toLowerCase();\n      const bTitle = b.title.toLowerCase();\n      const aExact = aTitle.includes(query);\n      const bExact = bTitle.includes(query);\n      \n      if (aExact && !bExact) return -1;\n      if (!aExact && bExact) return 1;\n      return aTitle.length - bTitle.length;\n    });\n\n    setFilteredProjects(sortedMatches);\n  }, [searchQuery, projects?.length]);\n\n  const handleClearSearch = () => {\n    setSearchQuery(\"\");\n    setFilteredProjects([]);\n    setLocation(\"/\");\n  };\n\n  const handleProjectClick = (projectId: string) => {\n    setSelectedProjectId(projectId);\n  };\n\n  // Close profile menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (profileMenuRef.current && !profileMenuRef.current.contains(event.target as Node)) {\n        setProfileMenuOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  const handleProfileMenuClick = (action: string) => {\n    setProfileMenuOpen(false);\n    \n    switch (action) {\n      case 'download-resume':\n        // Download the PDF resume directly\n        const resumeUrl = \"/attached_assets/FAROOQ%20CHISTY%20%20RESUME%202025%20%281%29_1754665051871.pdf\";\n        const link = document.createElement('a');\n        link.href = resumeUrl;\n        link.download = \"Farooq_Chisty_Resume_2025.pdf\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        break;\n      case 'work-with-me':\n      case 'invite-speaker':\n        // Navigate back to home and scroll to Hire Me section\n        setLocation('/');\n        setTimeout(() => {\n          const hireMeSection = document.getElementById('hire-me');\n          if (hireMeSection) {\n            hireMeSection.scrollIntoView({ behavior: 'smooth', block: 'start' });\n          }\n        }, 100);\n        break;\n      case 'connect-linkedin':\n        window.open(\"https://linkedin.com/in/farooqchisty\", \"_blank\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const scrollToSection = (sectionId: string) => {\n    // Navigate to home page first, then scroll to section\n    setLocation(\"/\");\n    setTimeout(() => {\n      const element = document.getElementById(sectionId);\n      if (element) {\n        element.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n      }\n    }, 100);\n    setMobileMenuOpen(false);\n  };\n\n  // Handle profile dropdown actions  \n  const handleProfileAction = (action: string) => {\n    setProfileMenuOpen(false);\n    \n    switch (action) {\n      case 'download-resume':\n        // Automatically download the resume\n        const link = document.createElement('a');\n        link.href = '/attached_assets/FAROOQ CHISTY  RESUME 2025 (1)_1754665051871.pdf';\n        link.download = 'Farooq_Chisty_Resume_2025.pdf';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        break;\n      case 'work-with-me':\n      case 'invite-speaker':\n        // Navigate to Contact/Hire Me page\n        setLocation('/contact');\n        break;\n      case 'connect-linkedin':\n        window.open(\"https://linkedin.com/in/farooqchisty\", \"_blank\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      {/* Fixed Navigation Bar */}\n      <nav className=\"fixed top-0 left-0 right-0 z-40 bg-[#141414] px-4 py-3\">\n        <div className=\"flex items-center justify-between max-w-7xl mx-auto w-full\">\n          {/* Logo and Navigation Links */}\n          <div className=\"flex items-center space-x-8\">\n            <img \n              src=\"/attached_assets/farooq-logo.png\" \n              alt=\"Farooq\" \n              className=\"h-8 sm:h-10 md:h-12 w-auto object-contain cursor-pointer\"\n              style={{ \n                maxHeight: 'clamp(2rem, 4vw, 3rem)',\n                filter: 'brightness(1.1) contrast(1.1)'\n              }}\n              onClick={() => setLocation(\"/\")}\n            />\n\n\n          </div>\n\n          {/* Search Bar - Center positioned */}\n          {/* Right side items */}\n          <div className=\"flex items-center space-x-2 sm:space-x-4\">\n            \n            {/* Mobile Menu Button */}\n            <div className=\"md:hidden\">\n              <button\n                onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n                className=\"p-2 hover:bg-white/10 rounded transition-all duration-200\"\n              >\n                <Menu className=\"w-5 h-5 text-white\" />\n              </button>\n            </div>\n\n            {/* Search Bar - Positioned prominently */}\n            <div className=\"relative flex-1 max-w-md mx-4\">\n              <div className=\"flex items-center bg-black/80 backdrop-blur border border-white/30 rounded-lg px-4 py-2.5\">\n                <Search className=\"w-5 h-5 text-gray-400 mr-3\" />\n                <input\n                  ref={searchInputRef}\n                  type=\"text\"\n                  placeholder=\"Search titles, people, genres...\"\n                  value={searchQuery}\n                  onChange={(e) => {\n                    setSearchQuery(e.target.value);\n                    // Update URL to reflect current search\n                    const newUrl = e.target.value.trim() \n                      ? `/netflix-search?q=${encodeURIComponent(e.target.value.trim())}`\n                      : '/netflix-search';\n                    window.history.replaceState({}, '', newUrl);\n                  }}\n                  className=\"bg-transparent text-white placeholder-gray-400 outline-none text-base w-full\"\n                />\n                {searchQuery && (\n                  <button\n                    onClick={handleClearSearch}\n                    className=\"ml-2 text-gray-400 hover:text-white transition-colors\"\n                  >\n                    <X className=\"w-4 h-4\" />\n                  </button>\n                )}\n              </div>\n            </div>\n            \n            {/* Profile Dropdown - Hidden on Mobile */}\n            <div className=\"relative hidden md:block\" ref={profileMenuRef}>\n              <button \n                onClick={() => setProfileMenuOpen(!profileMenuOpen)}\n                className=\"flex items-center space-x-2 p-2 hover:bg-white/10 rounded transition-all duration-200\"\n              >\n                <img \n                  src=\"/attached_assets/farooq-headshot.png\" \n                  alt=\"Farooq Chisty\" \n                  loading=\"lazy\"\n                  decoding=\"async\"\n                  className=\"w-8 h-8 rounded object-cover\"\n                />\n                <ChevronDown className={`w-4 h-4 transition-transform duration-200 ${profileMenuOpen ? 'rotate-180' : ''}`} />\n              </button>\n              \n              {/* Profile Dropdown Menu */}\n              <AnimatePresence>\n                {profileMenuOpen && (\n                  <motion.div\n                    initial={{ opacity: 0, y: -10, scale: 0.95 }}\n                    animate={{ opacity: 1, y: 0, scale: 1 }}\n                    exit={{ opacity: 0, y: -10, scale: 0.95 }}\n                    transition={{ duration: 0.2 }}\n                    className=\"absolute right-0 top-full mt-2 w-64 bg-black/95 backdrop-blur-sm border border-gray-700 rounded-md shadow-2xl overflow-hidden z-50\"\n                  >\n                    {/* Profile Section */}\n                    <div className=\"px-4 py-3 border-b border-gray-700\">\n                      <div className=\"flex items-center space-x-3\">\n                        <img \n                          src=\"/attached_assets/farooq-headshot.png\" \n                          alt=\"Farooq Chisty\" \n                          loading=\"lazy\"\n                          decoding=\"async\"\n                          className=\"w-10 h-10 rounded object-cover\"\n                        />\n                        <div>\n                          <p className=\"text-white font-medium text-sm\">Farooq Chisty</p>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* Menu Items */}\n                    <div className=\"py-2\">\n                      <button\n                        onClick={() => handleProfileAction('download-resume')}\n                        className=\"w-full flex items-center space-x-3 px-4 py-3 text-white hover:bg-gray-800/50 transition-colors text-left\"\n                      >\n                        <Download className=\"w-5 h-5\" />\n                        <span className=\"text-sm\">Download Resume</span>\n                      </button>\n                      \n                      <button\n                        onClick={() => handleProfileAction('work-with-me')}\n                        className=\"w-full flex items-center space-x-3 px-4 py-3 text-white hover:bg-gray-800/50 transition-colors text-left\"\n                      >\n                        <Briefcase className=\"w-5 h-5\" />\n                        <span className=\"text-sm\">Work with me</span>\n                      </button>\n                      \n                      <button\n                        onClick={() => handleProfileAction('invite-speaker')}\n                        className=\"w-full flex items-center space-x-3 px-4 py-3 text-white hover:bg-gray-800/50 transition-colors text-left\"\n                      >\n                        <Mic className=\"w-5 h-5\" />\n                        <span className=\"text-sm\">Invite as Speaker</span>\n                      </button>\n                      \n                      <button\n                        onClick={() => handleProfileAction('connect-linkedin')}\n                        className=\"w-full flex items-center space-x-3 px-4 py-3 text-white hover:bg-gray-800/50 transition-colors text-left\"\n                      >\n                        <Linkedin className=\"w-5 h-5\" />\n                        <span className=\"text-sm\">Connect on LinkedIn</span>\n                      </button>\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n          </div>\n        </div>\n\n\n\n        {/* Mobile Menu */}\n        <AnimatePresence>\n          {mobileMenuOpen && (\n            <motion.div\n              initial={{ opacity: 0, x: \"100%\" }}\n              animate={{ opacity: 1, x: 0 }}\n              exit={{ opacity: 0, x: \"100%\" }}\n              transition={{ duration: 0.3, ease: \"easeInOut\" }}\n              className=\"md:hidden fixed top-16 right-0 z-50\"\n            >\n              <div className=\"bg-[#141414] border border-gray-700 rounded-l-lg shadow-2xl\">\n                <div className=\"px-6 py-6 space-y-4\">\n                  {/* Mobile Navigation Links */}\n                  <button \n                    onClick={() => { setLocation(\"/\"); setMobileMenuOpen(false); }}\n                    className=\"block w-full text-right text-white hover:text-gray-300 transition-colors py-3 text-base font-medium\"\n                  >\n                    Home\n                  </button>\n                  <button \n                    onClick={() => { scrollToSection(\"projects\"); setMobileMenuOpen(false); }}\n                    className=\"block w-full text-right text-white hover:text-gray-300 transition-colors py-3 text-base font-medium\"\n                  >\n                    Projects\n                  </button>\n                  <button \n                    onClick={() => { scrollToSection(\"contact\"); setMobileMenuOpen(false); }}\n                    className=\"block w-full text-right text-white hover:text-gray-300 transition-colors py-3 text-base font-medium\"\n                  >\n                    Let's Chat\n                  </button>\n                  <button \n                    onClick={() => { window.open(\"https://linkedin.com/in/farooqchisty\", \"_blank\"); setMobileMenuOpen(false); }}\n                    className=\"block w-full text-right text-white hover:text-gray-300 transition-colors py-3 text-base font-medium\"\n                  >\n                    Hire Me\n                  </button>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </nav>\n\n      {/* Bottom Navigation Bar - Mobile Only */}\n      <div className=\"fixed bottom-0 left-0 right-0 z-40 md:hidden bg-[#141414] border-t border-gray-700\">\n        <div className=\"flex items-center justify-around py-1\">\n          {/* Home Button */}\n          <button\n            onClick={() => setLocation(\"/\")}\n            className=\"flex flex-col items-center py-1 px-2 hover:bg-white/10 rounded transition-all duration-200\"\n          >\n            <Home className=\"w-5 h-5 text-white mb-0.5\" />\n            <span className=\"text-xs text-white\">Home</span>\n          </button>\n\n          {/* Projects Button */}\n          <button\n            onClick={() => scrollToSection(\"projects\")}\n            className=\"flex flex-col items-center py-1 px-2 hover:bg-white/10 rounded transition-all duration-200\"\n          >\n            <Folder className=\"w-5 h-5 text-white mb-0.5\" />\n            <span className=\"text-xs text-white\">Projects</span>\n          </button>\n\n          {/* Profile Button */}\n          <div className=\"relative\">\n            <button\n              onClick={() => setProfileMenuOpen(!profileMenuOpen)}\n              className=\"flex flex-col items-center py-1 px-2 hover:bg-white/10 rounded transition-all duration-200\"\n            >\n              <img \n                src=\"/attached_assets/farooq-headshot.png\" \n                alt=\"Farooq Chisty\" \n                loading=\"lazy\"\n                decoding=\"async\"\n                className=\"w-5 h-5 rounded object-cover mb-0.5\"\n              />\n              <span className=\"text-xs text-white\">Profile</span>\n            </button>\n\n            {/* Mobile Profile Dropdown Menu */}\n            <AnimatePresence>\n              {profileMenuOpen && (\n                <motion.div\n                  initial={{ opacity: 0, y: 10, scale: 0.95 }}\n                  animate={{ opacity: 1, y: 0, scale: 1 }}\n                  exit={{ opacity: 0, y: 10, scale: 0.95 }}\n                  transition={{ duration: 0.2 }}\n                  className=\"absolute bottom-full mb-2 right-0 w-64 bg-black/95 backdrop-blur-sm border border-gray-700 rounded-md shadow-2xl overflow-hidden z-50\"\n                >\n                  <div className=\"p-4\">\n                    <div className=\"flex items-center space-x-3 mb-4 pb-4 border-b border-gray-700\">\n                      <img \n                        src=\"/attached_assets/farooq-headshot.png\" \n                        alt=\"Farooq Chisty\" \n                        loading=\"lazy\"\n                        decoding=\"async\"\n                        className=\"w-12 h-12 rounded object-cover\"\n                      />\n                      <div>\n                        <h3 className=\"text-white font-medium text-sm\">Farooq Chisty</h3>\n                        <p className=\"text-gray-400 text-xs\">Marketing & Growth Expert</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-1\">\n                      <button\n                        onClick={() => handleProfileAction('download-resume')}\n                        className=\"flex items-center space-x-3 w-full text-left text-white hover:text-red-400 transition-colors py-2 px-2 rounded hover:bg-white/10\"\n                      >\n                        <Download className=\"w-4 h-4\" />\n                        <span className=\"text-sm\">Download Resume</span>\n                      </button>\n                      \n                      <button\n                        onClick={() => handleProfileAction('work-with-me')}\n                        className=\"flex items-center space-x-3 w-full text-left text-white hover:text-red-400 transition-colors py-2 px-2 rounded hover:bg-white/10\"\n                      >\n                        <Briefcase className=\"w-4 h-4\" />\n                        <span className=\"text-sm\">Work with me</span>\n                      </button>\n                      \n                      <button\n                        onClick={() => handleProfileAction('invite-speaker')}\n                        className=\"flex items-center space-x-3 w-full text-left text-white hover:text-red-400 transition-colors py-2 px-2 rounded hover:bg-white/10\"\n                      >\n                        <Mic className=\"w-4 h-4\" />\n                        <span className=\"text-sm\">Invite as Speaker</span>\n                      </button>\n                      \n                      <button\n                        onClick={() => handleProfileAction('connect-linkedin')}\n                        className=\"flex items-center space-x-3 w-full text-left text-white hover:text-red-400 transition-colors py-2 px-2 rounded hover:bg-white/10\"\n                      >\n                        <Linkedin className=\"w-4 h-4\" />\n                        <span className=\"text-sm\">Connect on LinkedIn</span>\n                      </button>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"min-h-screen bg-[#141414] text-white pt-20 pb-20 md:pb-0\">\n        <div className=\"max-w-7xl mx-auto px-4 py-8\">\n          {/* Search Results */}\n          {searchQuery.trim() ? (\n            filteredProjects.length > 0 ? (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                {filteredProjects.map((project, index) => (\n                  <motion.div\n                    key={project.id}\n                    className=\"group cursor-pointer relative\"\n                    onClick={() => handleProjectClick(project.id)}\n                    onTouchStart={() => {}} // Enable touch interactions\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5, delay: index * 0.1 }}\n                    whileHover={{ \n                      scale: 1.05,\n                      transition: { duration: 0.3 }\n                    }}\n                    whileTap={{ scale: 0.98 }}\n                  >\n                    <div className=\"relative aspect-[16/9] rounded-lg overflow-hidden bg-gray-800 shadow-lg\">\n                      <img\n                        src={project.image}\n                        alt={project.title}\n                        className=\"w-full h-full object-cover transition-all duration-300 group-hover:brightness-110\"\n                        loading=\"lazy\"\n                      />\n                      \n                      {/* Hover/Touch Overlay */}\n                      <div className=\"absolute inset-0 bg-black/30 opacity-0 group-hover:opacity-100 transition-all duration-300 flex items-center justify-center\">\n                        <motion.div \n                          className=\"text-white text-sm font-medium px-4 py-2 bg-red-600 rounded-md backdrop-blur-sm border border-red-500\"\n                          initial={{ scale: 0.8, opacity: 0 }}\n                          whileInView={{ scale: 1, opacity: 1 }}\n                          transition={{ duration: 0.2 }}\n                        >\n                          View Details\n                        </motion.div>\n                      </div>\n                    </div>\n                    \n                    {/* Project Title */}\n                    <div className=\"mt-3\">\n                      <h3 className=\"text-white font-medium text-base group-hover:text-red-400 transition-colors duration-300\">{project.title}</h3>\n                      <p className=\"text-gray-400 text-sm mt-1 line-clamp-2\">{project.description}</p>\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center mt-20\">\n                <h2 className=\"text-white text-xl font-semibold\">No results found for \"{searchQuery}\"</h2>\n                <p className=\"text-gray-400 mt-2\">Try searching for a different title, person, or genre</p>\n              </div>\n            )\n          ) : (\n            <div className=\"text-center mt-20\">\n              <Search className=\"w-16 h-16 text-gray-600 mx-auto mb-4\" />\n              <h2 className=\"text-white text-xl font-semibold mb-2\">Search for projects</h2>\n              <p className=\"text-gray-400\">Start typing to find projects by title, director, or technology</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Netflix Modal */}\n      <NetflixModal\n        projectId={selectedProjectId}\n        onClose={() => setSelectedProjectId(null)}\n      />\n    </>\n  );\n}","size_bytes":23044},"client/src/components/netflix-modal.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Project } from \"@shared/schema\";\nimport { Button } from \"./ui/button\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { X, Play, Plus, Volume2, VolumeX, ThumbsUp, ChevronLeft, ChevronRight, Share, Copy, Check } from \"lucide-react\";\n\ninterface NetflixModalProps {\n  projectId: string | null;\n  onClose: () => void;\n  onProjectSwitch?: (projectId: string) => void;\n}\n\nexport default function NetflixModal({ projectId, onClose, onProjectSwitch }: NetflixModalProps) {\n  const [isMuted, setIsMuted] = useState(true);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n  const [showShareMenu, setShowShareMenu] = useState(false);\n  const [copiedProject, setCopiedProject] = useState(false);\n  const imageScrollRef = useRef<HTMLDivElement>(null);\n  const { toast } = useToast();\n\n  const { data: project, isLoading } = useQuery<Project>({\n    queryKey: [\"/api/projects\", projectId],\n    enabled: !!projectId,\n  });\n\n  // Reset image index and selected image when project changes\n  useEffect(() => {\n    setCurrentImageIndex(0);\n    setSelectedImage(null);\n  }, [projectId]);\n\n  const { data: featuredProjects = [] } = useQuery<Project[]>({\n    queryKey: [\"/api/projects/featured\"],\n  });\n\n  // Filter out current project from \"More Like This\" and limit to 6\n  const moreLikeThisProjects = featuredProjects\n    .filter(p => p.id !== projectId)\n    .slice(0, 6);\n\n  const handleProjectClick = (newProjectId: string) => {\n    if (onProjectSwitch) {\n      onProjectSwitch(newProjectId);\n    }\n  };\n\n  // Close share menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      const target = event.target as Element;\n      if (showShareMenu && !target.closest('[data-share-menu]')) {\n        setShowShareMenu(false);\n      }\n    };\n\n    if (showShareMenu) {\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [showShareMenu]);\n\n  const copyProjectLink = async () => {\n    if (!project) return;\n    \n    const projectUrl = `${window.location.origin}?project=${project.id}`;\n    try {\n      await navigator.clipboard.writeText(projectUrl);\n      setCopiedProject(true);\n      setTimeout(() => {\n        setCopiedProject(false);\n        setShowShareMenu(false);\n      }, 2000);\n      toast({\n        title: \"Link copied!\",\n        description: \"Project link has been copied to clipboard.\",\n      });\n    } catch (err) {\n      console.error('Failed to copy: ', err);\n      // Fallback for older browsers or failed clipboard access\n      try {\n        const textArea = document.createElement('textarea');\n        textArea.value = projectUrl;\n        textArea.style.position = 'fixed';\n        textArea.style.left = '-999999px';\n        textArea.style.top = '-999999px';\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        setCopiedProject(true);\n        setTimeout(() => {\n          setCopiedProject(false);\n          setShowShareMenu(false);\n        }, 2000);\n        toast({\n          title: \"Link copied!\",\n          description: \"Project link has been copied to clipboard.\",\n        });\n      } catch (fallbackErr) {\n        console.error('Fallback copy failed: ', fallbackErr);\n      }\n    }\n  };\n\n  const shareOnSocial = (platform: string) => {\n    if (!project) return;\n    \n    const projectUrl = encodeURIComponent(`${window.location.origin}?project=${project.id}`);\n    const text = encodeURIComponent(`Check out this project: ${project.title}`);\n    \n    let shareUrl = '';\n    switch (platform) {\n      case 'twitter':\n        shareUrl = `https://twitter.com/intent/tweet?text=${text}&url=${projectUrl}`;\n        break;\n      case 'linkedin':\n        shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${projectUrl}`;\n        break;\n      case 'whatsapp':\n        shareUrl = `https://wa.me/?text=${text}%20${projectUrl}`;\n        break;\n      case 'telegram':\n        shareUrl = `https://t.me/share/url?url=${projectUrl}&text=${text}`;\n        break;\n      case 'instagram':\n        // Instagram doesn't support direct URL sharing, so we'll copy to clipboard\n        navigator.clipboard.writeText(`${decodeURIComponent(text)} ${decodeURIComponent(projectUrl)}`);\n        setCopiedProject(true);\n        setTimeout(() => {\n          setCopiedProject(false);\n          setShowShareMenu(false);\n        }, 2000);\n        toast({\n          title: \"Link copied for Instagram!\",\n          description: \"Project link has been copied to clipboard for Instagram sharing.\",\n        });\n        return;\n    }\n    \n    if (shareUrl) {\n      window.open(shareUrl, '_blank', 'width=600,height=400');\n      setShowShareMenu(false);\n    }\n  };\n\n  // Use actual gallery images from project data, fallback to main image if no gallery\n  const projectImages = project?.gallery && project.gallery.length > 0 \n    ? project.gallery \n    : [project?.image || \"https://images.unsplash.com/photo-1461749280684-dccba630e2f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\"];\n\n  const scrollImages = (direction: 'left' | 'right') => {\n    const totalImages = projectImages.length;\n    const maxIndex = Math.max(0, totalImages - 2); // Maximum starting index for pairs\n\n    if (direction === 'right') {\n      setCurrentImageIndex(prev => Math.min(prev + 2, maxIndex));\n    } else {\n      setCurrentImageIndex(prev => Math.max(prev - 2, 0));\n    }\n  };\n\n  if (!projectId) return null;\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        key={`netflix-modal-${projectId}`}\n        className=\"fixed inset-0 bg-black/90 backdrop-blur-sm z-50 flex items-center justify-center p-4\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        onClick={onClose}\n      >\n        <motion.div\n          className=\"bg-[#141414] rounded-lg max-w-5xl w-full max-h-[95vh] overflow-y-auto relative mx-2 sm:mx-4\"\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          exit={{ scale: 0.9, opacity: 0 }}\n          transition={{ duration: 0.3 }}\n          onClick={(e) => e.stopPropagation()}\n        >\n          {isLoading ? (\n            <div className=\"text-center py-8\">\n              <div className=\"text-white text-xl\">Loading project details...</div>\n            </div>\n          ) : project ? (\n            <>\n              {/* Video/Image Header Section */}\n              <div className=\"video-header-section relative h-[40vh] sm:h-[50vh] md:h-[60vh] overflow-hidden rounded-t-lg\">\n                {project.video ? (\n                  <video\n                    src={project.video}\n                    className=\"w-full h-full object-cover\"\n                    autoPlay\n                    loop\n                    muted={isMuted}\n                    playsInline\n                    preload=\"metadata\"\n                    onError={(e) => {\n                      console.warn('Failed to load project video:', project.video);\n                    }}\n                  />\n                ) : (\n                  <img\n                    src={project.image}\n                    alt={project.title}\n                    loading=\"lazy\"\n                    className=\"w-full h-full object-cover\"\n                    onError={(e) => {\n                      console.warn('Failed to load project image:', project.image);\n                      e.currentTarget.src = \"https://images.unsplash.com/photo-1461749280684-dccba630e2f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\";\n                    }}\n                  />\n                )}\n                \n                {/* Video Controls Overlay */}\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-transparent to-transparent\">\n                  {/* Close Button */}\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={onClose}\n                    className=\"absolute top-4 right-4 text-white bg-black/70 hover:bg-black/90 rounded-full w-10 h-10 flex items-center justify-center backdrop-blur-sm\"\n                  >\n                    <X className=\"w-5 h-5\" />\n                  </Button>\n\n                  {/* Volume Control */}\n                  {project.video && (\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      onClick={() => setIsMuted(!isMuted)}\n                      className=\"absolute bottom-4 right-4 text-white hover:bg-white/20 rounded-full\"\n                    >\n                      {isMuted ? <VolumeX className=\"w-6 h-6\" /> : <Volume2 className=\"w-6 h-6\" />}\n                    </Button>\n                  )}\n\n                  {/* Project Title and Buttons - Bottom Left */}\n                  <div className=\"absolute bottom-4 sm:bottom-8 left-4 sm:left-8 right-4 sm:right-8\">\n                    <h1 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-white mb-3 sm:mb-6\">\n                      {project.title}\n                    </h1>\n                    \n                    <div className=\"flex flex-wrap items-center gap-2 sm:gap-4 mb-3 sm:mb-6\">\n                      {/* Restart Video Button */}\n                      <Button\n                        className=\"bg-white text-black hover:bg-white/90 font-semibold px-3 sm:px-6 py-2 text-sm sm:text-base\"\n                        onClick={() => {\n                          const video = document.querySelector('video');\n                          if (video) {\n                            video.currentTime = 0;\n                            video.play();\n                          }\n                        }}\n                      >\n                        <Play className=\"w-4 h-4 sm:w-5 sm:h-5 mr-1 sm:mr-2 fill-current\" />\n                        <span className=\"hidden sm:inline\">Restart Video</span>\n                        <span className=\"sm:hidden\">Play</span>\n                      </Button>\n\n                      {/* Add to List Button */}\n                      <Button\n                        variant=\"outline\"\n                        className=\"border-2 border-white/70 text-white bg-white/10 hover:bg-white/20 font-semibold px-3 sm:px-6 py-2 text-sm sm:text-base\"\n                      >\n                        <Plus className=\"w-4 h-4 sm:w-5 sm:h-5 mr-1 sm:mr-2\" />\n                        <span className=\"hidden sm:inline\">Add to List</span>\n                        <span className=\"sm:hidden\">List</span>\n                      </Button>\n\n                      {/* Like Icon */}\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        className=\"text-white hover:bg-white/20 rounded-full border-2 border-white/70\"\n                      >\n                        <ThumbsUp className=\"w-5 h-5\" />\n                      </Button>\n\n                      {/* Share Button */}\n                      <div className=\"relative\" data-share-menu>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          className=\"text-white hover:bg-white/20 rounded-full border-2 border-white/70\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            setShowShareMenu(!showShareMenu);\n                          }}\n                        >\n                          <Share className=\"w-5 h-5\" />\n                        </Button>\n                        \n                        {/* Share Dropdown Menu */}\n                        {showShareMenu && (\n                          <motion.div \n                            className=\"fixed bg-black/95 backdrop-blur-md rounded-lg p-1 w-[120px] xs:w-[130px] sm:w-[140px] md:w-[150px] border border-white/10 shadow-2xl\"\n                            style={{\n                              top: '60px',\n                              right: '10px',\n                              zIndex: 999999\n                            }}\n                            initial={{ opacity: 0, scale: 0.95, y: -10 }}\n                            animate={{ opacity: 1, scale: 1, y: 0 }}\n                            exit={{ opacity: 0, scale: 0.95, y: -10 }}\n                            transition={{ duration: 0.2 }}\n                          >\n                            <div className=\"space-y-0\">\n                              <button\n                                onClick={copyProjectLink}\n                                className=\"flex items-center space-x-1 w-full text-left text-white hover:text-red-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                              >\n                                {copiedProject ? (\n                                  <Check className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 text-green-400\" />\n                                ) : (\n                                  <Copy className=\"w-2.5 h-2.5 xs:w-3 xs:h-3\" />\n                                )}\n                                <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">\n                                  {copiedProject ? 'Copied!' : 'Copy Link'}\n                                </span>\n                              </button>\n                              \n                              <hr className=\"border-gray-600 my-0\" />\n                              \n                              <button\n                                onClick={() => shareOnSocial('linkedin')}\n                                className=\"flex items-center space-x-1 w-full text-left text-white hover:text-blue-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                              >\n                                <div className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 bg-blue-600 rounded-sm flex items-center justify-center\">\n                                  <span className=\"text-white text-[6px] xs:text-[7px] sm:text-[8px] font-bold\">in</span>\n                                </div>\n                                <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">LinkedIn</span>\n                              </button>\n                              \n                              <button\n                                onClick={() => shareOnSocial('twitter')}\n                                className=\"flex items-center space-x-1 w-full text-left text-white hover:text-blue-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                              >\n                                <div className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 bg-black rounded-sm flex items-center justify-center border border-white\">\n                                  <span className=\"text-white text-[6px] xs:text-[7px] sm:text-[8px] font-bold\">𝕏</span>\n                                </div>\n                                <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">Twitter</span>\n                              </button>\n                              \n                              <button\n                                onClick={() => shareOnSocial('whatsapp')}\n                                className=\"flex items-center space-x-1 w-full text-left text-white hover:text-green-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                              >\n                                <div className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 bg-green-500 rounded-sm flex items-center justify-center\">\n                                  <span className=\"text-white text-[6px] xs:text-[7px] sm:text-[8px] font-bold\">W</span>\n                                </div>\n                                <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">WhatsApp</span>\n                              </button>\n                              \n                              <button\n                                onClick={() => shareOnSocial('telegram')}\n                                className=\"flex items-center space-x-1 w-full text-left text-white hover:text-blue-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                              >\n                                <div className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 bg-blue-500 rounded-full flex items-center justify-center\">\n                                  <span className=\"text-white text-[6px] xs:text-[7px] sm:text-[8px] font-bold\">T</span>\n                                </div>\n                                <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">Telegram</span>\n                              </button>\n                              \n                              <button\n                                onClick={() => shareOnSocial('instagram')}\n                                className=\"flex items-center space-x-1 w-full text-left text-white hover:text-pink-400 transition-colors py-0.5 px-1 rounded hover:bg-white/10\"\n                              >\n                                <div className=\"w-2.5 h-2.5 xs:w-3 xs:h-3 bg-gradient-to-r from-purple-500 to-pink-500 rounded-sm flex items-center justify-center\">\n                                  <span className=\"text-white text-[6px] xs:text-[7px] sm:text-[8px] font-bold\">IG</span>\n                                </div>\n                                <span className=\"text-[8px] xs:text-[9px] sm:text-xs font-medium\">Instagram</span>\n                              </button>\n                            </div>\n                          </motion.div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Content Section */}\n              <div className=\"px-4 sm:px-6 md:px-8 py-6 sm:py-8 md:py-12 bg-[#141414]\">\n                {/* Container with max width and centering */}\n                <div className=\"w-full max-w-[1280px] mx-auto\">\n                  {/* Two Column Layout with Blue Neon Line Separator */}\n                  <div className=\"flex flex-col lg:flex-row\">\n                    {/* Left Column - All Content (2/3 width) */}\n                    <div className=\"w-full lg:w-2/3 pr-0 lg:pr-6 flex flex-col\">\n                      {/* Status Tags */}\n                      <div className=\"flex items-center gap-3 mb-6\">\n                        <span className=\"text-green-400 font-medium text-sm\">\n                          {project.status === \"live\" ? \"Live in production\" : \n                           project.status === \"completed\" ? \"Successfully Exited\" : \"In Development\"}\n                        </span>\n                        <span className=\"text-gray-400 text-sm\">\n                          {project.title === \"Cazpro\" \n                            ? \"2014-2015\" \n                            : project.title === \"Millionth Mile Marketing\"\n                            ? \"2017-2019\"\n                            : project.title === \"DigiPay\"\n                            ? \"2019-2021\"\n                            : project.title === \"Inventrax\"\n                            ? \"2022\"\n                            : project.title === \"FDX Sports\"\n                            ? \"2023\"\n                            : project.title === \"Codiste\"\n                            ? \"2024\"\n                            : project.title === \"ZO Labs\"\n                            ? \"2024-2025\"\n                            : project.title === \"Zentrades\"\n                            ? \"2023\"\n                            : project.title === \"InboxBites\"\n                            ? \"2024\"\n                            : project.title === \"Solgames\"\n                            ? \"2022-2023\"\n                            : project.title === \"Martian Wallet\"\n                            ? \"2023-2024\"\n                            : \"2025\"}\n                        </span>\n                        <span className=\"px-3 py-1 rounded-full border border-white text-white text-sm\">\n                          {project.title === \"Cazpro\" \n                            ? \"D2C Business\"\n                            : project.title === \"Millionth Mile Marketing\" \n                            ? \"Growth Agency\"\n                            : project.title === \"DigiPay\"\n                            ? \"Fintech Startup\"\n                            : project.title === \"Inventrax\"\n                            ? \"SEO Platform\"\n                            : project.title === \"FDX Sports\"\n                            ? \"E-commerce Brand\"\n                            : project.title === \"Codiste\"\n                            ? \"Marketing Agency\"\n                            : project.title === \"ZO Labs\"\n                            ? \"AI Startup\"\n                            : project.title === \"Zentrades\"\n                            ? \"B2B Marketing\"\n                            : project.title === \"InboxBites\"\n                            ? \"MicroSaaS/AI\"\n                            : project.title === \"Solgames\"\n                            ? \"GameFi/Web3\"\n                            : project.title === \"Martian Wallet\"\n                            ? \"Web3/DApp\"\n                            : project.title === \"GEOptimer\"\n                            ? \"AI SEO/SaaS\"\n                            : \"Web Application\"}\n                        </span>\n                      </div>\n\n                      {/* Main Title */}\n                      <h2 className=\"text-2xl md:text-3xl font-semibold text-white mb-8 leading-tight\">\n                        {project.title === \"Cazpro\" \n                          ? \"Built and scaled a leading college merch brand from zero to 2.5M INR in 15 months.\"\n                          : project.title === \"Millionth Mile Marketing\"\n                          ? \"Co-founded a top 5 Andhra Pradesh growth agency with 40+ global clients and $180K revenue in 2 years.\"\n                          : project.title === \"DigiPay\"\n                          ? \"Scaled from first marketing hire to $80M revenue and 28-person team in 19 months.\"\n                          : project.title === \"Inventrax\"\n                          ? \"Drove 600% organic traffic growth for warehouse automation SaaS in 4 months through strategic SEO.\"\n                          : project.title === \"FDX Sports\"\n                          ? \"Turbocharged FDX into million-dollar D2C brand, scaling from $10K to $120K/month in 6 months.\"\n                          : project.title === \"Codiste\"\n                          ? \"Fractional CMO who 4x'd marketing output and 2.5x'd sales response rates through team building and automation.\"\n                          : project.title === \"ZO Labs\"\n                          ? \"Head of Growth who scaled ZO Labs from stealth to 180K installs and built 100K+ community with 10K+ AI agents.\"\n                          : project.title === \"Zentrades\"\n                          ? \"Dropped into Zentrades as a marketing consultant, rewired their inbound engine, and took MQLs from single digits to 60 a month in 4 months.\"\n                          : project.title === \"InboxBites\"\n                          ? \"Solo-built InboxBites, a microSaaS AI agent for Gmail, transforming newsletter chaos into snackable, swipeable, 50-word knowledge bites.\"\n                          : project.title === \"Solgames\"\n                          ? \"Co-built Solgames, a GameFi dev toolkit, into a Solana hackathon winner and landed $150K in seed with 3K-strong dev/gamer community.\"\n                          : project.title === \"Martian Wallet\"\n                          ? \"Headed marketing at Martian Wallet, scaling installs by 50%, landing 400K+ new users, and doubling DApp transaction volumes from $1.2B to $2B.\"\n                          : project.title === \"GEOptimer\"\n                          ? \"Built AI-powered micro-SaaS for generative engine SEO with live MVP.\"\n                          : project.title === \"Growth Opportunity Agent\"\n                          ? \"AI-powered growth agent identifying untapped opportunities with precision analytics.\"\n                          : project.title === \"Internal Linking Agent\"\n                          ? \"Launching a plug-and-play internal linking agent for founders strapped on SEO budgets.\"\n                          : project.title === \"Content Automation (Reddit → LinkedIn)\"\n                          ? \"Automated my LinkedIn content pipeline by scraping Reddit for trending AI/agent pain points.\"\n                          : project.title === \"Blog Automation (Perplexity MCP)\"\n                          ? \"Built a flow to auto-repurpose trending articles via Perplexity MCP and RSS.\"\n                          : project.title === \"Lead Generator Agent (LinkedIn, Twitter, Reddit)\"\n                          ? \"Created an agent to scrape, filter, and funnel target profiles talking about specific pain points.\"\n                          : project.title === \"AGENTSY\"\n                          ? \"Sold over $2M in digital products via AGENTSY—performance marketing funnels at scale.\"\n                          : project.title === \"Reply Agent (Auto-Commenter)\"\n                          ? \"Engineering a Reply Agent that auto-generates and posts targeted replies across LinkedIn, Twitter, and Reddit.\"\n                          : \"Complex processes now run seamlessly.\"\n                        }\n                      </h2>\n\n                      {/* Detailed Description */}\n                      <p className=\"text-gray-300 text-base leading-relaxed\">\n                        {project.title === \"Cazpro\" \n                          ? \"Built and scaled Cazpro, a D2C college merch brand, from a dorm room idea at 17 to a 2.5M INR sales machine in 15 months. Survived near shutdowns, sold to a local industrialist, and handled everything from code to partnerships. Hustled hard, shipped harder.\"\n                          : project.title === \"Millionth Mile Marketing\"\n                          ? \"Co-founded a growth agency that became an Andhra Pradesh top 5, racking up 40+ global clients, 2 years, $180K revenue, and 25 teammates. Built teams, scaled campaigns, won awards, and hustled for brands from Vizag to Europe. Brought a bold attitude to every pitch.\"\n                          : project.title === \"DigiPay\"\n                          ? \"Joined as first marketing hire, scaled the team to 28, and helped take revenue from $4M to $80M in 19 months. Drove growth with everything from guerrilla tactics to field ops. Orchestrated viral B2B installs and led the brand through major funding rounds.\"\n                          : project.title === \"Inventrax\"\n                          ? \"Drove a 600% organic traffic jump for a warehouse automation SaaS in 4 months as a marketing consultant. Cracked the top 2 spots for three high-value keywords and turned traffic into leads with CRO and smart automation. Growth hacking, done right.\"\n                          : project.title === \"FDX Sports\"\n                          ? \"Turbocharged FDX into a million-dollar D2C brand in Europe. Drove sales from $10K to $120K/month in 6 months, spent half a million on ads, reworked CRO and email automation, and 2.5x'd average cart value. Did not just play the game, rewrote the playbook.\"\n                          : project.title === \"Codiste\"\n                          ? \"Fractional CMO who built, trained, and turbocharged the marketing and outbound sales teams. 4x'd marketing output, 2.5x'd sales response rates, and baked AI and programmatic SEO into their DNA. Set up every process from social to cold DMs, always optimizing for impact.\"\n                          : project.title === \"ZO Labs\"\n                          ? \"As Head of Growth, took ZO Labs from stealth to 180K installs, built a 100K+ community, and shipped 10,000+ AI agent landing pages. Ran AI-led marketing sprints, bagged 120+ partnerships, and put ZO on the global stage. All hustle, zero fluff.\"\n                          : project.title === \"Zentrades\"\n                          ? \"Dropped into Zentrades as a marketing consultant, rewired their inbound engine, and took MQLs from single digits to 60 a month in 4 months. Engineered a 125% traffic spike, built 5000+ SEO-rich landing pages, and turned a good CRM into a qualified lead machine.\"\n                          : project.title === \"InboxBites\"\n                          ? \"Solo-built InboxBites, a microSaaS AI agent for Gmail, transforming newsletter chaos into snackable, swipeable, 50-word knowledge bites. Architected 60%+ of the code, GTM, UI/UX, and product strategy in 6 weeks. Already has 200+ waitlisters—built for hustlers who hate inbox overload.\"\n                          : project.title === \"Solgames\"\n                          ? \"Co-built Solgames, a GameFi dev toolkit, into a Solana hackathon winner and landed $150K in seed. Rallied a 3K-strong dev/gamer community, ran hackathons with 1K+ participants, and delivered a live MVP in 3 months. Paused by market chaos, but left a mark.\"\n                          : project.title === \"Martian Wallet\"\n                          ? \"Headed marketing at Martian Wallet, scaling installs by 50%, landing 400K+ new users, and doubling DApp transaction volumes from $1.2B to $2B. Launched a DApp that hit $1M daily volume in a month, forged 50+ partnerships, and kept the Web3 world buzzing.\"\n                          : project.title === \"GEOptimer\"\n                          ? \"Founder and builder of GEOptimer, a micro-SaaS that scores and audits website content for LLM/AI engine visibility—think SEO for AI, not just search. Enter a URL, get a GEO Score, action-packed report, and clear next steps in seconds. Built for growth-obsessed marketers.\"\n                          : project.description\n                        }\n                      </p>\n\n                      {/* Project Gallery Section - Only show if gallery has images */}\n                      {projectImages && projectImages.length > 0 && (\n                        <div className=\"mt-8\">\n                          <h3 className=\"text-lg font-semibold text-white mb-4\">Project Gallery</h3>\n                          <div className=\"relative\">\n                            {/* Left Arrow - Only show if there are more than 2 images and we can scroll left */}\n                            {projectImages.length > 2 && currentImageIndex > 0 && (\n                              <button\n                                onClick={() => scrollImages('left')}\n                                className=\"absolute top-1/2 -translate-y-1/2 z-30 bg-black/70 hover:bg-black/90 text-white p-2 rounded-full transition-all duration-300 backdrop-blur-sm shadow-lg\"\n                                aria-label=\"Scroll left\"\n                                style={{ left: '8px' }}\n                              >\n                                <ChevronLeft className=\"w-4 h-4\" />\n                              </button>\n                            )}\n\n                            {/* Right Arrow - Only show if there are more than 2 images and we can scroll right */}  \n                            {projectImages.length > 2 && currentImageIndex < projectImages.length - 2 && (\n                              <button\n                                onClick={() => scrollImages('right')}\n                                className=\"absolute top-1/2 -translate-y-1/2 z-30 bg-black/70 hover:bg-black/90 text-white p-2 rounded-full transition-all duration-300 backdrop-blur-sm shadow-lg\"\n                                aria-label=\"Scroll right\"\n                                style={{ right: '8px' }}\n                              >\n                                <ChevronRight className=\"w-4 h-4\" />\n                              </button>\n                            )}\n\n                            {/* Images Container - Show up to 2 images */}\n                            <div\n                              ref={imageScrollRef}\n                              className=\"flex gap-3 pr-12\"\n                            >\n                              {projectImages.slice(currentImageIndex, currentImageIndex + 2).map((image, index) => {\n                                const isSingleVisibleImage = projectImages.slice(currentImageIndex, currentImageIndex + 2).length === 1;\n                                \n                                return (\n                                  <div \n                                    key={currentImageIndex + index} \n                                    className=\"flex-shrink-0\" \n                                    style={{ \n                                      width: isSingleVisibleImage ? '100%' : 'calc(50% - 6px)' \n                                    }}\n                                  >\n                                    <div className=\"w-full aspect-[16/9] overflow-hidden rounded-md\">\n                                      <img\n                                        src={image}\n                                        alt={`${project?.title} gallery image ${currentImageIndex + index + 1}`}\n                                        className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-200 cursor-pointer\"\n                                        draggable={false}\n                                        onClick={() => setSelectedImage(image)}\n                                        onError={(e) => {\n                                          console.warn('Failed to load gallery image:', image);\n                                          e.currentTarget.style.display = 'none';\n                                        }}\n                                      />\n                                    </div>\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n\n                    {/* Vertical Navy Blue Separator */}\n                    <div className=\"hidden lg:block w-px bg-navy-700 mx-6 opacity-50\" style={{backgroundColor: '#1e3a8a'}}></div>\n\n                    {/* Right Column - Project Details (1/3 width) */}\n                    <div className=\"w-full lg:w-1/3 pl-0 lg:pl-0 mt-8 lg:mt-0 space-y-6\">\n                      {/* Tech Stack - Using dynamic project data */}\n                      {project.technologies && Array.isArray(project.technologies) && project.technologies.length > 0 && (\n                        <div>\n                          <h4 className=\"font-medium text-white mb-3\">Tech Stack:</h4>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {project.technologies.map((tech) => (\n                              <span \n                                key={tech}\n                                className=\"rounded-full border border-white text-white px-3 py-1 text-sm inline-block\"\n                              >\n                                {tech}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n\n\n                      {/* Skills - Using dynamic project data */}\n                      {project.skills && Array.isArray(project.skills) && project.skills.length > 0 && (\n                        <div>\n                          <h4 className=\"font-medium text-white mb-2\">Skills:</h4>\n                          <p className=\"text-gray-400\">\n                            {project.skills.join(\", \")}\n                          </p>\n                        </div>\n                      )}\n\n                      {/* Goal - Using dynamic project data */}\n                      {project.goal && (\n                        <div>\n                          <h4 className=\"font-medium text-white mb-2\">Goal:</h4>\n                          <p className=\"text-gray-400\">\n                            {project.goal}\n                          </p>\n                        </div>\n                      )}\n\n\n\n\n\n                      {/* KPIs - Using dynamic project data */}\n                      {project.kpis && Array.isArray(project.kpis) && project.kpis.length > 0 && (\n                        <div>\n                          <h4 className=\"font-medium text-white mb-2\">KPIs:</h4>\n                          <p className=\"text-gray-400\">\n                            {project.kpis.join(\", \")}\n                          </p>\n                        </div>\n                      )}\n\n                      {/* Results - Using dynamic project data */}\n                      {project.results && (\n                        <div>\n                          <h4 className=\"font-medium text-white mb-2\">Results:</h4>\n                          <p className=\"text-gray-400\">\n                            {project.results}\n                          </p>\n                        </div>\n                      )}\n\n                      {/* Engagement Type - Using dynamic project data */}\n                      {project.engagementType && (\n                        <div>\n                          <h4 className=\"font-medium text-white mb-2\">Engagement Type:</h4>\n                          <p className=\"text-gray-400\">\n                            {project.engagementType}\n                          </p>\n                        </div>\n                      )}\n\n                      {/* Period - Using dynamic project data */}\n                      {project.period && (\n                        <div>\n                          <h4 className=\"font-medium text-white mb-2\">Period:</h4>\n                          <p className=\"text-gray-400\">\n                            {project.period}\n                          </p>\n                        </div>\n                      )}\n\n\n\n\n                    </div>\n                  </div>\n\n                  {/* More Like This Section */}\n                  <div className=\"mt-12\">\n                    <h3 className=\"text-white text-xl font-semibold mb-6\">\n                      More Like This\n                    </h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                      {moreLikeThisProjects.map((similarProject) => (\n                        <div\n                          key={similarProject.id}\n                          className=\"bg-[#2F2F2F] rounded-lg overflow-hidden cursor-pointer hover:scale-105 transition-transform duration-200 group relative\"\n                          onClick={() => {\n                            // First scroll to the video section to highlight the background video\n                            const videoSection = document.querySelector('.video-header-section');\n                            if (videoSection) {\n                              videoSection.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                            }\n                            // Then switch to the new project after a brief delay\n                            setTimeout(() => {\n                              handleProjectClick(similarProject.id);\n                            }, 500);\n                          }}\n                        >\n                          {/* Video hover preview */}\n                          {similarProject.video && (\n                            <video\n                              src={similarProject.video}\n                              className=\"absolute inset-0 w-full h-32 object-cover opacity-0 group-hover:opacity-100 transition-opacity duration-300\"\n                              autoPlay\n                              loop\n                              muted\n                              playsInline\n                              preload=\"none\"\n\n                              style={{\n                                aspectRatio: '16/9',\n                                objectFit: 'cover'\n                              }}\n                              onError={(e) => {\n                                console.warn('Failed to load similar project video:', similarProject.video);\n                              }}\n                            />\n                          )}\n                          <img\n                            src={`${similarProject.image}?v=${Date.now()}`}\n                            alt={similarProject.title}\n                            loading=\"lazy\"\n                            decoding=\"async\"\n                            fetchPriority=\"low\"\n                            sizes=\"(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw\"\n                            srcSet={`${similarProject.image}?w=400&q=80 400w, ${similarProject.image}?w=800&q=80 800w`}\n                            className=\"w-full h-32 object-cover group-hover:opacity-0 transition-opacity duration-300\"\n                            style={{\n                              aspectRatio: '16/9',\n                              objectFit: 'cover'\n                            }}\n                            onError={(e) => {\n                              console.warn('Failed to load similar project image:', similarProject.image);\n                              e.currentTarget.src = \"https://images.unsplash.com/photo-1461749280684-dccba630e2f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\";\n                            }}\n                          />\n                          <div className=\"p-4\">\n                            <div className=\"flex justify-between items-start mb-2\">\n                              <h4 className=\"text-white font-semibold text-sm line-clamp-1\">\n                                {similarProject.title}\n                              </h4>\n                              <div className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\n                                <Plus className=\"w-5 h-5 text-white border border-white rounded-full p-1\" />\n                              </div>\n                            </div>\n                            <div className=\"flex items-center gap-2 text-xs text-gray-400 mb-2\">\n                              <span>{similarProject.period || \"2025\"}</span>\n                              <span className=\"border border-gray-400 px-1 rounded text-xs\">\n                                {similarProject.engagementType || \"Professional\"}\n                              </span>\n                            </div>\n                            <p className=\"text-gray-300 text-xs line-clamp-2\">\n                              {similarProject.description.substring(0, 100)}...\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          ) : (\n            <div className=\"text-center py-8\">\n              <div className=\"text-white\">Project not found</div>\n            </div>\n          )}\n        </motion.div>\n      </motion.div>\n\n      {/* Image Modal */}\n      {selectedImage && (\n        <motion.div\n          key=\"image-modal-backdrop\"\n          className=\"fixed inset-0 bg-black/95 backdrop-blur-sm z-[60] flex items-center justify-center p-8\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          onClick={() => setSelectedImage(null)}\n        >\n          <motion.div\n            key=\"image-modal-content\"\n            className=\"relative flex items-center justify-center\"\n            style={{\n              maxWidth: 'calc(100vw - 80px)',\n              maxHeight: 'calc(100vh - 120px)',\n              width: 'fit-content',\n              height: 'fit-content'\n            }}\n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.9, opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            onClick={(e) => e.stopPropagation()}\n          >\n            {/* Close Button */}\n            <button\n              onClick={() => setSelectedImage(null)}\n              className=\"absolute -top-12 right-0 z-10 bg-black/70 hover:bg-black/90 text-white p-3 rounded-full transition-all duration-300 backdrop-blur-sm\"\n              aria-label=\"Close image\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n\n            {/* Full Size Image */}\n            <img\n              src={selectedImage}\n              alt=\"Project screenshot\"\n              className=\"block rounded-lg shadow-2xl\"\n              style={{ \n                maxWidth: 'calc(100vw - 80px)',\n                maxHeight: 'calc(100vh - 120px)',\n                width: 'auto',\n                height: 'auto',\n                objectFit: 'contain',\n                display: 'block'\n              }}\n              draggable={false}\n              onLoad={(e) => {\n                // Ensure image maintains aspect ratio and fits viewport\n                const img = e.target as HTMLImageElement;\n                const aspectRatio = img.naturalWidth / img.naturalHeight;\n                const maxWidth = window.innerWidth - 80;\n                const maxHeight = window.innerHeight - 120;\n                \n                if (aspectRatio > maxWidth / maxHeight) {\n                  // Image is wider - constrain by width\n                  img.style.width = `${Math.min(maxWidth, img.naturalWidth)}px`;\n                  img.style.height = 'auto';\n                } else {\n                  // Image is taller - constrain by height\n                  img.style.height = `${Math.min(maxHeight, img.naturalHeight)}px`;\n                  img.style.width = 'auto';\n                }\n              }}\n              onError={(e) => {\n                console.warn('Failed to load selected image:', selectedImage);\n                setSelectedImage(null);\n              }}\n            />\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n}","size_bytes":46238},"client/public/sw.js":{"content":"// Service Worker for Performance Optimization and Image Processing\nconst CACHE_NAME = 'farooq-portfolio-v2';\nconst CRITICAL_ASSETS = [\n  '/',\n  '/src/main.tsx',\n  '/src/index.css',\n  '/attached_assets/farooq-logo.png',\n  '/api/profile',\n  '/api/projects/featured'\n];\n\n// Image optimization parameters\nconst IMAGE_QUALITY = 85;\nconst MAX_IMAGE_WIDTH = 800;\n\n// Install event - cache critical assets\nself.addEventListener('install', (event) => {\n  event.waitUntil(\n    caches.open(CACHE_NAME).then((cache) => {\n      return cache.addAll(CRITICAL_ASSETS);\n    })\n  );\n  self.skipWaiting();\n});\n\n// Activate event - clean up old caches\nself.addEventListener('activate', (event) => {\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames.map((cacheName) => {\n          if (cacheName !== CACHE_NAME) {\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    })\n  );\n  self.clients.claim();\n});\n\n// Fetch event - serve from cache first, then network\nself.addEventListener('fetch', (event) => {\n  // Only cache GET requests\n  if (event.request.method !== 'GET') return;\n\n  // Skip caching for API requests (except critical ones)\n  if (event.request.url.includes('/api/') && \n      !CRITICAL_ASSETS.some(asset => event.request.url.includes(asset))) {\n    return;\n  }\n\n  event.respondWith(\n    caches.match(event.request).then((response) => {\n      // Return cached version or fetch from network\n      return response || fetch(event.request).then((fetchResponse) => {\n        // Don't cache non-successful responses\n        if (!fetchResponse || fetchResponse.status !== 200 || fetchResponse.type !== 'basic') {\n          return fetchResponse;\n        }\n\n        // Clone the response as it can only be read once\n        const responseToCache = fetchResponse.clone();\n\n        caches.open(CACHE_NAME).then((cache) => {\n          // Only cache critical assets and images\n          if (CRITICAL_ASSETS.includes(event.request.url) || \n              event.request.url.includes('/attached_assets/')) {\n            cache.put(event.request, responseToCache);\n          }\n        });\n\n        return fetchResponse;\n      });\n    })\n  );\n});","size_bytes":2199},"client/src/components/optimized-image.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\n\ninterface OptimizedImageProps {\n  src: string;\n  alt: string;\n  className?: string;\n  style?: React.CSSProperties;\n  loading?: \"lazy\" | \"eager\";\n  fetchpriority?: \"high\" | \"low\" | \"auto\";\n  sizes?: string;\n  onLoad?: () => void;\n  onError?: () => void;\n  draggable?: boolean;\n}\n\nexport default function OptimizedImage({\n  src,\n  alt,\n  className = \"\",\n  style = {},\n  loading = \"lazy\",\n  fetchpriority = \"auto\",\n  sizes,\n  onLoad,\n  onError,\n  draggable = false\n}: OptimizedImageProps) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    const img = imgRef.current;\n    if (!img) return;\n\n    // Intersection Observer for lazy loading optimization\n    if (loading === \"lazy\") {\n      const observer = new IntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n              // Start loading when image comes into view\n              img.src = src;\n              observer.unobserve(img);\n            }\n          });\n        },\n        {\n          rootMargin: \"50px\", // Start loading 50px before image is visible\n        }\n      );\n\n      observer.observe(img);\n      return () => observer.unobserve(img);\n    } else {\n      // Load immediately for eager images\n      img.src = src;\n    }\n  }, [src, loading]);\n\n  const handleLoad = () => {\n    setIsLoaded(true);\n    onLoad?.();\n  };\n\n  const handleError = () => {\n    setHasError(true);\n    onError?.();\n  };\n\n  return (\n    <div className=\"relative\">\n      {!isLoaded && !hasError && (\n        <div \n          className=\"absolute inset-0 bg-gray-800 animate-pulse flex items-center justify-center\"\n          style={style}\n        >\n          <div className=\"w-8 h-8 border-2 border-gray-600 border-t-white rounded-full animate-spin\" />\n        </div>\n      )}\n      \n      <img\n        ref={imgRef}\n        alt={alt}\n        className={`${className} ${isLoaded ? 'opacity-100' : 'opacity-0'} transition-opacity duration-300`}\n        style={{\n          ...style,\n          aspectRatio: style.aspectRatio || 'auto'\n        }}\n        loading={loading}\n        decoding=\"async\"\n        fetchPriority={fetchpriority}\n        sizes={sizes}\n        draggable={draggable}\n        onLoad={handleLoad}\n        onError={handleError}\n      />\n      \n      {hasError && (\n        <div \n          className=\"absolute inset-0 bg-gray-800 flex items-center justify-center text-gray-400 text-sm\"\n          style={style}\n        >\n          Failed to load image\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":2687},"client/src/components/optimized-profile-image.tsx":{"content":"import { useState } from \"react\";\n\ninterface OptimizedProfileImageProps {\n  src: string;\n  alt: string;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\n/**\n * Highly optimized profile image component to fix the 2MB headshot issue\n * This addresses the critical PageSpeed issue where farooq-headshot.png was 2MB for 20x25px display\n */\nexport default function OptimizedProfileImage({\n  src,\n  alt,\n  className = \"\",\n  style = {}\n}: OptimizedProfileImageProps) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  // Generate multiple sizes for different pixel densities\n  const sizes = \"25px\"; // Actual display size\n  const srcSet = [\n    `${src}?w=25&h=30&q=85 1x`, // Standard density (25x30px)\n    `${src}?w=50&h=60&q=85 2x`, // Retina density (50x60px)\n    `${src}?w=75&h=90&q=85 3x`  // High DPI (75x90px)\n  ].join(', ');\n\n  return (\n    <div className=\"relative inline-block\">\n      {!isLoaded && !hasError && (\n        <div \n          className=\"absolute inset-0 bg-gray-800 animate-pulse rounded-full\"\n          style={style}\n        />\n      )}\n      \n      <img\n        src={`${src}?w=50&h=60&q=85&f=webp`} // Fallback with WebP optimization\n        srcSet={srcSet}\n        sizes={sizes}\n        alt={alt}\n        className={`${className} ${isLoaded ? 'opacity-100' : 'opacity-0'} transition-opacity duration-300`}\n        style={{\n          ...style,\n          width: '25px',\n          height: '30px',\n          objectFit: 'cover'\n        }}\n        loading=\"eager\" // Profile image should load immediately\n        decoding=\"async\"\n        fetchPriority=\"high\"\n        draggable={false}\n        onLoad={() => setIsLoaded(true)}\n        onError={() => setHasError(true)}\n      />\n      \n      {hasError && (\n        <div \n          className=\"absolute inset-0 bg-gray-600 rounded-full flex items-center justify-center text-gray-300 text-xs\"\n          style={style}\n        >\n          ?\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":2000},"client/src/components/search-bar.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Search, X } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\ninterface SearchBarProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSearch: (query: string) => void;\n}\n\nexport default function SearchBar({ isOpen, onClose, onSearch }: SearchBarProps) {\n  const [query, setQuery] = useState(\"\");\n  const [, setLocation] = useLocation();\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isOpen]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (query.trim()) {\n      onSearch(query.trim());\n      setLocation(`/search?q=${encodeURIComponent(query.trim())}`);\n      onClose();\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Escape\") {\n      onClose();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-start justify-center pt-20\">\n      <div className=\"w-full max-w-2xl mx-4\">\n        <form onSubmit={handleSubmit} className=\"relative\">\n          <div className=\"flex items-center bg-black/80 border border-white/30 rounded-md\">\n            <Search className=\"w-6 h-6 text-white ml-4\" />\n            <input\n              ref={inputRef}\n              type=\"text\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              onKeyDown={handleKeyDown}\n              placeholder=\"titles, people, genres\"\n              className=\"flex-1 bg-transparent text-white placeholder-gray-400 px-4 py-3 text-lg outline-none\"\n            />\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"p-3 text-white hover:text-gray-300 transition-colors\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}","size_bytes":1990},"client/src/components/search-overlay.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Search, X } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\ninterface SearchOverlayProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function SearchOverlay({ isOpen, onClose }: SearchOverlayProps) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [, setLocation] = useLocation();\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  // Auto-focus when overlay opens\n  useEffect(() => {\n    if (isOpen && searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }, [isOpen]);\n\n  // Clear search when overlay closes\n  useEffect(() => {\n    if (!isOpen) {\n      setSearchQuery(\"\");\n    }\n  }, [isOpen]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (searchQuery.trim()) {\n      // Redirect to Netflix search page with the query\n      setLocation(`/netflix-search?q=${encodeURIComponent(searchQuery.trim())}`);\n      onClose();\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          className=\"fixed inset-0 bg-black/90 backdrop-blur-sm z-50 flex items-start justify-center pt-20\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          transition={{ duration: 0.3 }}\n          onClick={onClose}\n        >\n          <motion.div\n            className=\"w-full max-w-2xl mx-4\"\n            initial={{ y: -50, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ y: -50, opacity: 0 }}\n            transition={{ duration: 0.3, delay: 0.1 }}\n            onClick={(e) => e.stopPropagation()}\n          >\n            <form onSubmit={handleSubmit}>\n              <div className=\"relative\">\n                <div className=\"flex items-center bg-transparent border-2 border-white rounded-lg px-4 py-4\">\n                  <Search className=\"w-8 h-8 text-white mr-4 flex-shrink-0\" />\n                  <input\n                    ref={searchInputRef}\n                    type=\"text\"\n                    placeholder=\"Search for titles, people, genres...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    onKeyDown={handleKeyDown}\n                    className=\"flex-1 bg-transparent text-white text-2xl placeholder-gray-400 outline-none\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={onClose}\n                    className=\"ml-4 text-white hover:text-gray-300 transition-colors flex-shrink-0\"\n                  >\n                    <X className=\"w-8 h-8\" />\n                  </button>\n                </div>\n              </div>\n            </form>\n\n            {/* Search suggestions or instructions */}\n            {searchQuery.trim() && (\n              <motion.div\n                className=\"mt-4 text-center\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.2 }}\n              >\n                <p className=\"text-gray-400 text-sm\">\n                  Press Enter to search for \"{searchQuery}\"\n                </p>\n              </motion.div>\n            )}\n          </motion.div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n}","size_bytes":3495},"client/src/hooks/use-performance-observer.ts":{"content":"import { useEffect } from 'react';\n\n/**\n * Performance monitoring hook to track Core Web Vitals and optimize accordingly\n */\nexport const usePerformanceObserver = () => {\n  useEffect(() => {\n    // Monitor Largest Contentful Paint (LCP)\n    if ('PerformanceObserver' in window) {\n      const lcpObserver = new PerformanceObserver((list) => {\n        const entries = list.getEntries();\n        const lastEntry = entries[entries.length - 1];\n        \n        if (lastEntry.startTime > 2500) {\n          console.warn('LCP is slow:', lastEntry.startTime, 'ms. Consider optimizing images.');\n        }\n      });\n      \n      lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] });\n\n      // Monitor Cumulative Layout Shift (CLS)\n      const clsObserver = new PerformanceObserver((list) => {\n        let clsValue = 0;\n        list.getEntries().forEach((entry: any) => {\n          if (!entry.hadRecentInput) {\n            clsValue += entry.value;\n          }\n        });\n        \n        if (clsValue > 0.1) {\n          console.warn('CLS is high:', clsValue, '. Consider adding explicit dimensions to images.');\n        }\n      });\n      \n      clsObserver.observe({ entryTypes: ['layout-shift'] });\n\n      // Monitor First Input Delay (FID) / Interaction to Next Paint (INP)\n      const fidObserver = new PerformanceObserver((list) => {\n        list.getEntries().forEach((entry: any) => {\n          if (entry.processingStart - entry.startTime > 100) {\n            console.warn('Slow interaction detected:', entry.processingStart - entry.startTime, 'ms');\n          }\n        });\n      });\n      \n      fidObserver.observe({ entryTypes: ['first-input'] });\n\n      return () => {\n        lcpObserver.disconnect();\n        clsObserver.disconnect();\n        fidObserver.disconnect();\n      };\n    }\n  }, []);\n};\n\n/**\n * Hook to preload critical resources above the fold\n */\nexport const useResourcePreloader = (criticalImages: string[]) => {\n  useEffect(() => {\n    // Preload critical images that are above the fold\n    criticalImages.slice(0, 3).forEach((src, index) => {\n      const link = document.createElement('link');\n      link.rel = 'preload';\n      link.as = 'image';\n      link.href = `${src}?w=276&q=85&f=webp`;\n      link.fetchPriority = index < 2 ? 'high' : 'low';\n      document.head.appendChild(link);\n    });\n  }, [criticalImages]);\n};\n\n/**\n * Hook to optimize video loading based on connection speed\n */\nexport const useVideoOptimization = () => {\n  useEffect(() => {\n    // Check network information if available\n    const connection = (navigator as any).connection || (navigator as any).mozConnection || (navigator as any).webkitConnection;\n    \n    if (connection) {\n      const isSlowConnection = connection.effectiveType === 'slow-2g' || connection.effectiveType === '2g';\n      \n      if (isSlowConnection) {\n        // Disable autoplay videos on slow connections\n        document.querySelectorAll('video[autoplay]').forEach((video: any) => {\n          video.removeAttribute('autoplay');\n          video.preload = 'none';\n        });\n      }\n    }\n  }, []);\n};","size_bytes":3085},"client/src/pages/lets-chat.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { useEffect } from \"react\";\nimport Header from \"@/components/header\";\n\nexport default function LetsChatPage() {\n  // Load Calendly script\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://assets.calendly.com/assets/external/widget.js';\n    script.async = true;\n    document.body.appendChild(script);\n    \n    return () => {\n      // Clean up script when component unmounts\n      document.body.removeChild(script);\n    };\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <Header />\n      \n      {/* Main Content */}\n      <main className=\"pt-24 pb-20\">\n        <div className=\"px-4 sm:px-6 md:px-12 lg:px-16 xl:px-20\">\n          \n          {/* Calendly Scheduling Section */}\n          <motion.div\n            className=\"text-center\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            {/* Calendly Embed */}\n            <div className=\"bg-white rounded-xl overflow-hidden shadow-2xl max-w-4xl mx-auto\">\n              <div \n                className=\"calendly-inline-widget\" \n                data-url=\"https://calendly.com/farooqsheik52543\" \n                style={{minWidth: '320px', height: '700px'}}\n              ></div>\n            </div>\n          </motion.div>\n\n        </div>\n      </main>\n    </div>\n  );\n}","size_bytes":1446},"client/src/pages/search.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type Project } from \"@shared/schema\";\nimport Header from \"@/components/header\";\nimport NetflixModal from \"@/components/netflix-modal\";\n\nexport default function SearchPage() {\n  const [location] = useLocation();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredProjects, setFilteredProjects] = useState<Project[]>([]);\n  const [selectedProjectId, setSelectedProjectId] = useState<string | null>(null);\n\n  // Extract search query from URL\n  useEffect(() => {\n    const urlParams = new URLSearchParams(location.split('?')[1] || '');\n    const query = urlParams.get('q') || '';\n    setSearchQuery(query);\n  }, [location]);\n\n  // Fetch all projects\n  const { data: projects = [] } = useQuery<Project[]>({\n    queryKey: ['/api/projects'],\n  });\n\n  // Filter and sort projects based on search query\n  useEffect(() => {\n    if (!searchQuery || !projects?.length) {\n      setFilteredProjects([]);\n      return;\n    }\n\n    const query = searchQuery.toLowerCase();\n    const matches = projects.filter(project => {\n      const title = project.title.toLowerCase();\n      const director = \"priya jha\"; // All projects have same director\n      const role = \"solo builder + marketer\"; // All projects have same role\n      \n      return title.includes(query) || \n             director.includes(query) || \n             role.includes(query) ||\n             project.technologies.some(tech => tech.toLowerCase().includes(query));\n    });\n\n    // Sort by relevance - exact title matches first, then partial matches\n    const sortedMatches = matches.sort((a, b) => {\n      const aTitle = a.title.toLowerCase();\n      const bTitle = b.title.toLowerCase();\n      const aExact = aTitle.includes(query);\n      const bExact = bTitle.includes(query);\n      \n      if (aExact && !bExact) return -1;\n      if (!aExact && bExact) return 1;\n      \n      // If both or neither are exact matches, sort by title length (shorter first for closer matches)\n      return aTitle.length - bTitle.length;\n    });\n\n    setFilteredProjects(sortedMatches);\n  }, [searchQuery, projects?.length]);\n\n  const handleProjectClick = (projectId: string) => {\n    setSelectedProjectId(projectId);\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"min-h-screen bg-[#141414] text-white pt-20\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Search Results Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-2xl font-semibold mb-2\">\n            Search results for \"{searchQuery}\"\n          </h1>\n          <p className=\"text-gray-400\">\n            {filteredProjects.length} result{filteredProjects.length !== 1 ? 's' : ''} found\n          </p>\n        </div>\n\n        {/* Results Grid */}\n        {filteredProjects.length > 0 ? (\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\n            {filteredProjects.map((project, index) => (\n              <div\n                key={project.id}\n                className=\"group cursor-pointer transition-all duration-300 hover:scale-105\"\n                onClick={() => handleProjectClick(project.id)}\n              >\n                <div className=\"relative aspect-[16/9] rounded-lg overflow-hidden bg-gray-800\">\n                  <img\n                    src={project.image}\n                    alt={project.title}\n                    className=\"w-full h-full object-cover transition-opacity group-hover:opacity-75\"\n                  />\n                  \n                  {/* Best Match Badge for first result */}\n                  {index === 0 && (\n                    <div className=\"absolute top-2 left-2 bg-red-600 text-white text-xs font-semibold px-2 py-1 rounded\">\n                      Best Match\n                    </div>\n                  )}\n                  \n                  {/* Status Badge */}\n                  <div className=\"absolute top-2 right-2\">\n                    {project.status === \"live\" ? (\n                      <div className=\"bg-green-600 text-white text-xs font-medium px-2 py-1 rounded\">\n                        Live\n                      </div>\n                    ) : (\n                      <div className=\"bg-gray-600 text-white text-xs font-medium px-2 py-1 rounded\">\n                        Coming Soon\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Hover Overlay */}\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                    <div className=\"absolute bottom-4 left-4 right-4\">\n                      <h3 className=\"text-white font-semibold text-sm mb-1 line-clamp-1\">\n                        {project.title}\n                      </h3>\n                      <div className=\"flex flex-wrap gap-1 mb-2\">\n                        {project.technologies.slice(0, 2).map((tech) => (\n                          <span \n                            key={tech}\n                            className=\"text-xs bg-white/20 text-white px-2 py-1 rounded\"\n                          >\n                            {tech === \"React & Next.js\" ? \"React\" : \n                             tech === \"Node.js & Express\" ? \"Node.js\" : tech}\n                          </span>\n                        ))}\n                      </div>\n                      <p className=\"text-gray-300 text-xs line-clamp-2\">\n                        {project.description.substring(0, 100)}...\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : searchQuery ? (\n          <div className=\"text-center py-20\">\n            <h2 className=\"text-xl font-semibold mb-4\">No results found</h2>\n            <p className=\"text-gray-400 mb-6\">\n              Try searching for a different title, director, or role\n            </p>\n            <div className=\"text-sm text-gray-500\">\n              <p>Search suggestions:</p>\n              <div className=\"flex flex-wrap justify-center gap-2 mt-2\">\n                <span className=\"bg-gray-800 px-3 py-1 rounded\">Trip Planner</span>\n                <span className=\"bg-gray-800 px-3 py-1 rounded\">AI Interview</span>\n                <span className=\"bg-gray-800 px-3 py-1 rounded\">Priya Jha</span>\n                <span className=\"bg-gray-800 px-3 py-1 rounded\">React</span>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center py-20\">\n            <h2 className=\"text-xl font-semibold mb-4\">Start your search</h2>\n            <p className=\"text-gray-400\">\n              Enter a title, director name, or role to find projects\n            </p>\n          </div>\n        )}\n      </div>\n      </div>\n\n      {/* Netflix Modal */}\n      <NetflixModal\n        projectId={selectedProjectId}\n        onClose={() => setSelectedProjectId(null)}\n      />\n    </>\n  );\n}","size_bytes":7098},"client/src/utils/image-optimizer.ts":{"content":"// Image optimization utilities to address PageSpeed performance issues\n\n/**\n * Get optimized image sizes based on display context\n */\nexport const getOptimizedImageSizes = (context: 'thumbnail' | 'hero' | 'modal' | 'profile') => {\n  switch (context) {\n    case 'thumbnail':\n      // Project thumbnails displayed at 176x117px\n      return {\n        width: 176,\n        height: 117,\n        sizes: \"(max-width: 768px) 240px, (max-width: 1024px) 252px, (max-width: 1280px) 276px, 276px\"\n      };\n    case 'hero':\n      // Hero background video/image\n      return {\n        width: 1920,\n        height: 1080,\n        sizes: \"100vw\"\n      };\n    case 'modal':\n      // Modal gallery images\n      return {\n        width: 800,\n        height: 600,\n        sizes: \"(max-width: 768px) 100vw, (max-width: 1024px) 80vw, 60vw\"\n      };\n    case 'profile':\n      // Profile headshot (critical optimization needed - was 2MB for 20x25px display)\n      return {\n        width: 40, // Double the display size for retina\n        height: 50,\n        sizes: \"25px\" // Actual display size is 20x25px\n      };\n    default:\n      return {\n        width: 400,\n        height: 300,\n        sizes: \"400px\"\n      };\n  }\n};\n\n/**\n * Generate optimized srcset for responsive images\n */\nexport const generateSrcSet = (baseSrc: string, widths: number[]) => {\n  return widths\n    .map(width => `${baseSrc}?w=${width} ${width}w`)\n    .join(', ');\n};\n\n/**\n * Create optimized image URL with compression and format hints\n */\nexport const optimizeImageUrl = (src: string, options: {\n  width?: number;\n  height?: number;\n  quality?: number;\n  format?: 'webp' | 'avif' | 'jpeg';\n}) => {\n  // For static assets, we'll add query parameters for optimization hints\n  const url = new URL(src, window.location.origin);\n  \n  if (options.width) url.searchParams.set('w', options.width.toString());\n  if (options.height) url.searchParams.set('h', options.height.toString());\n  if (options.quality) url.searchParams.set('q', options.quality.toString());\n  if (options.format) url.searchParams.set('f', options.format);\n  \n  return url.toString();\n};\n\n/**\n * Intersection Observer for lazy loading optimization\n */\nexport const createLazyLoadObserver = (callback: (entries: IntersectionObserverEntry[]) => void) => {\n  if (!('IntersectionObserver' in window)) {\n    // Fallback for older browsers\n    return null;\n  }\n\n  return new IntersectionObserver(callback, {\n    rootMargin: '50px', // Start loading 50px before visible\n    threshold: 0.1\n  });\n};\n\n/**\n * Preload critical images to improve LCP\n */\nexport const preloadCriticalImages = (imageSrcs: string[]) => {\n  imageSrcs.forEach((src, index) => {\n    const link = document.createElement('link');\n    link.rel = 'preload';\n    link.as = 'image';\n    link.href = src;\n    if (index < 3) {\n      link.setAttribute('fetchpriority', 'high');\n    }\n    document.head.appendChild(link);\n  });\n};\n\n/**\n * Optimize images for mobile performance\n */\nexport const getMobileOptimizedImage = (src: string, displayWidth: number) => {\n  // For mobile, use 2x pixel density but cap at reasonable size\n  const optimizedWidth = Math.min(displayWidth * 2, 600);\n  return optimizeImageUrl(src, {\n    width: optimizedWidth,\n    quality: 80,\n    format: 'webp'\n  });\n};","size_bytes":3258},"client/src/utils/performance.ts":{"content":"// Performance optimization utilities\n\n// Intersection Observer for lazy loading\nexport const createLazyObserver = (callback: (entries: IntersectionObserverEntry[]) => void) => {\n  return new IntersectionObserver(callback, {\n    rootMargin: '50px 0px',\n    threshold: 0.1\n  });\n};\n\n// Preload critical assets\nexport const preloadImage = (src: string): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve();\n    img.onerror = reject;\n    img.src = src;\n  });\n};\n\n// Debounce function for performance\nexport const debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): ((...args: Parameters<T>) => void) => {\n  let timeout: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n// Throttle function for scroll events\nexport const throttle = <T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): ((...args: Parameters<T>) => void) => {\n  let inThrottle: boolean;\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};","size_bytes":1228}}}